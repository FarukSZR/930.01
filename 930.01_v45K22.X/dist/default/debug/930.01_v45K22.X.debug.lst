

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Aug 08 15:45:23 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71  0000                     
    72                           ; Version 2.20
    73                           ; Generated 05/05/2020 GMT
    74                           ; 
    75                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F45K22 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	eeprom_data
   108  F00000  1E 0A 04 00 00 00 00 00 	db	30,10,4,0,0,0,0,0	;# 
   109  0000                     
   110                           	psect	idataBANK0
   111  004A0A                     __pidataBANK0:
   112                           	callstack 0
   113                           
   114                           ;initializer for _KD
   115  004A0A  0000               	dw	0
   116  004A0C  3F80               	dw	16256
   117                           
   118                           ;initializer for _KP
   119  004A0E  CCCD               	dw	52429
   120  004A10  3E4C               	dw	15948
   121  0000                     _ANSELBbits	set	3897
   122  0000                     _ANSELCbits	set	3898
   123  0000                     _ANSELB	set	3897
   124  0000                     _ANSELDbits	set	3899
   125  0000                     _ANSELEbits	set	3900
   126  0000                     _ANSELAbits	set	3896
   127  0000                     _T0CON	set	4053
   128  0000                     _TMR0L	set	4054
   129  0000                     _TMR0H	set	4055
   130  0000                     _INTCONbits	set	4082
   131  0000                     _CCPR2L	set	3943
   132  0000                     _CCPR1L	set	4030
   133  0000                     _PR2	set	4027
   134  0000                     _TMR2	set	4028
   135  0000                     _T2CONbits	set	4026
   136  0000                     _CCP2CON	set	3942
   137  0000                     _CCP1CON	set	4029
   138  0000                     _LATEbits	set	3981
   139  0000                     _LATAbits	set	3977
   140  0000                     _LATBbits	set	3978
   141  0000                     _PORTBbits	set	3969
   142  0000                     _TRISCbits	set	3988
   143  0000                     _TRISBbits	set	3987
   144  0000                     _OSCTUNEbits	set	3995
   145  0000                     _OSCCONbits	set	4051
   146  0000                     _TRISDbits	set	3989
   147  0000                     _PORTAbits	set	3968
   148  0000                     _PORTEbits	set	3972
   149  0000                     _PORTDbits	set	3971
   150  0000                     _PIR2bits	set	4001
   151  0000                     _EECON2	set	4007
   152  0000                     _EEDATA	set	4008
   153  0000                     _EECON1bits	set	4006
   154  0000                     _EEADR	set	4009
   155  0000                     _ADCON2bits	set	4032
   156  0000                     _ADCON1	set	4033
   157  0000                     _ADCON0	set	4034
   158  0000                     _TRISEbits	set	3990
   159  0000                     _TRISAbits	set	3986
   160  0000                     _ADRESL	set	4035
   161  0000                     _ADRESH	set	4036
   162  0000                     _ADCON0bits	set	4034
   163                           
   164                           	psect	smallconst
   165  000600                     __psmallconst:
   166                           	callstack 0
   167  000600  00                 	db	0
   168  000601                     STR_4:
   169  000601  25                 	db	37
   170  000602  64                 	db	100	;'d'
   171  000603  20                 	db	32
   172  000604  20                 	db	32
   173  000605  20                 	db	32
   174  000606  20                 	db	32
   175  000607  20                 	db	32
   176  000608  20                 	db	32
   177  000609  20                 	db	32
   178  00060A  20                 	db	32
   179  00060B  20                 	db	32
   180  00060C  20                 	db	32
   181  00060D  20                 	db	32
   182  00060E  20                 	db	32
   183  00060F  20                 	db	32
   184  000610  20                 	db	32
   185  000611  20                 	db	32
   186  000612  00                 	db	0
   187  000613                     STR_13:
   188  000613  50                 	db	80	;'P'
   189  000614  49                 	db	73	;'I'
   190  000615  44                 	db	68	;'D'
   191  000616  20                 	db	32
   192  000617  50                 	db	80	;'P'
   193  000618  41                 	db	65	;'A'
   194  000619  52                 	db	82	;'R'
   195  00061A  41                 	db	65	;'A'
   196  00061B  4D                 	db	77	;'M'
   197  00061C  20                 	db	32
   198  00061D  20                 	db	32
   199  00061E  20                 	db	32
   200  00061F  20                 	db	32
   201  000620  20                 	db	32
   202  000621  20                 	db	32
   203  000622  20                 	db	32
   204  000623  00                 	db	0
   205  000624                     STR_7:
   206  000624  48                 	db	72	;'H'
   207  000625  49                 	db	73	;'I'
   208  000626  5A                 	db	90	;'Z'
   209  000627  20                 	db	32
   210  000628  4C                 	db	76	;'L'
   211  000629  69                 	db	105	;'i'
   212  00062A  4D                 	db	77	;'M'
   213  00062B  69                 	db	105	;'i'
   214  00062C  54                 	db	84	;'T'
   215  00062D  69                 	db	105	;'i'
   216  00062E  20                 	db	32
   217  00062F  20                 	db	32
   218  000630  20                 	db	32
   219  000631  20                 	db	32
   220  000632  20                 	db	32
   221  000633  20                 	db	32
   222  000634  00                 	db	0
   223  000635                     STR_1:
   224  000635  4B                 	db	75	;'K'
   225  000636  41                 	db	65	;'A'
   226  000637  4C                 	db	76	;'L'
   227  000638  41                 	db	65	;'A'
   228  000639  4E                 	db	78	;'N'
   229  00063A  20                 	db	32
   230  00063B  5A                 	db	90	;'Z'
   231  00063C  41                 	db	65	;'A'
   232  00063D  4D                 	db	77	;'M'
   233  00063E  41                 	db	65	;'A'
   234  00063F  4E                 	db	78	;'N'
   235  000640  20                 	db	32
   236  000641  20                 	db	32
   237  000642  20                 	db	32
   238  000643  20                 	db	32
   239  000644  20                 	db	32
   240  000645  00                 	db	0
   241  000646                     STR_9:
   242  000646  5A                 	db	90	;'Z'
   243  000647  41                 	db	65	;'A'
   244  000648  4D                 	db	77	;'M'
   245  000649  41                 	db	65	;'A'
   246  00064A  4E                 	db	78	;'N'
   247  00064B  20                 	db	32
   248  00064C  44                 	db	68	;'D'
   249  00064D  4F                 	db	79	;'O'
   250  00064E  4C                 	db	76	;'L'
   251  00064F  44                 	db	68	;'D'
   252  000650  55                 	db	85	;'U'
   253  000651  20                 	db	32
   254  000652  20                 	db	32
   255  000653  20                 	db	32
   256  000654  20                 	db	32
   257  000655  20                 	db	32
   258  000656  00                 	db	0
   259  000657                     STR_11:
   260  000657  48                 	db	72	;'H'
   261  000658  41                 	db	65	;'A'
   262  000659  52                 	db	82	;'R'
   263  00065A  45                 	db	69	;'E'
   264  00065B  4B                 	db	75	;'K'
   265  00065C  45                 	db	69	;'E'
   266  00065D  54                 	db	84	;'T'
   267  00065E  20                 	db	32
   268  00065F  44                 	db	68	;'D'
   269  000660  55                 	db	85	;'U'
   270  000661  52                 	db	82	;'R'
   271  000662  44                 	db	68	;'D'
   272  000663  55                 	db	85	;'U'
   273  000664  20                 	db	32
   274  000665  20                 	db	32
   275  000666  20                 	db	32
   276  000667  00                 	db	0
   277  000668                     STR_3:
   278  000668  48                 	db	72	;'H'
   279  000669  41                 	db	65	;'A'
   280  00066A  52                 	db	82	;'R'
   281  00066B  45                 	db	69	;'E'
   282  00066C  4B                 	db	75	;'K'
   283  00066D  54                 	db	84	;'T'
   284  00066E  20                 	db	32
   285  00066F  5A                 	db	90	;'Z'
   286  000670  41                 	db	65	;'A'
   287  000671  4D                 	db	77	;'M'
   288  000672  41                 	db	65	;'A'
   289  000673  4E                 	db	78	;'N'
   290  000674  49                 	db	73	;'I'
   291  000675  20                 	db	32
   292  000676  64                 	db	100	;'d'
   293  000677  6B                 	db	107	;'k'
   294  000678  00                 	db	0
   295  000679                     STR_5:
   296  000679  44                 	db	68	;'D'
   297  00067A  55                 	db	85	;'U'
   298  00067B  52                 	db	82	;'R'
   299  00067C  4D                 	db	77	;'M'
   300  00067D  41                 	db	65	;'A'
   301  00067E  20                 	db	32
   302  00067F  5A                 	db	90	;'Z'
   303  000680  41                 	db	65	;'A'
   304  000681  4D                 	db	77	;'M'
   305  000682  41                 	db	65	;'A'
   306  000683  4E                 	db	78	;'N'
   307  000684  49                 	db	73	;'I'
   308  000685  20                 	db	32
   309  000686  20                 	db	32
   310  000687  6D                 	db	109	;'m'
   311  000688  73                 	db	115	;'s'
   312  000689  00                 	db	0
   313  00068A                     STR_10:
   314  00068A  20                 	db	32
   315  00068B  20                 	db	32
   316  00068C  20                 	db	32
   317  00068D  20                 	db	32
   318  00068E  20                 	db	32
   319  00068F  20                 	db	32
   320  000690  25                 	db	37
   321  000691  64                 	db	100	;'d'
   322  000692  3A                 	db	58	;':'
   323  000693  25                 	db	37
   324  000694  64                 	db	100	;'d'
   325  000695  20                 	db	32
   326  000696  20                 	db	32
   327  000697  20                 	db	32
   328  000698  20                 	db	32
   329  000699  00                 	db	0
   330  00069A                     STR_2:
   331  00069A  20                 	db	32
   332  00069B  20                 	db	32
   333  00069C  20                 	db	32
   334  00069D  20                 	db	32
   335  00069E  20                 	db	32
   336  00069F  20                 	db	32
   337  0006A0  25                 	db	37
   338  0006A1  64                 	db	100	;'d'
   339  0006A2  3A                 	db	58	;':'
   340  0006A3  25                 	db	37
   341  0006A4  64                 	db	100	;'d'
   342  0006A5  20                 	db	32
   343  0006A6  20                 	db	32
   344  0006A7  20                 	db	32
   345  0006A8  00                 	db	0
   346  0006A9                     STR_14:
   347  0006A9  4B                 	db	75	;'K'
   348  0006AA  70                 	db	112	;'p'
   349  0006AB  3A                 	db	58	;':'
   350  0006AC  25                 	db	37
   351  0006AD  35                 	db	53	;'5'
   352  0006AE  2E                 	db	46
   353  0006AF  31                 	db	49	;'1'
   354  0006B0  66                 	db	102	;'f'
   355  0006B1  20                 	db	32
   356  0006B2  20                 	db	32
   357  0006B3  20                 	db	32
   358  0006B4  20                 	db	32
   359  0006B5  20                 	db	32
   360  0006B6  00                 	db	0
   361  0006B7                     STR_16:
   362  0006B7  4B                 	db	75	;'K'
   363  0006B8  64                 	db	100	;'d'
   364  0006B9  3A                 	db	58	;':'
   365  0006BA  25                 	db	37
   366  0006BB  35                 	db	53	;'5'
   367  0006BC  2E                 	db	46
   368  0006BD  31                 	db	49	;'1'
   369  0006BE  66                 	db	102	;'f'
   370  0006BF  20                 	db	32
   371  0006C0  20                 	db	32
   372  0006C1  20                 	db	32
   373  0006C2  20                 	db	32
   374  0006C3  00                 	db	0
   375  0006C4                     STR_17:
   376  0006C4  49                 	db	73	;'I'
   377  0006C5  4E                 	db	78	;'N'
   378  0006C6  46                 	db	70	;'F'
   379  0006C7  00                 	db	0
   380  0006C8                     STR_21:
   381  0006C8  4E                 	db	78	;'N'
   382  0006C9  41                 	db	65	;'A'
   383  0006CA  4E                 	db	78	;'N'
   384  0006CB  00                 	db	0
   385  0006CC                     STR_18:
   386  0006CC  69                 	db	105	;'i'
   387  0006CD  6E                 	db	110	;'n'
   388  0006CE  66                 	db	102	;'f'
   389  0006CF  00                 	db	0
   390  0006D0                     STR_22:
   391  0006D0  6E                 	db	110	;'n'
   392  0006D1  61                 	db	97	;'a'
   393  0006D2  6E                 	db	110	;'n'
   394  0006D3  00                 	db	0
   395  0006D4                     STR_25:
   396  0006D4  6C                 	db	108	;'l'
   397  0006D5  66                 	db	102	;'f'
   398  0006D6  00                 	db	0
   399  0006D7  00                 	db	0	; dummy byte at the end
   400  0000                     
   401                           ; #config settings
   402                           
   403                           	psect	cinit
   404  0046FA                     __pcinit:
   405                           	callstack 0
   406  0046FA                     start_initialization:
   407                           	callstack 0
   408  0046FA                     __initialization:
   409                           	callstack 0
   410                           
   411                           ; Initialize objects allocated to BANK0 (8 bytes)
   412                           ; load TBLPTR registers with __pidataBANK0
   413  0046FA  0E0A               	movlw	low __pidataBANK0
   414  0046FC  6EF6               	movwf	tblptrl,c
   415  0046FE  0E4A               	movlw	high __pidataBANK0
   416  004700  6EF7               	movwf	tblptrh,c
   417  004702  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   418  004704  6EF8               	movwf	tblptru,c
   419  004706  EE00  F0F6         	lfsr	0,__pdataBANK0
   420  00470A  EE10 F008          	lfsr	1,8
   421  00470E                     copy_data0:
   422  00470E  0009               	tblrd		*+
   423  004710  CFF5 FFEE          	movff	tablat,postinc0
   424  004714  50E5               	movf	postdec1,w,c
   425  004716  50E1               	movf	fsr1l,w,c
   426  004718  E1FA               	bnz	copy_data0
   427                           
   428                           ; Clear objects allocated to BANK1 (251 bytes)
   429  00471A  EE01  F000         	lfsr	0,__pbssBANK1
   430  00471E  0EFB               	movlw	251
   431  004720                     clear_0:
   432  004720  6AEE               	clrf	postinc0,c
   433  004722  06E8               	decf	wreg,f,c
   434  004724  E1FD               	bnz	clear_0
   435                           
   436                           ; Clear objects allocated to BANK0 (48 bytes)
   437  004726  EE00  F0C6         	lfsr	0,__pbssBANK0
   438  00472A  0E30               	movlw	48
   439  00472C                     clear_1:
   440  00472C  6AEE               	clrf	postinc0,c
   441  00472E  06E8               	decf	wreg,f,c
   442  004730  E1FD               	bnz	clear_1
   443                           
   444                           ; Clear objects allocated to COMRAM (1 bytes)
   445  004732  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   446  004734                     end_of_initialization:
   447                           	callstack 0
   448  004734                     __end_of__initialization:
   449                           	callstack 0
   450  004734  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   451  004736  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   452  004738  0E00               	movlw	low (__Lmediumconst shr (0+16))
   453  00473A  6EF8               	movwf	tblptru,c
   454  00473C  0100               	movlb	0
   455  00473E  EF43  F01F         	goto	_main	;jump to C main() function
   456                           
   457                           	psect	bssCOMRAM
   458  00005E                     __pbssCOMRAM:
   459                           	callstack 0
   460  00005E                     _button_bounce_controller:
   461                           	callstack 0
   462  00005E                     	ds	1
   463                           
   464                           	psect	bssBANK0
   465  0000C6                     __pbssBANK0:
   466                           	callstack 0
   467  0000C6                     _driver_limit:
   468                           	callstack 0
   469  0000C6                     	ds	12
   470  0000D2                     _timer_value:
   471                           	callstack 0
   472  0000D2                     	ds	10
   473  0000DC                     floorf@F524:
   474                           	callstack 0
   475  0000DC                     	ds	4
   476  0000E0                     ___fpclassifyf@F463:
   477                           	callstack 0
   478  0000E0                     	ds	4
   479  0000E4                     _menu_value:
   480                           	callstack 0
   481  0000E4                     	ds	3
   482  0000E7                     _nout:
   483                           	callstack 0
   484  0000E7                     	ds	2
   485  0000E9                     _width:
   486                           	callstack 0
   487  0000E9                     	ds	2
   488  0000EB                     _prec:
   489                           	callstack 0
   490  0000EB                     	ds	2
   491  0000ED                     _flags:
   492                           	callstack 0
   493  0000ED                     	ds	2
   494  0000EF                     stateMachine@secretMenuCounter:
   495                           	callstack 0
   496  0000EF                     	ds	1
   497  0000F0                     _menu_flags:
   498                           	callstack 0
   499  0000F0                     	ds	1
   500  0000F1                     _menu_selected:
   501                           	callstack 0
   502  0000F1                     	ds	1
   503  0000F2                     _stopIsClick:
   504                           	callstack 0
   505  0000F2                     	ds	1
   506  0000F3                     _startIsClick:
   507                           	callstack 0
   508  0000F3                     	ds	1
   509  0000F4                     _pauseIsClick:
   510                           	callstack 0
   511  0000F4                     	ds	1
   512  0000F5                     _timer_counter_flag:
   513                           	callstack 0
   514  0000F5                     	ds	1
   515                           
   516                           	psect	dataBANK0
   517  0000F6                     __pdataBANK0:
   518                           	callstack 0
   519  0000F6                     _KD:
   520                           	callstack 0
   521  0000F6                     	ds	4
   522  0000FA                     _KP:
   523                           	callstack 0
   524  0000FA                     	ds	4
   525                           
   526                           	psect	bssBANK1
   527  000100                     __pbssBANK1:
   528                           	callstack 0
   529  000100                     _convert_data:
   530                           	callstack 0
   531  000100                     	ds	48
   532  000130                     _procces_data:
   533                           	callstack 0
   534  000130                     	ds	32
   535  000150                     _controller:
   536                           	callstack 0
   537  000150                     	ds	19
   538  000163                     	ds	16
   539  000173                     	ds	16
   540  000183                     _textCursor2:
   541                           	callstack 0
   542  000183                     	ds	16
   543  000193                     _adc_raw_data:
   544                           	callstack 0
   545  000193                     	ds	16
   546  0001A3                     fabsf@F463:
   547                           	callstack 0
   548  0001A3                     	ds	4
   549  0001A7                     _counter:
   550                           	callstack 0
   551  0001A7                     	ds	4
   552  0001AB                     _dbuf:
   553                           	callstack 0
   554  0001AB                     	ds	80
   555                           
   556                           	psect	cstackBANK0
   557  000060                     __pcstackBANK0:
   558                           	callstack 0
   559  000060                     efgtoa@ou:
   560                           	callstack 0
   561                           
   562                           ; 4 bytes @ 0x0
   563  000060                     	ds	4
   564  000064                     _efgtoa$2869:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x4
   568  000064                     	ds	2
   569  000066                     _efgtoa$2870:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x6
   573  000066                     	ds	2
   574  000068                     _efgtoa$2874:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x8
   578  000068                     	ds	2
   579  00006A                     _efgtoa$2878:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0xA
   583  00006A                     	ds	2
   584  00006C                     _efgtoa$2879:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0xC
   588  00006C                     	ds	2
   589  00006E                     _efgtoa$2880:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0xE
   593  00006E                     	ds	2
   594  000070                     efgtoa@t:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x10
   598  000070                     	ds	2
   599  000072                     efgtoa@pp:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x12
   603  000072                     	ds	2
   604  000074                     efgtoa@m:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x14
   608  000074                     	ds	2
   609  000076                     efgtoa@ne:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x16
   613  000076                     	ds	2
   614  000078                     efgtoa@d:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x18
   618  000078                     	ds	2
   619  00007A                     efgtoa@sign:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x1A
   623  00007A                     	ds	2
   624  00007C                     efgtoa@p:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x1C
   628  00007C                     	ds	2
   629  00007E                     efgtoa@nmode:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x1E
   633  00007E                     	ds	1
   634  00007F                     efgtoa@w:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x1F
   638  00007F                     	ds	2
   639  000081                     efgtoa@mode:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0x21
   643  000081                     	ds	1
   644  000082                     efgtoa@h:
   645                           	callstack 0
   646                           
   647                           ; 4 bytes @ 0x22
   648  000082                     	ds	4
   649  000086                     efgtoa@l:
   650                           	callstack 0
   651                           
   652                           ; 4 bytes @ 0x26
   653  000086                     	ds	4
   654  00008A                     efgtoa@i:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x2A
   658  00008A                     	ds	2
   659  00008C                     efgtoa@g:
   660                           	callstack 0
   661                           
   662                           ; 4 bytes @ 0x2C
   663  00008C                     	ds	4
   664  000090                     efgtoa@e:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x30
   668  000090                     	ds	2
   669  000092                     efgtoa@n:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x32
   673  000092                     	ds	2
   674  000094                     efgtoa@u:
   675                           	callstack 0
   676                           
   677                           ; 4 bytes @ 0x34
   678  000094                     	ds	4
   679  000098                     vfpfcnvrt@ll:
   680                           	callstack 0
   681                           
   682                           ; 8 bytes @ 0x38
   683  000098                     	ds	8
   684  0000A0                     _vfpfcnvrt$2894:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x40
   688  0000A0                     	ds	2
   689  0000A2                     _vfpfcnvrt$2895:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x42
   693  0000A2                     	ds	2
   694  0000A4                     _vfpfcnvrt$2900:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x44
   698  0000A4                     	ds	2
   699  0000A6                     vfpfcnvrt@f:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x46
   703  0000A6                     	ds	4
   704  0000AA                     vfpfcnvrt@ct:
   705                           	callstack 0
   706                           
   707                           ; 3 bytes @ 0x4A
   708  0000AA                     	ds	3
   709  0000AD                     vfpfcnvrt@c:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x4D
   713  0000AD                     	ds	1
   714  0000AE                     ?_sprintf:
   715                           	callstack 0
   716  0000AE                     sprintf@s:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x4E
   720  0000AE                     	ds	2
   721  0000B0                     sprintf@fmt:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x50
   725  0000B0                     	ds	6
   726  0000B6                     stateMachine@textCursor2:
   727                           	callstack 0
   728                           
   729                           ; 16 bytes @ 0x56
   730  0000B6                     	ds	16
   731                           
   732                           	psect	cstackCOMRAM
   733  000001                     __pcstackCOMRAM:
   734                           	callstack 0
   735  000001                     ?_strlen:
   736                           	callstack 0
   737  000001                     ?___fpclassifyf:
   738                           	callstack 0
   739  000001                     ?_isupper:
   740                           	callstack 0
   741  000001                     ?_isdigit:
   742                           	callstack 0
   743  000001                     ?_strncmp:
   744                           	callstack 0
   745  000001                     ?_isspace:
   746                           	callstack 0
   747  000001                     ?___wmul:
   748                           	callstack 0
   749  000001                     ?___awdiv:
   750                           	callstack 0
   751  000001                     ?___awmod:
   752                           	callstack 0
   753  000001                     ?___fladd:
   754                           	callstack 0
   755  000001                     ?___fldiv:
   756                           	callstack 0
   757  000001                     ?___flmul:
   758                           	callstack 0
   759  000001                     ?___flneg:
   760                           	callstack 0
   761  000001                     ?___fltol:
   762                           	callstack 0
   763  000001                     ?___aodiv:
   764                           	callstack 0
   765  000001                     ?___aomod:
   766                           	callstack 0
   767  000001                     eepromRead@address:
   768                           	callstack 0
   769  000001                     eepromWrite@data:
   770                           	callstack 0
   771  000001                     Lcd_Port@a:
   772                           	callstack 0
   773  000001                     ___wmul@multiplier:
   774                           	callstack 0
   775  000001                     ___awdiv@dividend:
   776                           	callstack 0
   777  000001                     ___awmod@dividend:
   778                           	callstack 0
   779  000001                     isdigit@c:
   780                           	callstack 0
   781  000001                     isspace@c:
   782                           	callstack 0
   783  000001                     isupper@c:
   784                           	callstack 0
   785  000001                     fputc@c:
   786                           	callstack 0
   787  000001                     strcpy@dest:
   788                           	callstack 0
   789  000001                     strlen@s:
   790                           	callstack 0
   791  000001                     strncmp@_l:
   792                           	callstack 0
   793  000001                     ___fleq@ff1:
   794                           	callstack 0
   795  000001                     ___flneg@f1:
   796                           	callstack 0
   797  000001                     ___fltol@f1:
   798                           	callstack 0
   799  000001                     ___fladd@b:
   800                           	callstack 0
   801  000001                     ___fldiv@b:
   802                           	callstack 0
   803  000001                     ___flmul@b:
   804                           	callstack 0
   805  000001                     ___fpclassifyf@x:
   806                           	callstack 0
   807  000001                     ___aodiv@dividend:
   808                           	callstack 0
   809  000001                     ___aomod@dividend:
   810                           	callstack 0
   811  000001                     buttonControlFlags@textCursor2:
   812                           	callstack 0
   813                           
   814                           ; 16 bytes @ 0x0
   815  000001                     	ds	1
   816  000002                     ??_system_init:
   817  000002                     ??_Lcd_Cmd:
   818  000002                     eepromWrite@address:
   819                           	callstack 0
   820  000002                     Lcd_Write_Char@temp:
   821                           	callstack 0
   822                           
   823                           ; 1 bytes @ 0x1
   824  000002                     	ds	1
   825  000003                     ??_isupper:
   826  000003                     ??_isdigit:
   827  000003                     ??_isspace:
   828  000003                     Lcd_Cmd@a:
   829                           	callstack 0
   830  000003                     Lcd_Write_Char@y:
   831                           	callstack 0
   832  000003                     ___wmul@multiplicand:
   833                           	callstack 0
   834  000003                     ___awdiv@divisor:
   835                           	callstack 0
   836  000003                     ___awmod@divisor:
   837                           	callstack 0
   838  000003                     fputc@fp:
   839                           	callstack 0
   840  000003                     strcpy@src:
   841                           	callstack 0
   842  000003                     strlen@a:
   843                           	callstack 0
   844  000003                     strncmp@_r:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0x2
   848  000003                     	ds	1
   849  000004                     ??_lcd_init:
   850  000004                     Lcd_Set_Cursor@b:
   851                           	callstack 0
   852  000004                     Lcd_Write_Char@a:
   853                           	callstack 0
   854                           
   855                           ; 1 bytes @ 0x3
   856  000004                     	ds	1
   857  000005                     ??_fputc:
   858  000005                     ??___fpclassifyf:
   859  000005                     ??_strcpy:
   860  000005                     ??___fltol:
   861  000005                     Lcd_Set_Cursor@a:
   862                           	callstack 0
   863  000005                     ___awdiv@counter:
   864                           	callstack 0
   865  000005                     ___awmod@counter:
   866                           	callstack 0
   867  000005                     Lcd_Write_String@a:
   868                           	callstack 0
   869  000005                     ___wmul@product:
   870                           	callstack 0
   871  000005                     strncmp@n:
   872                           	callstack 0
   873  000005                     ___fleq@ff2:
   874                           	callstack 0
   875  000005                     ___fladd@a:
   876                           	callstack 0
   877  000005                     ___fldiv@a:
   878                           	callstack 0
   879  000005                     ___flmul@a:
   880                           	callstack 0
   881                           
   882                           ; 4 bytes @ 0x4
   883  000005                     	ds	1
   884  000006                     Lcd_Set_Cursor@z:
   885                           	callstack 0
   886  000006                     ___awdiv@sign:
   887                           	callstack 0
   888  000006                     ___awmod@sign:
   889                           	callstack 0
   890                           
   891                           ; 1 bytes @ 0x5
   892  000006                     	ds	1
   893  000007                     ??_strncmp:
   894  000007                     ??_Lcd_Write_String:
   895  000007                     ?_tolower:
   896                           	callstack 0
   897  000007                     Lcd_Set_Cursor@y:
   898                           	callstack 0
   899  000007                     _isspace$2967:
   900                           	callstack 0
   901  000007                     ___awdiv@quotient:
   902                           	callstack 0
   903  000007                     strcpy@s:
   904                           	callstack 0
   905  000007                     tolower@c:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x6
   909  000007                     	ds	1
   910  000008                     ?_atoi:
   911                           	callstack 0
   912  000008                     Lcd_Set_Cursor@temp:
   913                           	callstack 0
   914  000008                     atoi@s:
   915                           	callstack 0
   916  000008                     strncmp@l:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x7
   920  000008                     	ds	1
   921  000009                     ??___fladd:
   922  000009                     ??___fldiv:
   923  000009                     ??___flmul:
   924  000009                     ??_tolower:
   925  000009                     ??___fleq:
   926  000009                     ___fltol@sign1:
   927                           	callstack 0
   928  000009                     Lcd_Write_String@i:
   929                           	callstack 0
   930  000009                     ___fpclassifyf@e:
   931                           	callstack 0
   932  000009                     strcpy@d:
   933                           	callstack 0
   934  000009                     ___aodiv@divisor:
   935                           	callstack 0
   936  000009                     ___aomod@divisor:
   937                           	callstack 0
   938                           
   939                           ; 8 bytes @ 0x8
   940  000009                     	ds	1
   941  00000A                     ??_atoi:
   942  00000A                     ___fltol@exp1:
   943                           	callstack 0
   944  00000A                     fputs@s:
   945                           	callstack 0
   946  00000A                     strncmp@r:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x9
   950  00000A                     	ds	1
   951  00000B                     ___fpclassifyf@u:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0xA
   955  00000B                     	ds	1
   956  00000C                     fputs@fp:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0xB
   960  00000C                     	ds	1
   961  00000D                     ___fladd@signs:
   962                           	callstack 0
   963  00000D                     ___flmul@sign:
   964                           	callstack 0
   965  00000D                     _tolower$3031:
   966                           	callstack 0
   967  00000D                     ___fldiv@rem:
   968                           	callstack 0
   969                           
   970                           ; 4 bytes @ 0xC
   971  00000D                     	ds	1
   972  00000E                     ___fladd@aexp:
   973                           	callstack 0
   974  00000E                     fputs@c:
   975                           	callstack 0
   976  00000E                     atoi@neg:
   977                           	callstack 0
   978  00000E                     ___flmul@grs:
   979                           	callstack 0
   980                           
   981                           ; 4 bytes @ 0xD
   982  00000E                     	ds	1
   983  00000F                     ___fladd@bexp:
   984                           	callstack 0
   985  00000F                     fputs@i:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0xE
   989  00000F                     	ds	1
   990  000010                     ___fladd@grs:
   991                           	callstack 0
   992  000010                     _atoi$2936:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0xF
   996  000010                     	ds	1
   997  000011                     ?_pad:
   998                           	callstack 0
   999  000011                     ___aodiv@counter:
  1000                           	callstack 0
  1001  000011                     ___aomod@counter:
  1002                           	callstack 0
  1003  000011                     ___fldiv@sign:
  1004                           	callstack 0
  1005  000011                     pad@fp:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x10
  1009  000011                     	ds	1
  1010  000012                     ___aodiv@sign:
  1011                           	callstack 0
  1012  000012                     ___aomod@sign:
  1013                           	callstack 0
  1014  000012                     ___flmul@aexp:
  1015                           	callstack 0
  1016  000012                     ___fldiv@new_exp:
  1017                           	callstack 0
  1018  000012                     _atoi$2938:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x11
  1022  000012                     	ds	1
  1023  000013                     ?_abs:
  1024                           	callstack 0
  1025  000013                     ___flmul@bexp:
  1026                           	callstack 0
  1027  000013                     pad@buf:
  1028                           	callstack 0
  1029  000013                     abs@a:
  1030                           	callstack 0
  1031  000013                     ___aodiv@quotient:
  1032                           	callstack 0
  1033                           
  1034                           ; 8 bytes @ 0x12
  1035  000013                     	ds	1
  1036  000014                     _atoi$2937:
  1037                           	callstack 0
  1038  000014                     ___fldiv@grs:
  1039                           	callstack 0
  1040  000014                     ___flmul@prod:
  1041                           	callstack 0
  1042                           
  1043                           ; 4 bytes @ 0x13
  1044  000014                     	ds	1
  1045  000015                     ??_abs:
  1046  000015                     pad@p:
  1047                           	callstack 0
  1048  000015                     atoi@n:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x14
  1052  000015                     	ds	2
  1053  000017                     ??_pad:
  1054                           
  1055                           ; 1 bytes @ 0x16
  1056  000017                     	ds	1
  1057  000018                     ___fldiv@bexp:
  1058                           	callstack 0
  1059  000018                     ___flmul@temp:
  1060                           	callstack 0
  1061  000018                     pad@i:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x17
  1065  000018                     	ds	1
  1066  000019                     ___fldiv@aexp:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0x18
  1070  000019                     	ds	1
  1071  00001A                     ?___flsub:
  1072                           	callstack 0
  1073  00001A                     ?_floorf:
  1074                           	callstack 0
  1075  00001A                     pad@w:
  1076                           	callstack 0
  1077  00001A                     ___flge@ff1:
  1078                           	callstack 0
  1079  00001A                     ___flsub@b:
  1080                           	callstack 0
  1081  00001A                     floorf@x:
  1082                           	callstack 0
  1083                           
  1084                           ; 4 bytes @ 0x19
  1085  00001A                     	ds	2
  1086  00001C                     ?_dtoa:
  1087                           	callstack 0
  1088  00001C                     dtoa@fp:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x1B
  1092  00001C                     	ds	2
  1093  00001E                     ??_floorf:
  1094  00001E                     ___flge@ff2:
  1095                           	callstack 0
  1096  00001E                     ___flsub@a:
  1097                           	callstack 0
  1098  00001E                     dtoa@d:
  1099                           	callstack 0
  1100                           
  1101                           ; 8 bytes @ 0x1D
  1102  00001E                     	ds	4
  1103  000022                     ??___flge:
  1104                           
  1105                           ; 1 bytes @ 0x21
  1106  000022                     	ds	2
  1107  000024                     floorf@m:
  1108                           	callstack 0
  1109                           
  1110                           ; 4 bytes @ 0x23
  1111  000024                     	ds	2
  1112  000026                     ??_dtoa:
  1113                           
  1114                           ; 1 bytes @ 0x25
  1115  000026                     	ds	2
  1116  000028                     floorf@e:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x27
  1120  000028                     	ds	2
  1121  00002A                     floorf@u:
  1122                           	callstack 0
  1123                           
  1124                           ; 4 bytes @ 0x29
  1125  00002A                     	ds	4
  1126  00002E                     ?_efgtoa:
  1127                           	callstack 0
  1128  00002E                     _dtoa$2845:
  1129                           	callstack 0
  1130  00002E                     efgtoa@fp:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x2D
  1134  00002E                     	ds	2
  1135  000030                     dtoa@p:
  1136                           	callstack 0
  1137  000030                     efgtoa@f:
  1138                           	callstack 0
  1139                           
  1140                           ; 4 bytes @ 0x2F
  1141  000030                     	ds	2
  1142  000032                     dtoa@w:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x31
  1146  000032                     	ds	2
  1147  000034                     efgtoa@c:
  1148                           	callstack 0
  1149  000034                     dtoa@s:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x33
  1153  000034                     	ds	1
  1154  000035                     ??_efgtoa:
  1155                           
  1156                           ; 1 bytes @ 0x34
  1157  000035                     	ds	1
  1158  000036                     dtoa@n:
  1159                           	callstack 0
  1160                           
  1161                           ; 8 bytes @ 0x35
  1162  000036                     	ds	8
  1163  00003E                     dtoa@i:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x3D
  1167  00003E                     	ds	2
  1168  000040                     ?_vfpfcnvrt:
  1169                           	callstack 0
  1170  000040                     vfpfcnvrt@fp:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x3F
  1174  000040                     	ds	2
  1175  000042                     vfpfcnvrt@fmt:
  1176                           	callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x41
  1179  000042                     	ds	2
  1180  000044                     vfpfcnvrt@ap:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x43
  1184  000044                     	ds	2
  1185  000046                     ??_vfpfcnvrt:
  1186                           
  1187                           ; 1 bytes @ 0x45
  1188  000046                     	ds	4
  1189  00004A                     ?_vfprintf:
  1190                           	callstack 0
  1191  00004A                     vfprintf@fp:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x49
  1195  00004A                     	ds	2
  1196  00004C                     vfprintf@fmt:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x4B
  1200  00004C                     	ds	2
  1201  00004E                     vfprintf@ap:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x4D
  1205  00004E                     	ds	2
  1206  000050                     vfprintf@cfmt:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x4F
  1210  000050                     	ds	2
  1211  000052                     
  1212                           ; 1 bytes @ 0x51
  1213  000052                     	ds	2
  1214  000054                     sprintf@ap:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x53
  1218  000054                     	ds	2
  1219  000056                     sprintf@f:
  1220                           	callstack 0
  1221                           
  1222                           ; 6 bytes @ 0x55
  1223  000056                     	ds	6
  1224  00005C                     ??_stateMachine:
  1225                           
  1226                           ; 1 bytes @ 0x5B
  1227  00005C                     	ds	2
  1228  00005E                     
  1229                           ; 1 bytes @ 0x5D
  1230 ;;
  1231 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1232 ;;
  1233 ;; *************** function _main *****************
  1234 ;; Defined at:
  1235 ;;		line 43 in file "fs_main.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1249 ;;      Params:         0       0       0       0       0       0       0
  1250 ;;      Locals:         0       0       0       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0       0       0
  1252 ;;      Totals:         0       0       0       0       0       0       0
  1253 ;;Total ram usage:        0 bytes
  1254 ;; Hardware stack levels required when called:   11
  1255 ;; This function calls:
  1256 ;;		_Lcd_Clear
  1257 ;;		_lcd_init
  1258 ;;		_mcu_init
  1259 ;;		_menuControl
  1260 ;;		_menuInitialize
  1261 ;;		_system_init
  1262 ;;		_timer_0_init
  1263 ;; This function is called by:
  1264 ;;		Startup code after reset
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text0
  1269  003E86                     __ptext0:
  1270                           	callstack 0
  1271  003E86                     _main:
  1272                           	callstack 20
  1273  003E86                     
  1274                           ;fs_main.c: 45:     mcu_init();
  1275  003E86  ECEA  F024         	call	_mcu_init	;wreg free
  1276  003E8A                     
  1277                           ;fs_main.c: 46:     menuInitialize();
  1278  003E8A  ECBA  F024         	call	_menuInitialize	;wreg free
  1279  003E8E                     
  1280                           ;fs_main.c: 50:     timer_0_init();
  1281  003E8E  ECF5  F024         	call	_timer_0_init	;wreg free
  1282  003E92                     
  1283                           ;fs_main.c: 51:     lcd_init();
  1284  003E92  EC82  F021         	call	_lcd_init	;wreg free
  1285  003E96                     
  1286                           ;fs_main.c: 52:     system_init();
  1287  003E96  ECC2  F01C         	call	_system_init	;wreg free
  1288  003E9A                     
  1289                           ;fs_main.c: 53:     Lcd_Clear();
  1290  003E9A  ECFE  F024         	call	_Lcd_Clear	;wreg free
  1291  003E9E                     l5894:
  1292                           
  1293                           ;fs_main.c: 61: {;fs_main.c: 63:     if (timer_counter_flag.one_second_flag == 1)
  1294  003E9E  0100               	movlb	0	; () banked
  1295  003EA0  A1F5               	btfss	_timer_counter_flag& (0+255),0,b
  1296  003EA2  EF55  F01F         	goto	u7341
  1297  003EA6  EF57  F01F         	goto	u7340
  1298  003EAA                     u7341:
  1299  003EAA  EFA5  F01F         	goto	l5920
  1300  003EAE                     u7340:
  1301  003EAE                     
  1302                           ; BSR set to: 0
  1303                           ;fs_main.c: 64:     {;fs_main.c: 65:         timer_counter_flag.one_second_flag = 0;
  1304  003EAE  91F5               	bcf	_timer_counter_flag& (0+255),0,b
  1305  003EB0                     
  1306                           ; BSR set to: 0
  1307                           ;fs_main.c: 67:         if ( (startIsClick == 1) && (pauseIsClick == 0) && (stopIsClick 
      +                          == 0) && (menu_selected == MAIN_MENU) )
  1308  003EB0  05F3               	decf	_startIsClick& (0+255),w,b
  1309  003EB2  A4D8               	btfss	status,2,c
  1310  003EB4  EF5E  F01F         	goto	u7351
  1311  003EB8  EF60  F01F         	goto	u7350
  1312  003EBC                     u7351:
  1313  003EBC  EFA5  F01F         	goto	l5920
  1314  003EC0                     u7350:
  1315  003EC0                     
  1316                           ; BSR set to: 0
  1317  003EC0  51F4               	movf	_pauseIsClick& (0+255),w,b
  1318  003EC2  A4D8               	btfss	status,2,c
  1319  003EC4  EF66  F01F         	goto	u7361
  1320  003EC8  EF68  F01F         	goto	u7360
  1321  003ECC                     u7361:
  1322  003ECC  EFA5  F01F         	goto	l5920
  1323  003ED0                     u7360:
  1324  003ED0                     
  1325                           ; BSR set to: 0
  1326  003ED0  51F2               	movf	_stopIsClick& (0+255),w,b
  1327  003ED2  A4D8               	btfss	status,2,c
  1328  003ED4  EF6E  F01F         	goto	u7371
  1329  003ED8  EF70  F01F         	goto	u7370
  1330  003EDC                     u7371:
  1331  003EDC  EFA5  F01F         	goto	l5920
  1332  003EE0                     u7370:
  1333  003EE0                     
  1334                           ; BSR set to: 0
  1335  003EE0  51F1               	movf	_menu_selected& (0+255),w,b
  1336  003EE2  A4D8               	btfss	status,2,c
  1337  003EE4  EF76  F01F         	goto	u7381
  1338  003EE8  EF78  F01F         	goto	u7380
  1339  003EEC                     u7381:
  1340  003EEC  EFA5  F01F         	goto	l5920
  1341  003EF0                     u7380:
  1342  003EF0                     
  1343                           ; BSR set to: 0
  1344                           ;fs_main.c: 68:         {;fs_main.c: 69:             timer_value.second++;
  1345  003EF0  4BD2               	infsnz	_timer_value& (0+255),f,b
  1346  003EF2  2BD3               	incf	(_timer_value+1)& (0+255),f,b
  1347  003EF4                     
  1348                           ; BSR set to: 0
  1349                           ;fs_main.c: 70:             timer_value.remainingSecond = 60 - timer_value.second;
  1350  003EF4  51D2               	movf	_timer_value& (0+255),w,b
  1351  003EF6  083C               	sublw	60
  1352  003EF8  6FD6               	movwf	(_timer_value+4)& (0+255),b
  1353  003EFA  51D3               	movf	(_timer_value+1)& (0+255),w,b
  1354  003EFC  A0D8               	btfss	status,0,c
  1355  003EFE  2AE8               	incf	wreg,f,c
  1356  003F00  0800               	sublw	0
  1357  003F02  6FD7               	movwf	(_timer_value+5)& (0+255),b
  1358  003F04                     
  1359                           ; BSR set to: 0
  1360                           ;fs_main.c: 72:             if (timer_value.remainingSecond == 59 )
  1361  003F04  0E3B               	movlw	59
  1362  003F06  19D6               	xorwf	(_timer_value+4)& (0+255),w,b
  1363  003F08  11D7               	iorwf	(_timer_value+5)& (0+255),w,b
  1364  003F0A  A4D8               	btfss	status,2,c
  1365  003F0C  EF8A  F01F         	goto	u7391
  1366  003F10  EF8C  F01F         	goto	u7390
  1367  003F14                     u7391:
  1368  003F14  EF96  F01F         	goto	l5916
  1369  003F18                     u7390:
  1370  003F18                     
  1371                           ; BSR set to: 0
  1372                           ;fs_main.c: 73:             {;fs_main.c: 74:                 timer_value.minute++;
  1373  003F18  4BD4               	infsnz	(_timer_value+2)& (0+255),f,b
  1374  003F1A  2BD5               	incf	(_timer_value+3)& (0+255),f,b
  1375  003F1C                     
  1376                           ; BSR set to: 0
  1377                           ;fs_main.c: 75:                 timer_value.remainingMinute = menu_value.driver_time - t
      +                          imer_value.minute;
  1378  003F1C  51D4               	movf	(_timer_value+2)& (0+255),w,b
  1379  003F1E  5DE4               	subwf	_menu_value& (0+255),w,b
  1380  003F20  6FD8               	movwf	(_timer_value+6)& (0+255),b
  1381  003F22  51D5               	movf	(_timer_value+3)& (0+255),w,b
  1382  003F24  A0D8               	btfss	status,0,c
  1383  003F26  29D5               	incf	(_timer_value+3)& (0+255),w,b
  1384  003F28  6BD9               	clrf	(_timer_value+7)& (0+255),b
  1385  003F2A  5FD9               	subwf	(_timer_value+7)& (0+255),f,b
  1386  003F2C                     l5916:
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;fs_main.c: 78:             if (timer_value.second > 59)
  1390  003F2C  51D3               	movf	(_timer_value+1)& (0+255),w,b
  1391  003F2E  E109               	bnz	u7400
  1392  003F30  0E3C               	movlw	60
  1393  003F32  5DD2               	subwf	_timer_value& (0+255),w,b
  1394  003F34  A0D8               	btfss	status,0,c
  1395  003F36  EF9F  F01F         	goto	u7401
  1396  003F3A  EFA1  F01F         	goto	u7400
  1397  003F3E                     u7401:
  1398  003F3E  EFA5  F01F         	goto	l5920
  1399  003F42                     u7400:
  1400  003F42                     
  1401                           ; BSR set to: 0
  1402                           ;fs_main.c: 79:             {;fs_main.c: 80:                 timer_value.second = 0;
  1403  003F42  0E00               	movlw	0
  1404  003F44  6FD3               	movwf	(_timer_value+1)& (0+255),b
  1405  003F46  0E00               	movlw	0
  1406  003F48  6FD2               	movwf	_timer_value& (0+255),b
  1407  003F4A                     l5920:
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;fs_main.c: 85:     menuControl();
  1411  003F4A  EC70  F022         	call	_menuControl	;wreg free
  1412  003F4E  EF4F  F01F         	goto	l5894
  1413  003F52  EF33  F000         	goto	start
  1414  003F56                     __end_of_main:
  1415                           	callstack 0
  1416                           
  1417 ;; *************** function _timer_0_init *****************
  1418 ;; Defined at:
  1419 ;;		line 67 in file "fs_timer.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;		None
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;		None
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1433 ;;      Params:         0       0       0       0       0       0       0
  1434 ;;      Locals:         0       0       0       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0
  1436 ;;      Totals:         0       0       0       0       0       0       0
  1437 ;;Total ram usage:        0 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; Hardware stack levels required when called:    1
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_main
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text1
  1448  0049EA                     __ptext1:
  1449                           	callstack 0
  1450  0049EA                     _timer_0_init:
  1451                           	callstack 29
  1452  0049EA                     
  1453                           ;fs_timer.c: 69:   T0CON = 0x81;
  1454  0049EA  0E81               	movlw	129
  1455  0049EC  6ED5               	movwf	213,c	;volatile
  1456                           
  1457                           ;fs_timer.c: 70:   TMR0H = 0x63;
  1458  0049EE  0E63               	movlw	99
  1459  0049F0  6ED7               	movwf	215,c	;volatile
  1460                           
  1461                           ;fs_timer.c: 71:   TMR0L = 0xC0;
  1462  0049F2  0EC0               	movlw	192
  1463  0049F4  6ED6               	movwf	214,c	;volatile
  1464  0049F6                     
  1465                           ;fs_timer.c: 72:   INTCONbits.GIE = 1;
  1466  0049F6  8EF2               	bsf	242,7,c	;volatile
  1467  0049F8                     
  1468                           ;fs_timer.c: 73:   INTCONbits.TMR0IE = 1;
  1469  0049F8  8AF2               	bsf	242,5,c	;volatile
  1470  0049FA  0012               	return		;funcret
  1471  0049FC                     __end_of_timer_0_init:
  1472                           	callstack 0
  1473                           
  1474 ;; *************** function _system_init *****************
  1475 ;; Defined at:
  1476 ;;		line 83 in file "fs_mcu.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1490 ;;      Params:         0       0       0       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0       0       0
  1492 ;;      Temps:          2       0       0       0       0       0       0
  1493 ;;      Totals:         2       0       0       0       0       0       0
  1494 ;;Total ram usage:        2 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    2
  1497 ;; This function calls:
  1498 ;;		_eepromRead
  1499 ;; This function is called by:
  1500 ;;		_main
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text2
  1505  003984                     __ptext2:
  1506                           	callstack 0
  1507  003984                     _system_init:
  1508                           	callstack 28
  1509  003984                     
  1510                           ;fs_mcu.c: 85:     driver_limit.pay = 0;
  1511  003984  0E00               	movlw	0
  1512  003986  0100               	movlb	0	; () banked
  1513  003988  6FC6               	movwf	_driver_limit& (0+255),b
  1514  00398A  0E00               	movlw	0
  1515  00398C  6FC7               	movwf	(_driver_limit+1)& (0+255),b
  1516  00398E  0E00               	movlw	0
  1517  003990  6FC8               	movwf	(_driver_limit+2)& (0+255),b
  1518  003992  0E00               	movlw	0
  1519  003994  6FC9               	movwf	(_driver_limit+3)& (0+255),b
  1520                           
  1521                           ;fs_mcu.c: 86:     driver_limit.payda = 0;
  1522  003996  0E00               	movlw	0
  1523  003998  6FCA               	movwf	(_driver_limit+4)& (0+255),b
  1524  00399A  0E00               	movlw	0
  1525  00399C  6FCB               	movwf	(_driver_limit+5)& (0+255),b
  1526  00399E  0E00               	movlw	0
  1527  0039A0  6FCC               	movwf	(_driver_limit+6)& (0+255),b
  1528  0039A2  0E00               	movlw	0
  1529  0039A4  6FCD               	movwf	(_driver_limit+7)& (0+255),b
  1530                           
  1531                           ;fs_mcu.c: 87:     driver_limit.ortalama = 0;
  1532  0039A6  0E00               	movlw	0
  1533  0039A8  6FCE               	movwf	(_driver_limit+8)& (0+255),b
  1534  0039AA  0E00               	movlw	0
  1535  0039AC  6FCF               	movwf	(_driver_limit+9)& (0+255),b
  1536  0039AE  0E00               	movlw	0
  1537  0039B0  6FD0               	movwf	(_driver_limit+10)& (0+255),b
  1538  0039B2  0E00               	movlw	0
  1539  0039B4  6FD1               	movwf	(_driver_limit+11)& (0+255),b
  1540                           
  1541                           ;fs_mcu.c: 88:     convert_data.convert_channel_0 = 0;
  1542  0039B6  0E00               	movlw	0
  1543  0039B8  0101               	movlb	1	; () banked
  1544  0039BA  6F00               	movwf	_convert_data& (0+255),b
  1545  0039BC  0E00               	movlw	0
  1546  0039BE  6F01               	movwf	(_convert_data+1)& (0+255),b
  1547  0039C0  0E00               	movlw	0
  1548  0039C2  6F02               	movwf	(_convert_data+2)& (0+255),b
  1549  0039C4  0E00               	movlw	0
  1550  0039C6  6F03               	movwf	(_convert_data+3)& (0+255),b
  1551                           
  1552                           ;fs_mcu.c: 89:     convert_data.convert_channel_1 = 0;
  1553  0039C8  0E00               	movlw	0
  1554  0039CA  6F04               	movwf	(_convert_data+4)& (0+255),b
  1555  0039CC  0E00               	movlw	0
  1556  0039CE  6F05               	movwf	(_convert_data+5)& (0+255),b
  1557  0039D0  0E00               	movlw	0
  1558  0039D2  6F06               	movwf	(_convert_data+6)& (0+255),b
  1559  0039D4  0E00               	movlw	0
  1560  0039D6  6F07               	movwf	(_convert_data+7)& (0+255),b
  1561                           
  1562                           ;fs_mcu.c: 90:     convert_data.convert_channel_2 = 0;
  1563  0039D8  0E00               	movlw	0
  1564  0039DA  6F08               	movwf	(_convert_data+8)& (0+255),b
  1565  0039DC  0E00               	movlw	0
  1566  0039DE  6F09               	movwf	(_convert_data+9)& (0+255),b
  1567  0039E0  0E00               	movlw	0
  1568  0039E2  6F0A               	movwf	(_convert_data+10)& (0+255),b
  1569  0039E4  0E00               	movlw	0
  1570  0039E6  6F0B               	movwf	(_convert_data+11)& (0+255),b
  1571                           
  1572                           ;fs_mcu.c: 91:     convert_data.convert_channel_3 = 0;
  1573  0039E8  0E00               	movlw	0
  1574  0039EA  6F0C               	movwf	(_convert_data+12)& (0+255),b
  1575  0039EC  0E00               	movlw	0
  1576  0039EE  6F0D               	movwf	(_convert_data+13)& (0+255),b
  1577  0039F0  0E00               	movlw	0
  1578  0039F2  6F0E               	movwf	(_convert_data+14)& (0+255),b
  1579  0039F4  0E00               	movlw	0
  1580  0039F6  6F0F               	movwf	(_convert_data+15)& (0+255),b
  1581                           
  1582                           ;fs_mcu.c: 92:     convert_data.convert_channel_4 = 0;
  1583  0039F8  0E00               	movlw	0
  1584  0039FA  6F10               	movwf	(_convert_data+16)& (0+255),b
  1585  0039FC  0E00               	movlw	0
  1586  0039FE  6F11               	movwf	(_convert_data+17)& (0+255),b
  1587  003A00  0E00               	movlw	0
  1588  003A02  6F12               	movwf	(_convert_data+18)& (0+255),b
  1589  003A04  0E00               	movlw	0
  1590  003A06  6F13               	movwf	(_convert_data+19)& (0+255),b
  1591                           
  1592                           ;fs_mcu.c: 93:     convert_data.convert_channel_5 = 0;
  1593  003A08  0E00               	movlw	0
  1594  003A0A  6F14               	movwf	(_convert_data+20)& (0+255),b
  1595  003A0C  0E00               	movlw	0
  1596  003A0E  6F15               	movwf	(_convert_data+21)& (0+255),b
  1597  003A10  0E00               	movlw	0
  1598  003A12  6F16               	movwf	(_convert_data+22)& (0+255),b
  1599  003A14  0E00               	movlw	0
  1600  003A16  6F17               	movwf	(_convert_data+23)& (0+255),b
  1601                           
  1602                           ;fs_mcu.c: 94:     convert_data.convert_channel_6 = 0;
  1603  003A18  0E00               	movlw	0
  1604  003A1A  6F18               	movwf	(_convert_data+24)& (0+255),b
  1605  003A1C  0E00               	movlw	0
  1606  003A1E  6F19               	movwf	(_convert_data+25)& (0+255),b
  1607  003A20  0E00               	movlw	0
  1608  003A22  6F1A               	movwf	(_convert_data+26)& (0+255),b
  1609  003A24  0E00               	movlw	0
  1610  003A26  6F1B               	movwf	(_convert_data+27)& (0+255),b
  1611                           
  1612                           ;fs_mcu.c: 95:     convert_data.convert_channel_7 = 0;
  1613  003A28  0E00               	movlw	0
  1614  003A2A  6F1C               	movwf	(_convert_data+28)& (0+255),b
  1615  003A2C  0E00               	movlw	0
  1616  003A2E  6F1D               	movwf	(_convert_data+29)& (0+255),b
  1617  003A30  0E00               	movlw	0
  1618  003A32  6F1E               	movwf	(_convert_data+30)& (0+255),b
  1619  003A34  0E00               	movlw	0
  1620  003A36  6F1F               	movwf	(_convert_data+31)& (0+255),b
  1621                           
  1622                           ;fs_mcu.c: 96:     controller.leftMotorSpeed = 0;
  1623  003A38  0E00               	movlw	0
  1624  003A3A  6F57               	movwf	(_controller+7)& (0+255),b
  1625  003A3C  0E00               	movlw	0
  1626  003A3E  6F56               	movwf	(_controller+6)& (0+255),b
  1627                           
  1628                           ;fs_mcu.c: 97:     controller.rightMotorSpeed = 0;
  1629  003A40  0E00               	movlw	0
  1630  003A42  6F59               	movwf	(_controller+9)& (0+255),b
  1631  003A44  0E00               	movlw	0
  1632  003A46  6F58               	movwf	(_controller+8)& (0+255),b
  1633                           
  1634                           ;fs_mcu.c: 98:     timer_value.timer_0_counter = 0;
  1635  003A48  0E00               	movlw	0
  1636  003A4A  0100               	movlb	0	; () banked
  1637  003A4C  6FDB               	movwf	(_timer_value+9)& (0+255),b
  1638                           
  1639                           ;fs_mcu.c: 99:     controller.error = 0;
  1640  003A4E  0E00               	movlw	0
  1641  003A50  0101               	movlb	1	; () banked
  1642  003A52  6F51               	movwf	(_controller+1)& (0+255),b
  1643  003A54  0E00               	movlw	0
  1644  003A56  6F50               	movwf	_controller& (0+255),b
  1645  003A58                     
  1646                           ; BSR set to: 1
  1647                           ;fs_mcu.c: 101:     button_bounce_controller.menu = 0;
  1648  003A58  905E               	bcf	_button_bounce_controller^0,0,c
  1649  003A5A                     
  1650                           ; BSR set to: 1
  1651                           ;fs_mcu.c: 102:     button_bounce_controller.pause = 0;
  1652  003A5A  965E               	bcf	_button_bounce_controller^0,3,c
  1653  003A5C                     
  1654                           ; BSR set to: 1
  1655                           ;fs_mcu.c: 103:     button_bounce_controller.start = 0;
  1656  003A5C  925E               	bcf	_button_bounce_controller^0,1,c
  1657  003A5E                     
  1658                           ; BSR set to: 1
  1659                           ;fs_mcu.c: 104:     button_bounce_controller.stop = 0;
  1660  003A5E  945E               	bcf	_button_bounce_controller^0,2,c
  1661  003A60                     
  1662                           ; BSR set to: 1
  1663                           ;fs_mcu.c: 105:     menu_value.driver_time = (uint8_t)eepromRead(0x00);
  1664  003A60  0E00               	movlw	0
  1665  003A62  ECCC  F024         	call	_eepromRead
  1666  003A66  0100               	movlb	0	; () banked
  1667  003A68  6FE4               	movwf	_menu_value& (0+255),b
  1668  003A6A                     
  1669                           ; BSR set to: 0
  1670                           ;fs_mcu.c: 106:     menu_value.stop_time = (uint8_t)eepromRead(0x01);
  1671  003A6A  0E01               	movlw	1
  1672  003A6C  ECCC  F024         	call	_eepromRead
  1673  003A70  0100               	movlb	0	; () banked
  1674  003A72  6FE5               	movwf	(_menu_value+1)& (0+255),b
  1675  003A74                     
  1676                           ; BSR set to: 0
  1677                           ;fs_mcu.c: 107:     menu_value.speed_limit = (uint8_t)eepromRead(0x02);
  1678  003A74  0E02               	movlw	2
  1679  003A76  ECCC  F024         	call	_eepromRead
  1680  003A7A  0100               	movlb	0	; () banked
  1681  003A7C  6FE6               	movwf	(_menu_value+2)& (0+255),b
  1682  003A7E                     
  1683                           ; BSR set to: 0
  1684                           ;fs_mcu.c: 109:     _delay((unsigned long)((700)*(64000000UL/4000.0)));
  1685  003A7E  0E39               	movlw	57
  1686  003A80  6E03               	movwf	(??_system_init+1)^0,c
  1687  003A82  0ED2               	movlw	210
  1688  003A84  6E02               	movwf	??_system_init^0,c
  1689  003A86  0E4C               	movlw	76
  1690  003A88                     u7667:
  1691  003A88  2EE8               	decfsz	wreg,f,c
  1692  003A8A  D7FE               	bra	u7667
  1693  003A8C  2E02               	decfsz	??_system_init^0,f,c
  1694  003A8E  D7FC               	bra	u7667
  1695  003A90  2E03               	decfsz	(??_system_init+1)^0,f,c
  1696  003A92  D7FA               	bra	u7667
  1697  003A94  D000               	nop2	
  1698  003A96                     
  1699                           ;fs_mcu.c: 110:     timer_value.remainingMinute = menu_value.driver_time;
  1700  003A96  C0E4  F0D8         	movff	_menu_value,_timer_value+6
  1701  003A9A  0100               	movlb	0	; () banked
  1702  003A9C  6BD9               	clrf	(_timer_value+7)& (0+255),b
  1703  003A9E                     
  1704                           ; BSR set to: 0
  1705                           ;fs_mcu.c: 111:     timer_value.remainingSecond = 0;
  1706  003A9E  0E00               	movlw	0
  1707  003AA0  6FD7               	movwf	(_timer_value+5)& (0+255),b
  1708  003AA2  0E00               	movlw	0
  1709  003AA4  6FD6               	movwf	(_timer_value+4)& (0+255),b
  1710  003AA6                     
  1711                           ; BSR set to: 0
  1712  003AA6  0012               	return		;funcret
  1713  003AA8                     __end_of_system_init:
  1714                           	callstack 0
  1715                           
  1716 ;; *************** function _eepromRead *****************
  1717 ;; Defined at:
  1718 ;;		line 36 in file "fs_eeprom.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  address         1    wreg     unsigned char 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  address         1    0[COMRAM] unsigned char 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      unsigned char 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1732 ;;      Params:         0       0       0       0       0       0       0
  1733 ;;      Locals:         1       0       0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0
  1735 ;;      Totals:         1       0       0       0       0       0       0
  1736 ;;Total ram usage:        1 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    1
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_system_init
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           	psect	text3
  1747  004998                     __ptext3:
  1748                           	callstack 0
  1749  004998                     _eepromRead:
  1750                           	callstack 28
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;incstack = 0
  1754                           ;eepromRead@address stored from wreg
  1755  004998  6E01               	movwf	eepromRead@address^0,c
  1756  00499A                     
  1757                           ;fs_eeprom.c: 36: uint8_t eepromRead(uint8_t address);fs_eeprom.c: 37: {;fs_eeprom.c: 41
      +                          :     EEADR = (uint8_t)address;
  1758  00499A  C001  FFA9         	movff	eepromRead@address,4009	;volatile
  1759  00499E                     
  1760                           ;fs_eeprom.c: 43:     EECON1bits.EEPGD = 0;
  1761  00499E  9EA6               	bcf	166,7,c	;volsfr
  1762  0049A0                     
  1763                           ;fs_eeprom.c: 44:     EECON1bits.CFGS = 0;
  1764  0049A0  9CA6               	bcf	166,6,c	;volsfr
  1765  0049A2                     
  1766                           ;fs_eeprom.c: 45:     EECON1bits.RD = 1;
  1767  0049A2  80A6               	bsf	166,0,c	;volsfr
  1768  0049A4                     l70:
  1769  0049A4  B0A6               	btfsc	166,0,c	;volsfr
  1770  0049A6  EFD7  F024         	goto	u6481
  1771  0049AA  EFD9  F024         	goto	u6480
  1772  0049AE                     u6481:
  1773  0049AE  EFD2  F024         	goto	l70
  1774  0049B2                     u6480:
  1775  0049B2                     
  1776                           ;fs_eeprom.c: 51:     return EEDATA;
  1777  0049B2  50A8               	movf	168,w,c	;volatile
  1778  0049B4  0012               	return		;funcret
  1779  0049B6                     __end_of_eepromRead:
  1780                           	callstack 0
  1781                           
  1782 ;; *************** function _menuInitialize *****************
  1783 ;; Defined at:
  1784 ;;		line 38 in file "fs_menu_controller.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		None
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1798 ;;      Params:         0       0       0       0       0       0       0
  1799 ;;      Locals:         0       0       0       0       0       0       0
  1800 ;;      Temps:          0       0       0       0       0       0       0
  1801 ;;      Totals:         0       0       0       0       0       0       0
  1802 ;;Total ram usage:        0 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    1
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_main
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text4
  1813  004974                     __ptext4:
  1814                           	callstack 0
  1815  004974                     _menuInitialize:
  1816                           	callstack 29
  1817  004974                     
  1818                           ;fs_menu_controller.c: 40:     ANSELBbits.ANSB5 = 0;
  1819  004974  010F               	movlb	15	; () banked
  1820  004976  9B39               	bcf	57,5,b	;volatile
  1821                           
  1822                           ;fs_menu_controller.c: 41:     TRISBbits.RB5 = 1;
  1823  004978  8A93               	bsf	147,5,c	;volatile
  1824                           
  1825                           ;fs_menu_controller.c: 43:     ANSELBbits.ANSB4 = 0;
  1826  00497A  9939               	bcf	57,4,b	;volatile
  1827                           
  1828                           ;fs_menu_controller.c: 44:     TRISBbits.RB4 = 1;
  1829  00497C  8893               	bsf	147,4,c	;volatile
  1830                           
  1831                           ;fs_menu_controller.c: 46:     ANSELBbits.ANSB3 = 0;
  1832  00497E  9739               	bcf	57,3,b	;volatile
  1833                           
  1834                           ;fs_menu_controller.c: 47:     TRISBbits.RB3 = 1;
  1835  004980  8693               	bsf	147,3,c	;volatile
  1836                           
  1837                           ;fs_menu_controller.c: 49:     ANSELAbits.ANSA0 = 0;
  1838  004982  9138               	bcf	56,0,b	;volatile
  1839                           
  1840                           ;fs_menu_controller.c: 50:     TRISAbits.RA0 = 1;
  1841  004984  8092               	bsf	146,0,c	;volatile
  1842                           
  1843                           ;fs_menu_controller.c: 52:     ANSELAbits.ANSA5 = 0;
  1844  004986  9B38               	bcf	56,5,b	;volatile
  1845                           
  1846                           ;fs_menu_controller.c: 53:     TRISAbits.RA5 = 1;
  1847  004988  8A92               	bsf	146,5,c	;volatile
  1848                           
  1849                           ;fs_menu_controller.c: 55:     ANSELBbits.ANSB2 = 0;
  1850  00498A  9539               	bcf	57,2,b	;volatile
  1851                           
  1852                           ;fs_menu_controller.c: 56:     TRISBbits.RB2 = 1;
  1853  00498C  8493               	bsf	147,2,c	;volatile
  1854                           
  1855                           ;fs_menu_controller.c: 58:     ANSELEbits.ANSE2 = 0;
  1856  00498E  953C               	bcf	60,2,b	;volatile
  1857                           
  1858                           ;fs_menu_controller.c: 59:     TRISEbits.RE2 = 0;
  1859  004990  9496               	bcf	150,2,c	;volatile
  1860                           
  1861                           ;fs_menu_controller.c: 61:     TRISAbits.RA4 = 0;
  1862  004992  9892               	bcf	146,4,c	;volatile
  1863                           
  1864                           ;fs_menu_controller.c: 62:     TRISBbits.RB6 = 0;
  1865  004994  9C93               	bcf	147,6,c	;volatile
  1866  004996                     
  1867                           ; BSR set to: 15
  1868  004996  0012               	return		;funcret
  1869  004998                     __end_of_menuInitialize:
  1870                           	callstack 0
  1871                           
  1872 ;; *************** function _menuControl *****************
  1873 ;; Defined at:
  1874 ;;		line 155 in file "fs_menu_controller.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;		None
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;		None
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      void 
  1881 ;; Registers used:
  1882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1888 ;;      Params:         0       0       0       0       0       0       0
  1889 ;;      Locals:         0       0       0       0       0       0       0
  1890 ;;      Temps:          0       0       0       0       0       0       0
  1891 ;;      Totals:         0       0       0       0       0       0       0
  1892 ;;Total ram usage:        0 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:   10
  1895 ;; This function calls:
  1896 ;;		_buttonControlFlags
  1897 ;;		_stateMachine
  1898 ;; This function is called by:
  1899 ;;		_main
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text5
  1904  0044E0                     __ptext5:
  1905                           	callstack 0
  1906  0044E0                     _menuControl:
  1907                           	callstack 20
  1908  0044E0                     
  1909                           ;fs_menu_controller.c: 157:     buttonControlFlags();
  1910  0044E0  ECB1  F019         	call	_buttonControlFlags	;wreg free
  1911  0044E4                     
  1912                           ;fs_menu_controller.c: 158:     stateMachine();
  1913  0044E4  EC44  F009         	call	_stateMachine	;wreg free
  1914  0044E8                     
  1915                           ;fs_menu_controller.c: 160:     if (menu_flags.menu_start_flag == 1)
  1916  0044E8  0100               	movlb	0	; () banked
  1917  0044EA  A3F0               	btfss	_menu_flags& (0+255),1,b
  1918  0044EC  EF7A  F022         	goto	u7291
  1919  0044F0  EF7C  F022         	goto	u7290
  1920  0044F4                     u7291:
  1921  0044F4  EF83  F022         	goto	l5786
  1922  0044F8                     u7290:
  1923  0044F8                     
  1924                           ; BSR set to: 0
  1925                           ;fs_menu_controller.c: 161:     {;fs_menu_controller.c: 162:         menu_flags.menu_sta
      +                          rt_flag = 0;
  1926  0044F8  93F0               	bcf	_menu_flags& (0+255),1,b
  1927  0044FA                     
  1928                           ; BSR set to: 0
  1929                           ;fs_menu_controller.c: 163:         startIsClick = 1;
  1930  0044FA  0E01               	movlw	1
  1931  0044FC  6FF3               	movwf	_startIsClick& (0+255),b
  1932                           
  1933                           ;fs_menu_controller.c: 164:         pauseIsClick = 0;
  1934  0044FE  0E00               	movlw	0
  1935  004500  6FF4               	movwf	_pauseIsClick& (0+255),b
  1936                           
  1937                           ;fs_menu_controller.c: 165:         stopIsClick = 0;
  1938  004502  0E00               	movlw	0
  1939  004504  6FF2               	movwf	_stopIsClick& (0+255),b
  1940  004506                     l5786:
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;fs_menu_controller.c: 169:     if (menu_flags.menu_pause_flag == 1)
  1944  004506  A7F0               	btfss	_menu_flags& (0+255),3,b
  1945  004508  EF88  F022         	goto	u7301
  1946  00450C  EF8A  F022         	goto	u7300
  1947  004510                     u7301:
  1948  004510  EF91  F022         	goto	l5792
  1949  004514                     u7300:
  1950  004514                     
  1951                           ; BSR set to: 0
  1952                           ;fs_menu_controller.c: 170:     {;fs_menu_controller.c: 171:         menu_flags.menu_pau
      +                          se_flag = 0;
  1953  004514  97F0               	bcf	_menu_flags& (0+255),3,b
  1954  004516                     
  1955                           ; BSR set to: 0
  1956                           ;fs_menu_controller.c: 172:         pauseIsClick = 1;
  1957  004516  0E01               	movlw	1
  1958  004518  6FF4               	movwf	_pauseIsClick& (0+255),b
  1959                           
  1960                           ;fs_menu_controller.c: 173:         startIsClick = 0;
  1961  00451A  0E00               	movlw	0
  1962  00451C  6FF3               	movwf	_startIsClick& (0+255),b
  1963                           
  1964                           ;fs_menu_controller.c: 174:         stopIsClick = 0;
  1965  00451E  0E00               	movlw	0
  1966  004520  6FF2               	movwf	_stopIsClick& (0+255),b
  1967  004522                     l5792:
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;fs_menu_controller.c: 177:     if (menu_flags.menu_stop_flag == 1)
  1971  004522  A5F0               	btfss	_menu_flags& (0+255),2,b
  1972  004524  EF96  F022         	goto	u7311
  1973  004528  EF98  F022         	goto	u7310
  1974  00452C                     u7311:
  1975  00452C  EF9F  F022         	goto	l348
  1976  004530                     u7310:
  1977  004530                     
  1978                           ; BSR set to: 0
  1979                           ;fs_menu_controller.c: 178:     {;fs_menu_controller.c: 179:         menu_flags.menu_sto
      +                          p_flag = 0;
  1980  004530  95F0               	bcf	_menu_flags& (0+255),2,b
  1981  004532                     
  1982                           ; BSR set to: 0
  1983                           ;fs_menu_controller.c: 180:         pauseIsClick = 0;
  1984  004532  0E00               	movlw	0
  1985  004534  6FF4               	movwf	_pauseIsClick& (0+255),b
  1986                           
  1987                           ;fs_menu_controller.c: 181:         startIsClick = 0;
  1988  004536  0E00               	movlw	0
  1989  004538  6FF3               	movwf	_startIsClick& (0+255),b
  1990                           
  1991                           ;fs_menu_controller.c: 182:         stopIsClick = 1;
  1992  00453A  0E01               	movlw	1
  1993  00453C  6FF2               	movwf	_stopIsClick& (0+255),b
  1994  00453E                     l348:
  1995                           
  1996                           ; BSR set to: 0
  1997  00453E  0012               	return		;funcret
  1998  004540                     __end_of_menuControl:
  1999                           	callstack 0
  2000                           
  2001 ;; *************** function _stateMachine *****************
  2002 ;; Defined at:
  2003 ;;		line 193 in file "fs_menu_controller.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;		None
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  textCursor2    16   86[BANK0 ] unsigned char [16]
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2017 ;;      Params:         0       0       0       0       0       0       0
  2018 ;;      Locals:         0      16       0       0       0       0       0
  2019 ;;      Temps:          2       0       0       0       0       0       0
  2020 ;;      Totals:         2      16       0       0       0       0       0
  2021 ;;Total ram usage:       18 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    9
  2024 ;; This function calls:
  2025 ;;		_Lcd_Set_Cursor
  2026 ;;		_Lcd_Write_String
  2027 ;;		___fladd
  2028 ;;		___flge
  2029 ;;		___flsub
  2030 ;;		_eepromWrite
  2031 ;;		_sprintf
  2032 ;; This function is called by:
  2033 ;;		_menuControl
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text6
  2038  001288                     __ptext6:
  2039                           	callstack 0
  2040  001288                     _stateMachine:
  2041                           	callstack 20
  2042  001288                     
  2043                           ;fs_menu_controller.c: 195:     char textCursor2[16] = {0};
  2044  001288  EE20  F0B6         	lfsr	2,stateMachine@textCursor2
  2045  00128C  0E0F               	movlw	15
  2046  00128E                     u6741:
  2047  00128E  6ADE               	clrf	postinc2,c
  2048  001290  06E8               	decf	wreg,f,c
  2049  001292  E2FD               	bc	u6741
  2050                           
  2051                           ;fs_menu_controller.c: 196:     static uint8_t secretMenuCounter = 0;;fs_menu_controller
      +                          .c: 198:     switch (menu_selected)
  2052  001294  EFA9  F00D         	goto	l5688
  2053  001298                     l356:
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;fs_menu_controller.c: 202:             LATBbits.LATB6 = 0;
  2057  001298  9C8A               	bcf	138,6,c	;volatile
  2058                           
  2059                           ;fs_menu_controller.c: 203:             LATAbits.LATA4 = 1;
  2060  00129A  8889               	bsf	137,4,c	;volatile
  2061                           
  2062                           ;fs_menu_controller.c: 204:             LATEbits.LATE2 = 0;
  2063  00129C  948D               	bcf	141,2,c	;volatile
  2064  00129E                     
  2065                           ; BSR set to: 0
  2066                           ;fs_menu_controller.c: 205:             Lcd_Set_Cursor(1,1);
  2067  00129E  0E01               	movlw	1
  2068  0012A0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2069  0012A2  0E01               	movlw	1
  2070  0012A4  EC0C  F022         	call	_Lcd_Set_Cursor
  2071  0012A8                     
  2072                           ;fs_menu_controller.c: 206:             Lcd_Write_String("KALAN ZAMAN     ");
  2073  0012A8  0E35               	movlw	low STR_1
  2074  0012AA  6E05               	movwf	Lcd_Write_String@a^0,c
  2075  0012AC  0E06               	movlw	high STR_1
  2076  0012AE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2077  0012B0  ECCD  F021         	call	_Lcd_Write_String	;wreg free
  2078  0012B4                     
  2079                           ;fs_menu_controller.c: 207:             Lcd_Set_Cursor(2,1);
  2080  0012B4  0E01               	movlw	1
  2081  0012B6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2082  0012B8  0E02               	movlw	2
  2083  0012BA  EC0C  F022         	call	_Lcd_Set_Cursor
  2084  0012BE                     
  2085                           ;fs_menu_controller.c: 208:             sprintf(textCursor2,"      %d:%d   ",timer_value
      +                          .remainingMinute,timer_value.remainingSecond);
  2086  0012BE  0EB6               	movlw	low stateMachine@textCursor2
  2087  0012C0  0100               	movlb	0	; () banked
  2088  0012C2  6FAE               	movwf	sprintf@s& (0+255),b
  2089  0012C4  0E00               	movlw	high stateMachine@textCursor2
  2090  0012C6  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2091  0012C8  0E9A               	movlw	low STR_2
  2092  0012CA  6FB0               	movwf	sprintf@fmt& (0+255),b
  2093  0012CC  0E06               	movlw	high STR_2
  2094  0012CE  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2095  0012D0  C0D8  F0B2         	movff	_timer_value+6,?_sprintf+4
  2096  0012D4  C0D9  F0B3         	movff	_timer_value+7,?_sprintf+5
  2097  0012D8  C0D6  F0B4         	movff	_timer_value+4,?_sprintf+6
  2098  0012DC  C0D7  F0B5         	movff	_timer_value+5,?_sprintf+7
  2099  0012E0  EC55  F023         	call	_sprintf	;wreg free
  2100  0012E4                     
  2101                           ;fs_menu_controller.c: 209:             Lcd_Write_String(textCursor2);
  2102  0012E4  0EB6               	movlw	low stateMachine@textCursor2
  2103  0012E6  6E05               	movwf	Lcd_Write_String@a^0,c
  2104  0012E8  0E00               	movlw	high stateMachine@textCursor2
  2105  0012EA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2106  0012EC  ECCD  F021         	call	_Lcd_Write_String	;wreg free
  2107  0012F0                     
  2108                           ;fs_menu_controller.c: 211:             if ( timer_value.menu_login_delay == 100)
  2109  0012F0  0E64               	movlw	100
  2110  0012F2  0100               	movlb	0	; () banked
  2111  0012F4  19DA               	xorwf	(_timer_value+8)& (0+255),w,b
  2112  0012F6  A4D8               	btfss	status,2,c
  2113  0012F8  EF80  F009         	goto	u6751
  2114  0012FC  EF82  F009         	goto	u6750
  2115  001300                     u6751:
  2116  001300  EF86  F009         	goto	l5394
  2117  001304                     u6750:
  2118  001304                     
  2119                           ; BSR set to: 0
  2120                           ;fs_menu_controller.c: 212:             {;fs_menu_controller.c: 213:                 tim
      +                          er_value.menu_login_delay = 0;
  2121  001304  0E00               	movlw	0
  2122  001306  6FDA               	movwf	(_timer_value+8)& (0+255),b
  2123                           
  2124                           ;fs_menu_controller.c: 214:                 menu_selected = DRIVER_TIME_SETTING;
  2125  001308  0E01               	movlw	1
  2126  00130A  6FF1               	movwf	_menu_selected& (0+255),b
  2127  00130C                     l5394:
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;fs_menu_controller.c: 217:             if ((timer_value.remainingMinute <= 0) && (timer
      +                          _value.remainingSecond == 0) )
  2131  00130C  BFD9               	btfsc	(_timer_value+7)& (0+255),7,b
  2132  00130E  EF93  F009         	goto	u6760
  2133  001312  51D9               	movf	(_timer_value+7)& (0+255),w,b
  2134  001314  E106               	bnz	u6761
  2135  001316  05D8               	decf	(_timer_value+6)& (0+255),w,b
  2136  001318  B0D8               	btfsc	status,0,c
  2137  00131A  EF91  F009         	goto	u6761
  2138  00131E  EF93  F009         	goto	u6760
  2139  001322                     u6761:
  2140  001322  EFA2  F009         	goto	l358
  2141  001326                     u6760:
  2142  001326                     
  2143                           ; BSR set to: 0
  2144  001326  51D6               	movf	(_timer_value+4)& (0+255),w,b
  2145  001328  11D7               	iorwf	(_timer_value+5)& (0+255),w,b
  2146  00132A  A4D8               	btfss	status,2,c
  2147  00132C  EF9A  F009         	goto	u6771
  2148  001330  EF9C  F009         	goto	u6770
  2149  001334                     u6771:
  2150  001334  EFA2  F009         	goto	l358
  2151  001338                     u6770:
  2152  001338                     
  2153                           ; BSR set to: 0
  2154                           ;fs_menu_controller.c: 218:             {;fs_menu_controller.c: 219:                    
      +                           menu_selected = STOP_MENU;
  2155  001338  0E04               	movlw	4
  2156  00133A  6FF1               	movwf	_menu_selected& (0+255),b
  2157                           
  2158                           ;fs_menu_controller.c: 220:                     timer_value.minute = 0;
  2159  00133C  0E00               	movlw	0
  2160  00133E  6FD5               	movwf	(_timer_value+3)& (0+255),b
  2161  001340  0E00               	movlw	0
  2162  001342  6FD4               	movwf	(_timer_value+2)& (0+255),b
  2163  001344                     l358:
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;fs_menu_controller.c: 223:             if ( (startIsClick == 0) && (pauseIsClick == 1) 
      +                          && (stopIsClick == 0) && (menu_selected == MAIN_MENU))
  2167  001344  51F3               	movf	_startIsClick& (0+255),w,b
  2168  001346  A4D8               	btfss	status,2,c
  2169  001348  EFA8  F009         	goto	u6781
  2170  00134C  EFAA  F009         	goto	u6780
  2171  001350                     u6781:
  2172  001350  EFC4  F009         	goto	l359
  2173  001354                     u6780:
  2174  001354                     
  2175                           ; BSR set to: 0
  2176  001354  05F4               	decf	_pauseIsClick& (0+255),w,b
  2177  001356  A4D8               	btfss	status,2,c
  2178  001358  EFB0  F009         	goto	u6791
  2179  00135C  EFB2  F009         	goto	u6790
  2180  001360                     u6791:
  2181  001360  EFC4  F009         	goto	l359
  2182  001364                     u6790:
  2183  001364                     
  2184                           ; BSR set to: 0
  2185  001364  51F2               	movf	_stopIsClick& (0+255),w,b
  2186  001366  A4D8               	btfss	status,2,c
  2187  001368  EFB8  F009         	goto	u6801
  2188  00136C  EFBA  F009         	goto	u6800
  2189  001370                     u6801:
  2190  001370  EFC4  F009         	goto	l359
  2191  001374                     u6800:
  2192  001374                     
  2193                           ; BSR set to: 0
  2194  001374  51F1               	movf	_menu_selected& (0+255),w,b
  2195  001376  A4D8               	btfss	status,2,c
  2196  001378  EFC0  F009         	goto	u6811
  2197  00137C  EFC2  F009         	goto	u6810
  2198  001380                     u6811:
  2199  001380  EFC4  F009         	goto	l359
  2200  001384                     u6810:
  2201  001384                     
  2202                           ; BSR set to: 0
  2203                           ;fs_menu_controller.c: 224:             {;fs_menu_controller.c: 225:                 men
      +                          u_selected = PAUSE_MENU;
  2204  001384  0E06               	movlw	6
  2205  001386  6FF1               	movwf	_menu_selected& (0+255),b
  2206  001388                     l359:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;fs_menu_controller.c: 228:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == MAIN_MENU) )
  2210  001388  51F3               	movf	_startIsClick& (0+255),w,b
  2211  00138A  A4D8               	btfss	status,2,c
  2212  00138C  EFCA  F009         	goto	u6821
  2213  001390  EFCC  F009         	goto	u6820
  2214  001394                     u6821:
  2215  001394  EFDB  F00D         	goto	l397
  2216  001398                     u6820:
  2217  001398                     
  2218                           ; BSR set to: 0
  2219  001398  51F4               	movf	_pauseIsClick& (0+255),w,b
  2220  00139A  A4D8               	btfss	status,2,c
  2221  00139C  EFD2  F009         	goto	u6831
  2222  0013A0  EFD4  F009         	goto	u6830
  2223  0013A4                     u6831:
  2224  0013A4  EFDB  F00D         	goto	l397
  2225  0013A8                     u6830:
  2226  0013A8                     
  2227                           ; BSR set to: 0
  2228  0013A8  05F2               	decf	_stopIsClick& (0+255),w,b
  2229  0013AA  A4D8               	btfss	status,2,c
  2230  0013AC  EFDA  F009         	goto	u6841
  2231  0013B0  EFDC  F009         	goto	u6840
  2232  0013B4                     u6841:
  2233  0013B4  EFDB  F00D         	goto	l397
  2234  0013B8                     u6840:
  2235  0013B8                     
  2236                           ; BSR set to: 0
  2237  0013B8  51F1               	movf	_menu_selected& (0+255),w,b
  2238  0013BA  A4D8               	btfss	status,2,c
  2239  0013BC  EFE2  F009         	goto	u6851
  2240  0013C0  EFE4  F009         	goto	u6850
  2241  0013C4                     u6851:
  2242  0013C4  EFDB  F00D         	goto	l397
  2243  0013C8                     u6850:
  2244  0013C8                     
  2245                           ; BSR set to: 0
  2246                           ;fs_menu_controller.c: 229:             {;fs_menu_controller.c: 230:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  2247  0013C8  C0E4  F0D8         	movff	_menu_value,_timer_value+6
  2248  0013CC  6BD9               	clrf	(_timer_value+7)& (0+255),b
  2249  0013CE                     
  2250                           ; BSR set to: 0
  2251                           ;fs_menu_controller.c: 231:                  timer_value.remainingSecond = 0;
  2252  0013CE  0E00               	movlw	0
  2253  0013D0  6FD7               	movwf	(_timer_value+5)& (0+255),b
  2254  0013D2  0E00               	movlw	0
  2255  0013D4  6FD6               	movwf	(_timer_value+4)& (0+255),b
  2256                           
  2257                           ;fs_menu_controller.c: 232:                  timer_value.second = 0;
  2258  0013D6  0E00               	movlw	0
  2259  0013D8  6FD3               	movwf	(_timer_value+1)& (0+255),b
  2260  0013DA  0E00               	movlw	0
  2261  0013DC  6FD2               	movwf	_timer_value& (0+255),b
  2262                           
  2263                           ;fs_menu_controller.c: 233:                  timer_value.minute = 0;
  2264  0013DE  0E00               	movlw	0
  2265  0013E0  6FD5               	movwf	(_timer_value+3)& (0+255),b
  2266  0013E2  0E00               	movlw	0
  2267  0013E4  6FD4               	movwf	(_timer_value+2)& (0+255),b
  2268  0013E6  EFDB  F00D         	goto	l397
  2269  0013EA                     l362:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;fs_menu_controller.c: 241:             LATBbits.LATB6 = 0;
  2273  0013EA  9C8A               	bcf	138,6,c	;volatile
  2274                           
  2275                           ;fs_menu_controller.c: 242:             LATAbits.LATA4 = 0;
  2276  0013EC  9889               	bcf	137,4,c	;volatile
  2277                           
  2278                           ;fs_menu_controller.c: 243:             LATEbits.LATE2 = 1;
  2279  0013EE  848D               	bsf	141,2,c	;volatile
  2280                           
  2281                           ;fs_menu_controller.c: 245:             if (menu_flags.menu_input_flag == 1)
  2282  0013F0  A1F0               	btfss	_menu_flags& (0+255),0,b
  2283  0013F2  EFFD  F009         	goto	u6861
  2284  0013F6  EFFF  F009         	goto	u6860
  2285  0013FA                     u6861:
  2286  0013FA  EF02  F00A         	goto	l5422
  2287  0013FE                     u6860:
  2288  0013FE                     
  2289                           ; BSR set to: 0
  2290                           ;fs_menu_controller.c: 246:             {;fs_menu_controller.c: 247:                 men
      +                          u_flags.menu_input_flag = 0;
  2291  0013FE  91F0               	bcf	_menu_flags& (0+255),0,b
  2292  001400                     
  2293                           ; BSR set to: 0
  2294                           ;fs_menu_controller.c: 248:                 menu_selected = STOP_TIME_SETTING;
  2295  001400  0E02               	movlw	2
  2296  001402  6FF1               	movwf	_menu_selected& (0+255),b
  2297  001404                     l5422:
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;fs_menu_controller.c: 251:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.driver_time < 30))
  2301  001404  A9F0               	btfss	_menu_flags& (0+255),4,b
  2302  001406  EF07  F00A         	goto	u6871
  2303  00140A  EF09  F00A         	goto	u6870
  2304  00140E                     u6871:
  2305  00140E  EF28  F00A         	goto	l5440
  2306  001412                     u6870:
  2307  001412                     
  2308                           ; BSR set to: 0
  2309  001412  0E1E               	movlw	30
  2310  001414  61E4               	cpfslt	_menu_value& (0+255),b
  2311  001416  EF0F  F00A         	goto	u6881
  2312  00141A  EF11  F00A         	goto	u6880
  2313  00141E                     u6881:
  2314  00141E  EF28  F00A         	goto	l5440
  2315  001422                     u6880:
  2316  001422                     
  2317                           ; BSR set to: 0
  2318                           ;fs_menu_controller.c: 252:             {;fs_menu_controller.c: 253:                 men
      +                          u_flags.menu_increase_flag = 0;
  2319  001422  99F0               	bcf	_menu_flags& (0+255),4,b
  2320  001424                     
  2321                           ; BSR set to: 0
  2322                           ;fs_menu_controller.c: 254:                 menu_value.driver_time++;
  2323  001424  2BE4               	incf	_menu_value& (0+255),f,b
  2324  001426                     
  2325                           ; BSR set to: 0
  2326                           ;fs_menu_controller.c: 255:                 eepromWrite(0x00,(uint8_t)menu_value.driver_
      +                          time);
  2327  001426  C0E4  F001         	movff	_menu_value,eepromWrite@data
  2328  00142A  0E00               	movlw	0
  2329  00142C  EC90  F024         	call	_eepromWrite
  2330  001430                     
  2331                           ;fs_menu_controller.c: 256:                 timer_value.minute =0 ;
  2332  001430  0E00               	movlw	0
  2333  001432  0100               	movlb	0	; () banked
  2334  001434  6FD5               	movwf	(_timer_value+3)& (0+255),b
  2335  001436  0E00               	movlw	0
  2336  001438  6FD4               	movwf	(_timer_value+2)& (0+255),b
  2337  00143A                     
  2338                           ; BSR set to: 0
  2339                           ;fs_menu_controller.c: 257:                 timer_value.second = 0;
  2340  00143A  0E00               	movlw	0
  2341  00143C  6FD3               	movwf	(_timer_value+1)& (0+255),b
  2342  00143E  0E00               	movlw	0
  2343  001440  6FD2               	movwf	_timer_value& (0+255),b
  2344  001442                     
  2345                           ; BSR set to: 0
  2346                           ;fs_menu_controller.c: 258:                 timer_value.remainingSecond = 0;
  2347  001442  0E00               	movlw	0
  2348  001444  6FD7               	movwf	(_timer_value+5)& (0+255),b
  2349  001446  0E00               	movlw	0
  2350  001448  6FD6               	movwf	(_timer_value+4)& (0+255),b
  2351  00144A                     
  2352                           ; BSR set to: 0
  2353                           ;fs_menu_controller.c: 259:                 timer_value.remainingMinute = menu_value.dri
      +                          ver_time;
  2354  00144A  C0E4  F0D8         	movff	_menu_value,_timer_value+6
  2355  00144E  6BD9               	clrf	(_timer_value+7)& (0+255),b
  2356  001450                     l5440:
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;fs_menu_controller.c: 262:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.driver_time > 1))
  2360  001450  ABF0               	btfss	_menu_flags& (0+255),5,b
  2361  001452  EF2D  F00A         	goto	u6891
  2362  001456  EF2F  F00A         	goto	u6890
  2363  00145A                     u6891:
  2364  00145A  EF4E  F00A         	goto	l5458
  2365  00145E                     u6890:
  2366  00145E                     
  2367                           ; BSR set to: 0
  2368  00145E  0E01               	movlw	1
  2369  001460  65E4               	cpfsgt	_menu_value& (0+255),b
  2370  001462  EF35  F00A         	goto	u6901
  2371  001466  EF37  F00A         	goto	u6900
  2372  00146A                     u6901:
  2373  00146A  EF4E  F00A         	goto	l5458
  2374  00146E                     u6900:
  2375  00146E                     
  2376                           ; BSR set to: 0
  2377                           ;fs_menu_controller.c: 263:             {;fs_menu_controller.c: 264:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2378  00146E  9BF0               	bcf	_menu_flags& (0+255),5,b
  2379  001470                     
  2380                           ; BSR set to: 0
  2381                           ;fs_menu_controller.c: 265:                  menu_value.driver_time--;
  2382  001470  07E4               	decf	_menu_value& (0+255),f,b
  2383  001472                     
  2384                           ; BSR set to: 0
  2385                           ;fs_menu_controller.c: 266:                  eepromWrite(0x00,(uint8_t)menu_value.driver
      +                          _time);
  2386  001472  C0E4  F001         	movff	_menu_value,eepromWrite@data
  2387  001476  0E00               	movlw	0
  2388  001478  EC90  F024         	call	_eepromWrite
  2389  00147C                     
  2390                           ;fs_menu_controller.c: 267:                  timer_value.minute =0 ;
  2391  00147C  0E00               	movlw	0
  2392  00147E  0100               	movlb	0	; () banked
  2393  001480  6FD5               	movwf	(_timer_value+3)& (0+255),b
  2394  001482  0E00               	movlw	0
  2395  001484  6FD4               	movwf	(_timer_value+2)& (0+255),b
  2396  001486                     
  2397                           ; BSR set to: 0
  2398                           ;fs_menu_controller.c: 268:                  timer_value.second = 0;
  2399  001486  0E00               	movlw	0
  2400  001488  6FD3               	movwf	(_timer_value+1)& (0+255),b
  2401  00148A  0E00               	movlw	0
  2402  00148C  6FD2               	movwf	_timer_value& (0+255),b
  2403  00148E                     
  2404                           ; BSR set to: 0
  2405                           ;fs_menu_controller.c: 269:                  timer_value.remainingSecond = 0;
  2406  00148E  0E00               	movlw	0
  2407  001490  6FD7               	movwf	(_timer_value+5)& (0+255),b
  2408  001492  0E00               	movlw	0
  2409  001494  6FD6               	movwf	(_timer_value+4)& (0+255),b
  2410  001496                     
  2411                           ; BSR set to: 0
  2412                           ;fs_menu_controller.c: 270:                  timer_value.remainingMinute = menu_value.dr
      +                          iver_time;
  2413  001496  C0E4  F0D8         	movff	_menu_value,_timer_value+6
  2414  00149A  6BD9               	clrf	(_timer_value+7)& (0+255),b
  2415  00149C                     l5458:
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;fs_menu_controller.c: 274:             Lcd_Set_Cursor(1,1);
  2419  00149C  0E01               	movlw	1
  2420  00149E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2421  0014A0  0E01               	movlw	1
  2422  0014A2  EC0C  F022         	call	_Lcd_Set_Cursor
  2423  0014A6                     
  2424                           ;fs_menu_controller.c: 275:             Lcd_Write_String("HAREKT ZAMANI dk");
  2425  0014A6  0E68               	movlw	low STR_3
  2426  0014A8  6E05               	movwf	Lcd_Write_String@a^0,c
  2427  0014AA  0E06               	movlw	high STR_3
  2428  0014AC  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2429  0014AE  ECCD  F021         	call	_Lcd_Write_String	;wreg free
  2430  0014B2                     
  2431                           ;fs_menu_controller.c: 276:             Lcd_Set_Cursor(2,1);
  2432  0014B2  0E01               	movlw	1
  2433  0014B4  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2434  0014B6  0E02               	movlw	2
  2435  0014B8  EC0C  F022         	call	_Lcd_Set_Cursor
  2436  0014BC                     
  2437                           ;fs_menu_controller.c: 277:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.driver_time);
  2438  0014BC  0EB6               	movlw	low stateMachine@textCursor2
  2439  0014BE  0100               	movlb	0	; () banked
  2440  0014C0  6FAE               	movwf	sprintf@s& (0+255),b
  2441  0014C2  0E00               	movlw	high stateMachine@textCursor2
  2442  0014C4  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2443  0014C6  0E01               	movlw	low STR_4
  2444  0014C8  6FB0               	movwf	sprintf@fmt& (0+255),b
  2445  0014CA  0E06               	movlw	high STR_4
  2446  0014CC  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2447  0014CE  C0E4  F0B2         	movff	_menu_value,?_sprintf+4
  2448  0014D2  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  2449  0014D4  EC55  F023         	call	_sprintf	;wreg free
  2450  0014D8                     
  2451                           ;fs_menu_controller.c: 278:             Lcd_Write_String(textCursor2);
  2452  0014D8  0EB6               	movlw	low stateMachine@textCursor2
  2453  0014DA  6E05               	movwf	Lcd_Write_String@a^0,c
  2454  0014DC  0E00               	movlw	high stateMachine@textCursor2
  2455  0014DE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2456  0014E0  ECCD  F021         	call	_Lcd_Write_String	;wreg free
  2457  0014E4                     
  2458                           ;fs_menu_controller.c: 280:             if(timer_value.menu_login_delay == 100)
  2459  0014E4  0E64               	movlw	100
  2460  0014E6  0100               	movlb	0	; () banked
  2461  0014E8  19DA               	xorwf	(_timer_value+8)& (0+255),w,b
  2462  0014EA  A4D8               	btfss	status,2,c
  2463  0014EC  EF7A  F00A         	goto	u6911
  2464  0014F0  EF7C  F00A         	goto	u6910
  2465  0014F4                     u6911:
  2466  0014F4  EFDB  F00D         	goto	l397
  2467  0014F8                     u6910:
  2468  0014F8                     l5470:
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;fs_menu_controller.c: 281:             {;fs_menu_controller.c: 282:                 tim
      +                          er_value.menu_login_delay = 0;
  2472  0014F8  0E00               	movlw	0
  2473  0014FA  6FDA               	movwf	(_timer_value+8)& (0+255),b
  2474                           
  2475                           ;fs_menu_controller.c: 283:                 menu_selected = PAUSE_MENU;
  2476  0014FC  0E06               	movlw	6
  2477  0014FE  6FF1               	movwf	_menu_selected& (0+255),b
  2478  001500  EFDB  F00D         	goto	l397
  2479  001504                     l367:
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;fs_menu_controller.c: 290:             LATBbits.LATB6 = 0;
  2483  001504  9C8A               	bcf	138,6,c	;volatile
  2484                           
  2485                           ;fs_menu_controller.c: 291:             LATAbits.LATA4 = 0;
  2486  001506  9889               	bcf	137,4,c	;volatile
  2487                           
  2488                           ;fs_menu_controller.c: 292:             LATEbits.LATE2 = 1;
  2489  001508  848D               	bsf	141,2,c	;volatile
  2490                           
  2491                           ;fs_menu_controller.c: 294:             if (menu_flags.menu_input_flag == 1)
  2492  00150A  A1F0               	btfss	_menu_flags& (0+255),0,b
  2493  00150C  EF8A  F00A         	goto	u6921
  2494  001510  EF8C  F00A         	goto	u6920
  2495  001514                     u6921:
  2496  001514  EF8F  F00A         	goto	l5476
  2497  001518                     u6920:
  2498  001518                     
  2499                           ; BSR set to: 0
  2500                           ;fs_menu_controller.c: 295:             {;fs_menu_controller.c: 296:                 men
      +                          u_flags.menu_input_flag = 0;
  2501  001518  91F0               	bcf	_menu_flags& (0+255),0,b
  2502  00151A                     
  2503                           ; BSR set to: 0
  2504                           ;fs_menu_controller.c: 297:                 menu_selected = SPEED_LIMIT_SETTING;
  2505  00151A  0E03               	movlw	3
  2506  00151C  6FF1               	movwf	_menu_selected& (0+255),b
  2507  00151E                     l5476:
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;fs_menu_controller.c: 300:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.stop_time < 250))
  2511  00151E  A9F0               	btfss	_menu_flags& (0+255),4,b
  2512  001520  EF94  F00A         	goto	u6931
  2513  001524  EF96  F00A         	goto	u6930
  2514  001528                     u6931:
  2515  001528  EFA6  F00A         	goto	l5486
  2516  00152C                     u6930:
  2517  00152C                     
  2518                           ; BSR set to: 0
  2519  00152C  0EFA               	movlw	250
  2520  00152E  61E5               	cpfslt	(_menu_value+1)& (0+255),b
  2521  001530  EF9C  F00A         	goto	u6941
  2522  001534  EF9E  F00A         	goto	u6940
  2523  001538                     u6941:
  2524  001538  EFA6  F00A         	goto	l5486
  2525  00153C                     u6940:
  2526  00153C                     
  2527                           ; BSR set to: 0
  2528                           ;fs_menu_controller.c: 301:             {;fs_menu_controller.c: 302:                 men
      +                          u_flags.menu_increase_flag = 0;
  2529  00153C  99F0               	bcf	_menu_flags& (0+255),4,b
  2530  00153E                     
  2531                           ; BSR set to: 0
  2532                           ;fs_menu_controller.c: 303:                 menu_value.stop_time += 10;
  2533  00153E  0E0A               	movlw	10
  2534  001540  27E5               	addwf	(_menu_value+1)& (0+255),f,b
  2535  001542                     
  2536                           ; BSR set to: 0
  2537                           ;fs_menu_controller.c: 304:                 eepromWrite(0x01,(uint8_t)menu_value.stop_ti
      +                          me);
  2538  001542  C0E5  F001         	movff	_menu_value+1,eepromWrite@data
  2539  001546  0E01               	movlw	1
  2540  001548  EC90  F024         	call	_eepromWrite
  2541  00154C                     l5486:
  2542                           
  2543                           ;fs_menu_controller.c: 307:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.stop_time > 10))
  2544  00154C  0100               	movlb	0	; () banked
  2545  00154E  ABF0               	btfss	_menu_flags& (0+255),5,b
  2546  001550  EFAC  F00A         	goto	u6951
  2547  001554  EFAE  F00A         	goto	u6950
  2548  001558                     u6951:
  2549  001558  EFBE  F00A         	goto	l5496
  2550  00155C                     u6950:
  2551  00155C                     
  2552                           ; BSR set to: 0
  2553  00155C  0E0A               	movlw	10
  2554  00155E  65E5               	cpfsgt	(_menu_value+1)& (0+255),b
  2555  001560  EFB4  F00A         	goto	u6961
  2556  001564  EFB6  F00A         	goto	u6960
  2557  001568                     u6961:
  2558  001568  EFBE  F00A         	goto	l5496
  2559  00156C                     u6960:
  2560  00156C                     
  2561                           ; BSR set to: 0
  2562                           ;fs_menu_controller.c: 308:             {;fs_menu_controller.c: 309:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2563  00156C  9BF0               	bcf	_menu_flags& (0+255),5,b
  2564  00156E                     
  2565                           ; BSR set to: 0
  2566                           ;fs_menu_controller.c: 310:                  menu_value.stop_time -= 10;
  2567  00156E  0E0A               	movlw	10
  2568  001570  5FE5               	subwf	(_menu_value+1)& (0+255),f,b
  2569  001572                     
  2570                           ; BSR set to: 0
  2571                           ;fs_menu_controller.c: 311:                  eepromWrite(0x01,(uint8_t)menu_value.stop_t
      +                          ime);
  2572  001572  C0E5  F001         	movff	_menu_value+1,eepromWrite@data
  2573  001576  0E01               	movlw	1
  2574  001578  EC90  F024         	call	_eepromWrite
  2575  00157C                     l5496:
  2576                           
  2577                           ;fs_menu_controller.c: 313:             Lcd_Set_Cursor(1,1);
  2578  00157C  0E01               	movlw	1
  2579  00157E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2580  001580  0E01               	movlw	1
  2581  001582  EC0C  F022         	call	_Lcd_Set_Cursor
  2582  001586                     
  2583                           ;fs_menu_controller.c: 314:             Lcd_Write_String("DURMA ZAMANI  ms");
  2584  001586  0E79               	movlw	low STR_5
  2585  001588  6E05               	movwf	Lcd_Write_String@a^0,c
  2586  00158A  0E06               	movlw	high STR_5
  2587  00158C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2588  00158E  ECCD  F021         	call	_Lcd_Write_String	;wreg free
  2589  001592                     
  2590                           ;fs_menu_controller.c: 315:             Lcd_Set_Cursor(2,1);
  2591  001592  0E01               	movlw	1
  2592  001594  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2593  001596  0E02               	movlw	2
  2594  001598  EC0C  F022         	call	_Lcd_Set_Cursor
  2595  00159C                     
  2596                           ;fs_menu_controller.c: 316:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.stop_time);
  2597  00159C  0EB6               	movlw	low stateMachine@textCursor2
  2598  00159E  0100               	movlb	0	; () banked
  2599  0015A0  6FAE               	movwf	sprintf@s& (0+255),b
  2600  0015A2  0E00               	movlw	high stateMachine@textCursor2
  2601  0015A4  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2602  0015A6  0E01               	movlw	low STR_4
  2603  0015A8  6FB0               	movwf	sprintf@fmt& (0+255),b
  2604  0015AA  0E06               	movlw	high STR_4
  2605  0015AC  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2606  0015AE  C0E5  F0B2         	movff	_menu_value+1,?_sprintf+4
  2607  0015B2  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  2608  0015B4  EC55  F023         	call	_sprintf	;wreg free
  2609  0015B8                     
  2610                           ;fs_menu_controller.c: 317:             Lcd_Write_String(textCursor2);
  2611  0015B8  0EB6               	movlw	low stateMachine@textCursor2
  2612  0015BA  6E05               	movwf	Lcd_Write_String@a^0,c
  2613  0015BC  0E00               	movlw	high stateMachine@textCursor2
  2614  0015BE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2615  0015C0  ECCD  F021         	call	_Lcd_Write_String	;wreg free
  2616  0015C4                     
  2617                           ;fs_menu_controller.c: 319:             if(timer_value.menu_login_delay == 100)
  2618  0015C4  0E64               	movlw	100
  2619  0015C6  0100               	movlb	0	; () banked
  2620  0015C8  19DA               	xorwf	(_timer_value+8)& (0+255),w,b
  2621  0015CA  A4D8               	btfss	status,2,c
  2622  0015CC  EFEA  F00A         	goto	u6971
  2623  0015D0  EFEC  F00A         	goto	u6970
  2624  0015D4                     u6971:
  2625  0015D4  EFDB  F00D         	goto	l397
  2626  0015D8                     u6970:
  2627  0015D8  EF7C  F00A         	goto	l5470
  2628  0015DC                     l372:
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;fs_menu_controller.c: 328:             LATBbits.LATB6 = 0;
  2632  0015DC  9C8A               	bcf	138,6,c	;volatile
  2633                           
  2634                           ;fs_menu_controller.c: 329:             LATAbits.LATA4 = 0;
  2635  0015DE  9889               	bcf	137,4,c	;volatile
  2636                           
  2637                           ;fs_menu_controller.c: 330:             LATEbits.LATE2 = 1;
  2638  0015E0  848D               	bsf	141,2,c	;volatile
  2639                           
  2640                           ;fs_menu_controller.c: 332:             if (menu_flags.menu_input_flag == 1)
  2641  0015E2  A1F0               	btfss	_menu_flags& (0+255),0,b
  2642  0015E4  EFF6  F00A         	goto	u6981
  2643  0015E8  EFF8  F00A         	goto	u6980
  2644  0015EC                     u6981:
  2645  0015EC  EFFB  F00A         	goto	l5514
  2646  0015F0                     u6980:
  2647  0015F0                     
  2648                           ; BSR set to: 0
  2649                           ;fs_menu_controller.c: 333:             {;fs_menu_controller.c: 334:                 men
      +                          u_flags.menu_input_flag = 0;
  2650  0015F0  91F0               	bcf	_menu_flags& (0+255),0,b
  2651  0015F2                     
  2652                           ; BSR set to: 0
  2653                           ;fs_menu_controller.c: 335:                 menu_selected = DRIVER_TIME_SETTING;
  2654  0015F2  0E01               	movlw	1
  2655  0015F4  6FF1               	movwf	_menu_selected& (0+255),b
  2656  0015F6                     l5514:
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;fs_menu_controller.c: 338:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.speed_limit < 5))
  2660  0015F6  A9F0               	btfss	_menu_flags& (0+255),4,b
  2661  0015F8  EF00  F00B         	goto	u6991
  2662  0015FC  EF02  F00B         	goto	u6990
  2663  001600                     u6991:
  2664  001600  EF11  F00B         	goto	l5524
  2665  001604                     u6990:
  2666  001604                     
  2667                           ; BSR set to: 0
  2668  001604  0E05               	movlw	5
  2669  001606  61E6               	cpfslt	(_menu_value+2)& (0+255),b
  2670  001608  EF08  F00B         	goto	u7001
  2671  00160C  EF0A  F00B         	goto	u7000
  2672  001610                     u7001:
  2673  001610  EF11  F00B         	goto	l5524
  2674  001614                     u7000:
  2675  001614                     
  2676                           ; BSR set to: 0
  2677                           ;fs_menu_controller.c: 339:             {;fs_menu_controller.c: 340:                 men
      +                          u_flags.menu_increase_flag = 0;
  2678  001614  99F0               	bcf	_menu_flags& (0+255),4,b
  2679  001616                     
  2680                           ; BSR set to: 0
  2681                           ;fs_menu_controller.c: 341:                 menu_value.speed_limit += 1;
  2682  001616  2BE6               	incf	(_menu_value+2)& (0+255),f,b
  2683  001618                     
  2684                           ; BSR set to: 0
  2685                           ;fs_menu_controller.c: 342:                 eepromWrite(0x02,menu_value.speed_limit);
  2686  001618  C0E6  F001         	movff	_menu_value+2,eepromWrite@data
  2687  00161C  0E02               	movlw	2
  2688  00161E  EC90  F024         	call	_eepromWrite
  2689  001622                     l5524:
  2690                           
  2691                           ;fs_menu_controller.c: 345:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.speed_limit > 1))
  2692  001622  0100               	movlb	0	; () banked
  2693  001624  ABF0               	btfss	_menu_flags& (0+255),5,b
  2694  001626  EF17  F00B         	goto	u7011
  2695  00162A  EF19  F00B         	goto	u7010
  2696  00162E                     u7011:
  2697  00162E  EF28  F00B         	goto	l5534
  2698  001632                     u7010:
  2699  001632                     
  2700                           ; BSR set to: 0
  2701  001632  0E01               	movlw	1
  2702  001634  65E6               	cpfsgt	(_menu_value+2)& (0+255),b
  2703  001636  EF1F  F00B         	goto	u7021
  2704  00163A  EF21  F00B         	goto	u7020
  2705  00163E                     u7021:
  2706  00163E  EF28  F00B         	goto	l5534
  2707  001642                     u7020:
  2708  001642                     
  2709                           ; BSR set to: 0
  2710                           ;fs_menu_controller.c: 346:             {;fs_menu_controller.c: 347:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2711  001642  9BF0               	bcf	_menu_flags& (0+255),5,b
  2712  001644                     
  2713                           ; BSR set to: 0
  2714                           ;fs_menu_controller.c: 348:                  menu_value.speed_limit -= 1;
  2715  001644  07E6               	decf	(_menu_value+2)& (0+255),f,b
  2716  001646                     
  2717                           ; BSR set to: 0
  2718                           ;fs_menu_controller.c: 349:                  eepromWrite(0x02,menu_value.speed_limit);
  2719  001646  C0E6  F001         	movff	_menu_value+2,eepromWrite@data
  2720  00164A  0E02               	movlw	2
  2721  00164C  EC90  F024         	call	_eepromWrite
  2722  001650                     l5534:
  2723                           
  2724                           ;fs_menu_controller.c: 351:             Lcd_Set_Cursor(1,1);
  2725  001650  0E01               	movlw	1
  2726  001652  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2727  001654  0E01               	movlw	1
  2728  001656  EC0C  F022         	call	_Lcd_Set_Cursor
  2729  00165A                     
  2730                           ;fs_menu_controller.c: 352:             Lcd_Write_String("HIZ LiMiTi      ");
  2731  00165A  0E24               	movlw	low STR_7
  2732  00165C  6E05               	movwf	Lcd_Write_String@a^0,c
  2733  00165E  0E06               	movlw	high STR_7
  2734  001660  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2735  001662  ECCD  F021         	call	_Lcd_Write_String	;wreg free
  2736  001666                     
  2737                           ;fs_menu_controller.c: 353:             Lcd_Set_Cursor(2,1);
  2738  001666  0E01               	movlw	1
  2739  001668  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2740  00166A  0E02               	movlw	2
  2741  00166C  EC0C  F022         	call	_Lcd_Set_Cursor
  2742  001670                     
  2743                           ;fs_menu_controller.c: 354:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.speed_limit);
  2744  001670  0EB6               	movlw	low stateMachine@textCursor2
  2745  001672  0100               	movlb	0	; () banked
  2746  001674  6FAE               	movwf	sprintf@s& (0+255),b
  2747  001676  0E00               	movlw	high stateMachine@textCursor2
  2748  001678  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2749  00167A  0E01               	movlw	low STR_4
  2750  00167C  6FB0               	movwf	sprintf@fmt& (0+255),b
  2751  00167E  0E06               	movlw	high STR_4
  2752  001680  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2753  001682  C0E6  F0B2         	movff	_menu_value+2,?_sprintf+4
  2754  001686  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  2755  001688  EC55  F023         	call	_sprintf	;wreg free
  2756  00168C                     
  2757                           ;fs_menu_controller.c: 355:             Lcd_Write_String(textCursor2);
  2758  00168C  0EB6               	movlw	low stateMachine@textCursor2
  2759  00168E  6E05               	movwf	Lcd_Write_String@a^0,c
  2760  001690  0E00               	movlw	high stateMachine@textCursor2
  2761  001692  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2762  001694  ECCD  F021         	call	_Lcd_Write_String	;wreg free
  2763  001698                     
  2764                           ;fs_menu_controller.c: 357:             if(timer_value.menu_login_delay == 100)
  2765  001698  0E64               	movlw	100
  2766  00169A  0100               	movlb	0	; () banked
  2767  00169C  19DA               	xorwf	(_timer_value+8)& (0+255),w,b
  2768  00169E  A4D8               	btfss	status,2,c
  2769  0016A0  EF54  F00B         	goto	u7031
  2770  0016A4  EF56  F00B         	goto	u7030
  2771  0016A8                     u7031:
  2772  0016A8  EFDB  F00D         	goto	l397
  2773  0016AC                     u7030:
  2774  0016AC  EF7C  F00A         	goto	l5470
  2775  0016B0                     l5548:
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;fs_menu_controller.c: 365:             startIsClick = 0;
  2779  0016B0  0E00               	movlw	0
  2780  0016B2  6FF3               	movwf	_startIsClick& (0+255),b
  2781                           
  2782                           ;fs_menu_controller.c: 366:             pauseIsClick = 0;
  2783  0016B4  0E00               	movlw	0
  2784  0016B6  6FF4               	movwf	_pauseIsClick& (0+255),b
  2785                           
  2786                           ;fs_menu_controller.c: 367:             stopIsClick = 1;
  2787  0016B8  0E01               	movlw	1
  2788  0016BA  6FF2               	movwf	_stopIsClick& (0+255),b
  2789  0016BC                     
  2790                           ; BSR set to: 0
  2791                           ;fs_menu_controller.c: 369:             Lcd_Set_Cursor(1,1);
  2792  0016BC  0E01               	movlw	1
  2793  0016BE  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2794  0016C0  0E01               	movlw	1
  2795  0016C2  EC0C  F022         	call	_Lcd_Set_Cursor
  2796  0016C6                     
  2797                           ;fs_menu_controller.c: 370:             Lcd_Write_String("ZAMAN DOLDU     ");
  2798  0016C6  0E46               	movlw	low STR_9
  2799  0016C8  6E05               	movwf	Lcd_Write_String@a^0,c
  2800  0016CA  0E06               	movlw	high STR_9
  2801  0016CC  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2802  0016CE  ECCD  F021         	call	_Lcd_Write_String	;wreg free
  2803  0016D2                     
  2804                           ;fs_menu_controller.c: 371:             LATBbits.LATB6 = 1;
  2805  0016D2  8C8A               	bsf	138,6,c	;volatile
  2806  0016D4                     
  2807                           ;fs_menu_controller.c: 372:             LATEbits.LATE2 = 0;
  2808  0016D4  948D               	bcf	141,2,c	;volatile
  2809  0016D6                     
  2810                           ;fs_menu_controller.c: 373:             LATAbits.LATA4 = 0;
  2811  0016D6  9889               	bcf	137,4,c	;volatile
  2812  0016D8                     
  2813                           ;fs_menu_controller.c: 374:             timer_value.remainingSecond = 0;
  2814  0016D8  0E00               	movlw	0
  2815  0016DA  0100               	movlb	0	; () banked
  2816  0016DC  6FD7               	movwf	(_timer_value+5)& (0+255),b
  2817  0016DE  0E00               	movlw	0
  2818  0016E0  6FD6               	movwf	(_timer_value+4)& (0+255),b
  2819  0016E2                     
  2820                           ; BSR set to: 0
  2821                           ;fs_menu_controller.c: 375:             timer_value.remainingMinute = 0;
  2822  0016E2  0E00               	movlw	0
  2823  0016E4  6FD9               	movwf	(_timer_value+7)& (0+255),b
  2824  0016E6  0E00               	movlw	0
  2825  0016E8  6FD8               	movwf	(_timer_value+6)& (0+255),b
  2826  0016EA                     
  2827                           ; BSR set to: 0
  2828                           ;fs_menu_controller.c: 376:              Lcd_Set_Cursor(2,1);
  2829  0016EA  0E01               	movlw	1
  2830  0016EC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2831  0016EE  0E02               	movlw	2
  2832  0016F0  EC0C  F022         	call	_Lcd_Set_Cursor
  2833  0016F4                     
  2834                           ;fs_menu_controller.c: 377:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  2835  0016F4  0EB6               	movlw	low stateMachine@textCursor2
  2836  0016F6  0100               	movlb	0	; () banked
  2837  0016F8  6FAE               	movwf	sprintf@s& (0+255),b
  2838  0016FA  0E00               	movlw	high stateMachine@textCursor2
  2839  0016FC  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2840  0016FE  0E8A               	movlw	low STR_10
  2841  001700  6FB0               	movwf	sprintf@fmt& (0+255),b
  2842  001702  0E06               	movlw	high STR_10
  2843  001704  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2844  001706  C0D8  F0B2         	movff	_timer_value+6,?_sprintf+4
  2845  00170A  C0D9  F0B3         	movff	_timer_value+7,?_sprintf+5
  2846  00170E  C0D6  F0B4         	movff	_timer_value+4,?_sprintf+6
  2847  001712  C0D7  F0B5         	movff	_timer_value+5,?_sprintf+7
  2848  001716  EC55  F023         	call	_sprintf	;wreg free
  2849  00171A                     
  2850                           ;fs_menu_controller.c: 378:             Lcd_Write_String(textCursor2);
  2851  00171A  0EB6               	movlw	low stateMachine@textCursor2
  2852  00171C  6E05               	movwf	Lcd_Write_String@a^0,c
  2853  00171E  0E00               	movlw	high stateMachine@textCursor2
  2854  001720  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2855  001722  ECCD  F021         	call	_Lcd_Write_String	;wreg free
  2856  001726                     
  2857                           ;fs_menu_controller.c: 380:         if (menu_flags.menu_start_flag == 1)
  2858  001726  0100               	movlb	0	; () banked
  2859  001728  A3F0               	btfss	_menu_flags& (0+255),1,b
  2860  00172A  EF99  F00B         	goto	u7041
  2861  00172E  EF9B  F00B         	goto	u7040
  2862  001732                     u7041:
  2863  001732  EFAC  F00B         	goto	l5576
  2864  001736                     u7040:
  2865  001736                     
  2866                           ; BSR set to: 0
  2867                           ;fs_menu_controller.c: 381:         {;fs_menu_controller.c: 382:             menu_flags.
      +                          menu_start_flag = 0;
  2868  001736  93F0               	bcf	_menu_flags& (0+255),1,b
  2869  001738                     
  2870                           ; BSR set to: 0
  2871                           ;fs_menu_controller.c: 383:             menu_selected = START_MENU;
  2872  001738  0E05               	movlw	5
  2873  00173A  6FF1               	movwf	_menu_selected& (0+255),b
  2874                           
  2875                           ;fs_menu_controller.c: 385:             startIsClick = 1;
  2876  00173C  0E01               	movlw	1
  2877  00173E  6FF3               	movwf	_startIsClick& (0+255),b
  2878                           
  2879                           ;fs_menu_controller.c: 386:             pauseIsClick = 0;
  2880  001740  0E00               	movlw	0
  2881  001742  6FF4               	movwf	_pauseIsClick& (0+255),b
  2882                           
  2883                           ;fs_menu_controller.c: 387:             stopIsClick = 0;
  2884  001744  0E00               	movlw	0
  2885  001746  6FF2               	movwf	_stopIsClick& (0+255),b
  2886                           
  2887                           ;fs_menu_controller.c: 388:             timer_value.second = 0;
  2888  001748  0E00               	movlw	0
  2889  00174A  6FD3               	movwf	(_timer_value+1)& (0+255),b
  2890  00174C  0E00               	movlw	0
  2891  00174E  6FD2               	movwf	_timer_value& (0+255),b
  2892                           
  2893                           ;fs_menu_controller.c: 389:             timer_value.minute = 0;
  2894  001750  0E00               	movlw	0
  2895  001752  6FD5               	movwf	(_timer_value+3)& (0+255),b
  2896  001754  0E00               	movlw	0
  2897  001756  6FD4               	movwf	(_timer_value+2)& (0+255),b
  2898  001758                     l5576:
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;fs_menu_controller.c: 392:         if ( timer_value.menu_login_delay == 100)
  2902  001758  0E64               	movlw	100
  2903  00175A  19DA               	xorwf	(_timer_value+8)& (0+255),w,b
  2904  00175C  A4D8               	btfss	status,2,c
  2905  00175E  EFB3  F00B         	goto	u7051
  2906  001762  EFB5  F00B         	goto	u7050
  2907  001766                     u7051:
  2908  001766  EFDB  F00D         	goto	l397
  2909  00176A                     u7050:
  2910  00176A                     
  2911                           ; BSR set to: 0
  2912                           ;fs_menu_controller.c: 393:         {;fs_menu_controller.c: 394:             timer_value
      +                          .menu_login_delay = 0;
  2913  00176A  0E00               	movlw	0
  2914  00176C  6FDA               	movwf	(_timer_value+8)& (0+255),b
  2915                           
  2916                           ;fs_menu_controller.c: 395:             menu_selected = DRIVER_TIME_SETTING;
  2917  00176E  0E01               	movlw	1
  2918  001770  6FF1               	movwf	_menu_selected& (0+255),b
  2919  001772  EFDB  F00D         	goto	l397
  2920  001776                     l380:
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;fs_menu_controller.c: 401:             timer_value.remainingMinute = menu_value.driver_
      +                          time;
  2924  001776  C0E4  F0D8         	movff	_menu_value,_timer_value+6
  2925  00177A  6BD9               	clrf	(_timer_value+7)& (0+255),b
  2926  00177C                     
  2927                           ; BSR set to: 0
  2928                           ;fs_menu_controller.c: 402:             timer_value.remainingSecond = 0;
  2929  00177C  0E00               	movlw	0
  2930  00177E  6FD7               	movwf	(_timer_value+5)& (0+255),b
  2931  001780  0E00               	movlw	0
  2932  001782  6FD6               	movwf	(_timer_value+4)& (0+255),b
  2933                           
  2934                           ;fs_menu_controller.c: 403:             startIsClick = 1;
  2935  001784  0E01               	movlw	1
  2936  001786  6FF3               	movwf	_startIsClick& (0+255),b
  2937                           
  2938                           ;fs_menu_controller.c: 404:             stopIsClick = 0;
  2939  001788  0E00               	movlw	0
  2940  00178A  6FF2               	movwf	_stopIsClick& (0+255),b
  2941                           
  2942                           ;fs_menu_controller.c: 405:             menu_selected = MAIN_MENU;
  2943  00178C  0E00               	movlw	0
  2944  00178E  6FF1               	movwf	_menu_selected& (0+255),b
  2945                           
  2946                           ;fs_menu_controller.c: 406:         break;
  2947  001790  EFDB  F00D         	goto	l397
  2948  001794                     l381:
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;fs_menu_controller.c: 410:             LATBbits.LATB6 = 1;
  2952  001794  8C8A               	bsf	138,6,c	;volatile
  2953                           
  2954                           ;fs_menu_controller.c: 411:             LATAbits.LATA4 = 1;
  2955  001796  8889               	bsf	137,4,c	;volatile
  2956                           
  2957                           ;fs_menu_controller.c: 412:             LATEbits.LATE2 = 1;
  2958  001798  848D               	bsf	141,2,c	;volatile
  2959  00179A                     
  2960                           ; BSR set to: 0
  2961                           ;fs_menu_controller.c: 416:             Lcd_Set_Cursor(1,1);
  2962  00179A  0E01               	movlw	1
  2963  00179C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2964  00179E  0E01               	movlw	1
  2965  0017A0  EC0C  F022         	call	_Lcd_Set_Cursor
  2966  0017A4                     
  2967                           ;fs_menu_controller.c: 417:             Lcd_Write_String("HAREKET DURDU   ");
  2968  0017A4  0E57               	movlw	low STR_11
  2969  0017A6  6E05               	movwf	Lcd_Write_String@a^0,c
  2970  0017A8  0E06               	movlw	high STR_11
  2971  0017AA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2972  0017AC  ECCD  F021         	call	_Lcd_Write_String	;wreg free
  2973  0017B0                     
  2974                           ;fs_menu_controller.c: 418:             Lcd_Set_Cursor(2,1);
  2975  0017B0  0E01               	movlw	1
  2976  0017B2  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2977  0017B4  0E02               	movlw	2
  2978  0017B6  EC0C  F022         	call	_Lcd_Set_Cursor
  2979  0017BA                     
  2980                           ;fs_menu_controller.c: 419:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  2981  0017BA  0EB6               	movlw	low stateMachine@textCursor2
  2982  0017BC  0100               	movlb	0	; () banked
  2983  0017BE  6FAE               	movwf	sprintf@s& (0+255),b
  2984  0017C0  0E00               	movlw	high stateMachine@textCursor2
  2985  0017C2  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2986  0017C4  0E8A               	movlw	low STR_10
  2987  0017C6  6FB0               	movwf	sprintf@fmt& (0+255),b
  2988  0017C8  0E06               	movlw	high STR_10
  2989  0017CA  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2990  0017CC  C0D8  F0B2         	movff	_timer_value+6,?_sprintf+4
  2991  0017D0  C0D9  F0B3         	movff	_timer_value+7,?_sprintf+5
  2992  0017D4  C0D6  F0B4         	movff	_timer_value+4,?_sprintf+6
  2993  0017D8  C0D7  F0B5         	movff	_timer_value+5,?_sprintf+7
  2994  0017DC  EC55  F023         	call	_sprintf	;wreg free
  2995  0017E0                     
  2996                           ;fs_menu_controller.c: 420:             Lcd_Write_String(textCursor2);
  2997  0017E0  0EB6               	movlw	low stateMachine@textCursor2
  2998  0017E2  6E05               	movwf	Lcd_Write_String@a^0,c
  2999  0017E4  0E00               	movlw	high stateMachine@textCursor2
  3000  0017E6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3001  0017E8  ECCD  F021         	call	_Lcd_Write_String	;wreg free
  3002  0017EC                     
  3003                           ;fs_menu_controller.c: 422:             if (menu_flags.menu_start_flag == 1)
  3004  0017EC  0100               	movlb	0	; () banked
  3005  0017EE  A3F0               	btfss	_menu_flags& (0+255),1,b
  3006  0017F0  EFFC  F00B         	goto	u7061
  3007  0017F4  EFFE  F00B         	goto	u7060
  3008  0017F8                     u7061:
  3009  0017F8  EF07  F00C         	goto	l382
  3010  0017FC                     u7060:
  3011  0017FC                     
  3012                           ; BSR set to: 0
  3013                           ;fs_menu_controller.c: 423:             {;fs_menu_controller.c: 424:                 men
      +                          u_flags.menu_start_flag = 0;
  3014  0017FC  93F0               	bcf	_menu_flags& (0+255),1,b
  3015  0017FE                     
  3016                           ; BSR set to: 0
  3017                           ;fs_menu_controller.c: 425:                 menu_selected = MAIN_MENU;
  3018  0017FE  0E00               	movlw	0
  3019  001800  6FF1               	movwf	_menu_selected& (0+255),b
  3020                           
  3021                           ;fs_menu_controller.c: 427:                 startIsClick = 1;
  3022  001802  0E01               	movlw	1
  3023  001804  6FF3               	movwf	_startIsClick& (0+255),b
  3024                           
  3025                           ;fs_menu_controller.c: 428:                 pauseIsClick = 0;
  3026  001806  0E00               	movlw	0
  3027  001808  6FF4               	movwf	_pauseIsClick& (0+255),b
  3028                           
  3029                           ;fs_menu_controller.c: 429:                 stopIsClick = 0;
  3030  00180A  0E00               	movlw	0
  3031  00180C  6FF2               	movwf	_stopIsClick& (0+255),b
  3032  00180E                     l382:
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;fs_menu_controller.c: 432:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == PAUSE_MENU))
  3036  00180E  51F3               	movf	_startIsClick& (0+255),w,b
  3037  001810  A4D8               	btfss	status,2,c
  3038  001812  EF0D  F00C         	goto	u7071
  3039  001816  EF0F  F00C         	goto	u7070
  3040  00181A                     u7071:
  3041  00181A  EF37  F00C         	goto	l5608
  3042  00181E                     u7070:
  3043  00181E                     
  3044                           ; BSR set to: 0
  3045  00181E  51F4               	movf	_pauseIsClick& (0+255),w,b
  3046  001820  A4D8               	btfss	status,2,c
  3047  001822  EF15  F00C         	goto	u7081
  3048  001826  EF17  F00C         	goto	u7080
  3049  00182A                     u7081:
  3050  00182A  EF37  F00C         	goto	l5608
  3051  00182E                     u7080:
  3052  00182E                     
  3053                           ; BSR set to: 0
  3054  00182E  05F2               	decf	_stopIsClick& (0+255),w,b
  3055  001830  A4D8               	btfss	status,2,c
  3056  001832  EF1D  F00C         	goto	u7091
  3057  001836  EF1F  F00C         	goto	u7090
  3058  00183A                     u7091:
  3059  00183A  EF37  F00C         	goto	l5608
  3060  00183E                     u7090:
  3061  00183E                     
  3062                           ; BSR set to: 0
  3063  00183E  0E06               	movlw	6
  3064  001840  19F1               	xorwf	_menu_selected& (0+255),w,b
  3065  001842  A4D8               	btfss	status,2,c
  3066  001844  EF26  F00C         	goto	u7101
  3067  001848  EF28  F00C         	goto	u7100
  3068  00184C                     u7101:
  3069  00184C  EF37  F00C         	goto	l5608
  3070  001850                     u7100:
  3071  001850                     
  3072                           ; BSR set to: 0
  3073                           ;fs_menu_controller.c: 433:             {;fs_menu_controller.c: 434:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  3074  001850  C0E4  F0D8         	movff	_menu_value,_timer_value+6
  3075  001854  6BD9               	clrf	(_timer_value+7)& (0+255),b
  3076  001856                     
  3077                           ; BSR set to: 0
  3078                           ;fs_menu_controller.c: 435:                  timer_value.remainingSecond = 0;
  3079  001856  0E00               	movlw	0
  3080  001858  6FD7               	movwf	(_timer_value+5)& (0+255),b
  3081  00185A  0E00               	movlw	0
  3082  00185C  6FD6               	movwf	(_timer_value+4)& (0+255),b
  3083                           
  3084                           ;fs_menu_controller.c: 436:                  timer_value.second = 0;
  3085  00185E  0E00               	movlw	0
  3086  001860  6FD3               	movwf	(_timer_value+1)& (0+255),b
  3087  001862  0E00               	movlw	0
  3088  001864  6FD2               	movwf	_timer_value& (0+255),b
  3089                           
  3090                           ;fs_menu_controller.c: 437:                  timer_value.minute = 0;
  3091  001866  0E00               	movlw	0
  3092  001868  6FD5               	movwf	(_timer_value+3)& (0+255),b
  3093  00186A  0E00               	movlw	0
  3094  00186C  6FD4               	movwf	(_timer_value+2)& (0+255),b
  3095  00186E                     l5608:
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;fs_menu_controller.c: 441:             if ( timer_value.menu_login_delay == 100)
  3099  00186E  0E64               	movlw	100
  3100  001870  19DA               	xorwf	(_timer_value+8)& (0+255),w,b
  3101  001872  A4D8               	btfss	status,2,c
  3102  001874  EF3E  F00C         	goto	u7111
  3103  001878  EF40  F00C         	goto	u7110
  3104  00187C                     u7111:
  3105  00187C  EF44  F00C         	goto	l5612
  3106  001880                     u7110:
  3107  001880                     
  3108                           ; BSR set to: 0
  3109                           ;fs_menu_controller.c: 442:             {;fs_menu_controller.c: 443:                 tim
      +                          er_value.menu_login_delay = 0;
  3110  001880  0E00               	movlw	0
  3111  001882  6FDA               	movwf	(_timer_value+8)& (0+255),b
  3112                           
  3113                           ;fs_menu_controller.c: 444:                 menu_selected = DRIVER_TIME_SETTING;
  3114  001884  0E01               	movlw	1
  3115  001886  6FF1               	movwf	_menu_selected& (0+255),b
  3116  001888                     l5612:
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;fs_menu_controller.c: 447:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_flags.menu_decrease_flag == 1))
  3120  001888  A9F0               	btfss	_menu_flags& (0+255),4,b
  3121  00188A  EF49  F00C         	goto	u7121
  3122  00188E  EF4B  F00C         	goto	u7120
  3123  001892                     u7121:
  3124  001892  EFDB  F00D         	goto	l397
  3125  001896                     u7120:
  3126  001896                     
  3127                           ; BSR set to: 0
  3128  001896  ABF0               	btfss	_menu_flags& (0+255),5,b
  3129  001898  EF50  F00C         	goto	u7131
  3130  00189C  EF52  F00C         	goto	u7130
  3131  0018A0                     u7131:
  3132  0018A0  EFDB  F00D         	goto	l397
  3133  0018A4                     u7130:
  3134  0018A4                     
  3135                           ; BSR set to: 0
  3136                           ;fs_menu_controller.c: 448:             {;fs_menu_controller.c: 449:                 men
      +                          u_selected = SECRET_MENU;
  3137  0018A4  0E08               	movlw	8
  3138  0018A6  6FF1               	movwf	_menu_selected& (0+255),b
  3139                           
  3140                           ;fs_menu_controller.c: 450:                 secretMenuCounter = 1;
  3141  0018A8  0E01               	movlw	1
  3142  0018AA  6FEF               	movwf	stateMachine@secretMenuCounter& (0+255),b
  3143  0018AC  EFDB  F00D         	goto	l397
  3144  0018B0                     l387:
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;fs_menu_controller.c: 462:             if (menu_flags.menu_input_flag == 1)
  3148  0018B0  A1F0               	btfss	_menu_flags& (0+255),0,b
  3149  0018B2  EF5D  F00C         	goto	u7141
  3150  0018B6  EF5F  F00C         	goto	u7140
  3151  0018BA                     u7141:
  3152  0018BA  EF6B  F00C         	goto	l5626
  3153  0018BE                     u7140:
  3154  0018BE                     
  3155                           ; BSR set to: 0
  3156                           ;fs_menu_controller.c: 463:             {;fs_menu_controller.c: 464:                 men
      +                          u_flags.menu_input_flag = 0;
  3157  0018BE  91F0               	bcf	_menu_flags& (0+255),0,b
  3158  0018C0                     
  3159                           ; BSR set to: 0
  3160                           ;fs_menu_controller.c: 465:                 secretMenuCounter++;
  3161  0018C0  2BEF               	incf	stateMachine@secretMenuCounter& (0+255),f,b
  3162  0018C2                     
  3163                           ; BSR set to: 0
  3164                           ;fs_menu_controller.c: 467:                 if (secretMenuCounter >2)
  3165  0018C2  0E02               	movlw	2
  3166  0018C4  65EF               	cpfsgt	stateMachine@secretMenuCounter& (0+255),b
  3167  0018C6  EF67  F00C         	goto	u7151
  3168  0018CA  EF69  F00C         	goto	u7150
  3169  0018CE                     u7151:
  3170  0018CE  EF6B  F00C         	goto	l5626
  3171  0018D2                     u7150:
  3172  0018D2                     
  3173                           ; BSR set to: 0
  3174                           ;fs_menu_controller.c: 468:                 {;fs_menu_controller.c: 469:                
      +                               secretMenuCounter = 1;
  3175  0018D2  0E01               	movlw	1
  3176  0018D4  6FEF               	movwf	stateMachine@secretMenuCounter& (0+255),b
  3177  0018D6                     l5626:
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;fs_menu_controller.c: 473:             if (secretMenuCounter == 1)
  3181  0018D6  05EF               	decf	stateMachine@secretMenuCounter& (0+255),w,b
  3182  0018D8  A4D8               	btfss	status,2,c
  3183  0018DA  EF71  F00C         	goto	u7161
  3184  0018DE  EF73  F00C         	goto	u7160
  3185  0018E2                     u7161:
  3186  0018E2  EF03  F00D         	goto	l5654
  3187  0018E6                     u7160:
  3188  0018E6                     
  3189                           ; BSR set to: 0
  3190                           ;fs_menu_controller.c: 474:             {;fs_menu_controller.c: 475:                 Lcd
      +                          _Set_Cursor(1,1);
  3191  0018E6  0E01               	movlw	1
  3192  0018E8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3193  0018EA  0E01               	movlw	1
  3194  0018EC  EC0C  F022         	call	_Lcd_Set_Cursor
  3195  0018F0                     
  3196                           ;fs_menu_controller.c: 476:                 Lcd_Write_String("PID PARAM       ");
  3197  0018F0  0E13               	movlw	low STR_13
  3198  0018F2  6E05               	movwf	Lcd_Write_String@a^0,c
  3199  0018F4  0E06               	movlw	high STR_13
  3200  0018F6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3201  0018F8  ECCD  F021         	call	_Lcd_Write_String	;wreg free
  3202  0018FC                     
  3203                           ;fs_menu_controller.c: 477:                 Lcd_Set_Cursor(2,1);
  3204  0018FC  0E01               	movlw	1
  3205  0018FE  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3206  001900  0E02               	movlw	2
  3207  001902  EC0C  F022         	call	_Lcd_Set_Cursor
  3208  001906                     
  3209                           ;fs_menu_controller.c: 478:                 sprintf(textCursor2,"Kp:%5.1f     ",KP);
  3210  001906  0EB6               	movlw	low stateMachine@textCursor2
  3211  001908  0100               	movlb	0	; () banked
  3212  00190A  6FAE               	movwf	sprintf@s& (0+255),b
  3213  00190C  0E00               	movlw	high stateMachine@textCursor2
  3214  00190E  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3215  001910  0EA9               	movlw	low STR_14
  3216  001912  6FB0               	movwf	sprintf@fmt& (0+255),b
  3217  001914  0E06               	movlw	high STR_14
  3218  001916  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3219  001918  C0FA  F0B2         	movff	_KP,?_sprintf+4
  3220  00191C  C0FB  F0B3         	movff	_KP+1,?_sprintf+5
  3221  001920  C0FC  F0B4         	movff	_KP+2,?_sprintf+6
  3222  001924  C0FD  F0B5         	movff	_KP+3,?_sprintf+7
  3223  001928  EC55  F023         	call	_sprintf	;wreg free
  3224  00192C                     
  3225                           ;fs_menu_controller.c: 479:                 Lcd_Write_String(textCursor2);
  3226  00192C  0EB6               	movlw	low stateMachine@textCursor2
  3227  00192E  6E05               	movwf	Lcd_Write_String@a^0,c
  3228  001930  0E00               	movlw	high stateMachine@textCursor2
  3229  001932  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3230  001934  ECCD  F021         	call	_Lcd_Write_String	;wreg free
  3231  001938                     
  3232                           ;fs_menu_controller.c: 481:                 if ((menu_flags.menu_increase_flag == 1) && 
      +                          (KP < 2.5))
  3233  001938  0100               	movlb	0	; () banked
  3234  00193A  A9F0               	btfss	_menu_flags& (0+255),4,b
  3235  00193C  EFA2  F00C         	goto	u7171
  3236  001940  EFA4  F00C         	goto	u7170
  3237  001944                     u7171:
  3238  001944  EFD9  F00C         	goto	l5646
  3239  001948                     u7170:
  3240  001948                     
  3241                           ; BSR set to: 0
  3242  001948  C0FA  F01A         	movff	_KP,___flge@ff1
  3243  00194C  C0FB  F01B         	movff	_KP+1,___flge@ff1+1
  3244  001950  C0FC  F01C         	movff	_KP+2,___flge@ff1+2
  3245  001954  C0FD  F01D         	movff	_KP+3,___flge@ff1+3
  3246  001958  0E00               	movlw	0
  3247  00195A  6E1E               	movwf	___flge@ff2^0,c
  3248  00195C  0E00               	movlw	0
  3249  00195E  6E1F               	movwf	(___flge@ff2+1)^0,c
  3250  001960  0E20               	movlw	32
  3251  001962  6E20               	movwf	(___flge@ff2+2)^0,c
  3252  001964  0E40               	movlw	64
  3253  001966  6E21               	movwf	(___flge@ff2+3)^0,c
  3254  001968  ECD7  F01D         	call	___flge	;wreg free
  3255  00196C  B0D8               	btfsc	status,0,c
  3256  00196E  EFBB  F00C         	goto	u7181
  3257  001972  EFBD  F00C         	goto	u7180
  3258  001976                     u7181:
  3259  001976  EFD9  F00C         	goto	l5646
  3260  00197A                     u7180:
  3261  00197A                     
  3262                           ;fs_menu_controller.c: 482:                 {;fs_menu_controller.c: 483:                
      +                               menu_flags.menu_increase_flag = 0;
  3263  00197A  0100               	movlb	0	; () banked
  3264  00197C  99F0               	bcf	_menu_flags& (0+255),4,b
  3265  00197E                     
  3266                           ; BSR set to: 0
  3267                           ;fs_menu_controller.c: 484:                     KP += 0.1;
  3268  00197E  C0FA  F001         	movff	_KP,___fladd@b
  3269  001982  C0FB  F002         	movff	_KP+1,___fladd@b+1
  3270  001986  C0FC  F003         	movff	_KP+2,___fladd@b+2
  3271  00198A  C0FD  F004         	movff	_KP+3,___fladd@b+3
  3272  00198E  0ECD               	movlw	205
  3273  001990  6E05               	movwf	___fladd@a^0,c
  3274  001992  0ECC               	movlw	204
  3275  001994  6E06               	movwf	(___fladd@a+1)^0,c
  3276  001996  0ECC               	movlw	204
  3277  001998  6E07               	movwf	(___fladd@a+2)^0,c
  3278  00199A  0E3D               	movlw	61
  3279  00199C  6E08               	movwf	(___fladd@a+3)^0,c
  3280  00199E  ECF4  F010         	call	___fladd	;wreg free
  3281  0019A2  C001  F0FA         	movff	?___fladd,_KP
  3282  0019A6  C002  F0FB         	movff	?___fladd+1,_KP+1
  3283  0019AA  C003  F0FC         	movff	?___fladd+2,_KP+2
  3284  0019AE  C004  F0FD         	movff	?___fladd+3,_KP+3
  3285  0019B2                     l5646:
  3286                           
  3287                           ;fs_menu_controller.c: 487:                 if ((menu_flags.menu_decrease_flag == 1) && 
      +                          (KP >= 0))
  3288  0019B2  0100               	movlb	0	; () banked
  3289  0019B4  ABF0               	btfss	_menu_flags& (0+255),5,b
  3290  0019B6  EFDF  F00C         	goto	u7191
  3291  0019BA  EFE1  F00C         	goto	u7190
  3292  0019BE                     u7191:
  3293  0019BE  EF03  F00D         	goto	l5654
  3294  0019C2                     u7190:
  3295  0019C2                     
  3296                           ; BSR set to: 0
  3297  0019C2  BFFD               	btfsc	(_KP+3)& (0+255),7,b
  3298  0019C4  EFE6  F00C         	goto	u7201
  3299  0019C8  EFE8  F00C         	goto	u7200
  3300  0019CC                     u7201:
  3301  0019CC  EF03  F00D         	goto	l5654
  3302  0019D0                     u7200:
  3303  0019D0                     
  3304                           ; BSR set to: 0
  3305                           ;fs_menu_controller.c: 488:                 {;fs_menu_controller.c: 489:                
      +                               menu_flags.menu_decrease_flag = 0;
  3306  0019D0  9BF0               	bcf	_menu_flags& (0+255),5,b
  3307  0019D2                     
  3308                           ; BSR set to: 0
  3309                           ;fs_menu_controller.c: 490:                      KP -= 0.1;
  3310  0019D2  C0FA  F01A         	movff	_KP,___flsub@b
  3311  0019D6  C0FB  F01B         	movff	_KP+1,___flsub@b+1
  3312  0019DA  C0FC  F01C         	movff	_KP+2,___flsub@b+2
  3313  0019DE  C0FD  F01D         	movff	_KP+3,___flsub@b+3
  3314  0019E2  0ECD               	movlw	205
  3315  0019E4  6E1E               	movwf	___flsub@a^0,c
  3316  0019E6  0ECC               	movlw	204
  3317  0019E8  6E1F               	movwf	(___flsub@a+1)^0,c
  3318  0019EA  0ECC               	movlw	204
  3319  0019EC  6E20               	movwf	(___flsub@a+2)^0,c
  3320  0019EE  0E3D               	movlw	61
  3321  0019F0  6E21               	movwf	(___flsub@a+3)^0,c
  3322  0019F2  ECA1  F023         	call	___flsub	;wreg free
  3323  0019F6  C01A  F0FA         	movff	?___flsub,_KP
  3324  0019FA  C01B  F0FB         	movff	?___flsub+1,_KP+1
  3325  0019FE  C01C  F0FC         	movff	?___flsub+2,_KP+2
  3326  001A02  C01D  F0FD         	movff	?___flsub+3,_KP+3
  3327  001A06                     l5654:
  3328                           
  3329                           ;fs_menu_controller.c: 494:             if (secretMenuCounter == 2)
  3330  001A06  0E02               	movlw	2
  3331  001A08  0100               	movlb	0	; () banked
  3332  001A0A  19EF               	xorwf	stateMachine@secretMenuCounter& (0+255),w,b
  3333  001A0C  A4D8               	btfss	status,2,c
  3334  001A0E  EF0B  F00D         	goto	u7211
  3335  001A12  EF0D  F00D         	goto	u7210
  3336  001A16                     u7211:
  3337  001A16  EF9D  F00D         	goto	l5682
  3338  001A1A                     u7210:
  3339  001A1A                     
  3340                           ; BSR set to: 0
  3341                           ;fs_menu_controller.c: 495:             {;fs_menu_controller.c: 496:                 Lcd
      +                          _Set_Cursor(1,1);
  3342  001A1A  0E01               	movlw	1
  3343  001A1C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3344  001A1E  0E01               	movlw	1
  3345  001A20  EC0C  F022         	call	_Lcd_Set_Cursor
  3346  001A24                     
  3347                           ;fs_menu_controller.c: 497:                 Lcd_Write_String("PID PARAM       ");
  3348  001A24  0E13               	movlw	low STR_13
  3349  001A26  6E05               	movwf	Lcd_Write_String@a^0,c
  3350  001A28  0E06               	movlw	high STR_13
  3351  001A2A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3352  001A2C  ECCD  F021         	call	_Lcd_Write_String	;wreg free
  3353  001A30                     
  3354                           ;fs_menu_controller.c: 498:                 Lcd_Set_Cursor(2,1);
  3355  001A30  0E01               	movlw	1
  3356  001A32  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3357  001A34  0E02               	movlw	2
  3358  001A36  EC0C  F022         	call	_Lcd_Set_Cursor
  3359  001A3A                     
  3360                           ;fs_menu_controller.c: 499:                 sprintf(textCursor2,"Kd:%5.1f    ",KD);
  3361  001A3A  0EB6               	movlw	low stateMachine@textCursor2
  3362  001A3C  0100               	movlb	0	; () banked
  3363  001A3E  6FAE               	movwf	sprintf@s& (0+255),b
  3364  001A40  0E00               	movlw	high stateMachine@textCursor2
  3365  001A42  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3366  001A44  0EB7               	movlw	low STR_16
  3367  001A46  6FB0               	movwf	sprintf@fmt& (0+255),b
  3368  001A48  0E06               	movlw	high STR_16
  3369  001A4A  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3370  001A4C  C0F6  F0B2         	movff	_KD,?_sprintf+4
  3371  001A50  C0F7  F0B3         	movff	_KD+1,?_sprintf+5
  3372  001A54  C0F8  F0B4         	movff	_KD+2,?_sprintf+6
  3373  001A58  C0F9  F0B5         	movff	_KD+3,?_sprintf+7
  3374  001A5C  EC55  F023         	call	_sprintf	;wreg free
  3375  001A60                     
  3376                           ;fs_menu_controller.c: 500:                 Lcd_Write_String(textCursor2);
  3377  001A60  0EB6               	movlw	low stateMachine@textCursor2
  3378  001A62  6E05               	movwf	Lcd_Write_String@a^0,c
  3379  001A64  0E00               	movlw	high stateMachine@textCursor2
  3380  001A66  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3381  001A68  ECCD  F021         	call	_Lcd_Write_String	;wreg free
  3382  001A6C                     
  3383                           ;fs_menu_controller.c: 502:                 if ((menu_flags.menu_increase_flag == 1) && 
      +                          (KD < 2.5))
  3384  001A6C  0100               	movlb	0	; () banked
  3385  001A6E  A9F0               	btfss	_menu_flags& (0+255),4,b
  3386  001A70  EF3C  F00D         	goto	u7221
  3387  001A74  EF3E  F00D         	goto	u7220
  3388  001A78                     u7221:
  3389  001A78  EF73  F00D         	goto	l5674
  3390  001A7C                     u7220:
  3391  001A7C                     
  3392                           ; BSR set to: 0
  3393  001A7C  C0F6  F01A         	movff	_KD,___flge@ff1
  3394  001A80  C0F7  F01B         	movff	_KD+1,___flge@ff1+1
  3395  001A84  C0F8  F01C         	movff	_KD+2,___flge@ff1+2
  3396  001A88  C0F9  F01D         	movff	_KD+3,___flge@ff1+3
  3397  001A8C  0E00               	movlw	0
  3398  001A8E  6E1E               	movwf	___flge@ff2^0,c
  3399  001A90  0E00               	movlw	0
  3400  001A92  6E1F               	movwf	(___flge@ff2+1)^0,c
  3401  001A94  0E20               	movlw	32
  3402  001A96  6E20               	movwf	(___flge@ff2+2)^0,c
  3403  001A98  0E40               	movlw	64
  3404  001A9A  6E21               	movwf	(___flge@ff2+3)^0,c
  3405  001A9C  ECD7  F01D         	call	___flge	;wreg free
  3406  001AA0  B0D8               	btfsc	status,0,c
  3407  001AA2  EF55  F00D         	goto	u7231
  3408  001AA6  EF57  F00D         	goto	u7230
  3409  001AAA                     u7231:
  3410  001AAA  EF73  F00D         	goto	l5674
  3411  001AAE                     u7230:
  3412  001AAE                     
  3413                           ;fs_menu_controller.c: 503:                 {;fs_menu_controller.c: 504:                
      +                               menu_flags.menu_increase_flag = 0;
  3414  001AAE  0100               	movlb	0	; () banked
  3415  001AB0  99F0               	bcf	_menu_flags& (0+255),4,b
  3416  001AB2                     
  3417                           ; BSR set to: 0
  3418                           ;fs_menu_controller.c: 505:                     KD += 0.1;
  3419  001AB2  C0F6  F001         	movff	_KD,___fladd@b
  3420  001AB6  C0F7  F002         	movff	_KD+1,___fladd@b+1
  3421  001ABA  C0F8  F003         	movff	_KD+2,___fladd@b+2
  3422  001ABE  C0F9  F004         	movff	_KD+3,___fladd@b+3
  3423  001AC2  0ECD               	movlw	205
  3424  001AC4  6E05               	movwf	___fladd@a^0,c
  3425  001AC6  0ECC               	movlw	204
  3426  001AC8  6E06               	movwf	(___fladd@a+1)^0,c
  3427  001ACA  0ECC               	movlw	204
  3428  001ACC  6E07               	movwf	(___fladd@a+2)^0,c
  3429  001ACE  0E3D               	movlw	61
  3430  001AD0  6E08               	movwf	(___fladd@a+3)^0,c
  3431  001AD2  ECF4  F010         	call	___fladd	;wreg free
  3432  001AD6  C001  F0F6         	movff	?___fladd,_KD
  3433  001ADA  C002  F0F7         	movff	?___fladd+1,_KD+1
  3434  001ADE  C003  F0F8         	movff	?___fladd+2,_KD+2
  3435  001AE2  C004  F0F9         	movff	?___fladd+3,_KD+3
  3436  001AE6                     l5674:
  3437                           
  3438                           ;fs_menu_controller.c: 508:                 if ((menu_flags.menu_decrease_flag == 1) && 
      +                          (KD >= 0))
  3439  001AE6  0100               	movlb	0	; () banked
  3440  001AE8  ABF0               	btfss	_menu_flags& (0+255),5,b
  3441  001AEA  EF79  F00D         	goto	u7241
  3442  001AEE  EF7B  F00D         	goto	u7240
  3443  001AF2                     u7241:
  3444  001AF2  EF9D  F00D         	goto	l5682
  3445  001AF6                     u7240:
  3446  001AF6                     
  3447                           ; BSR set to: 0
  3448  001AF6  BFF9               	btfsc	(_KD+3)& (0+255),7,b
  3449  001AF8  EF80  F00D         	goto	u7251
  3450  001AFC  EF82  F00D         	goto	u7250
  3451  001B00                     u7251:
  3452  001B00  EF9D  F00D         	goto	l5682
  3453  001B04                     u7250:
  3454  001B04                     
  3455                           ; BSR set to: 0
  3456                           ;fs_menu_controller.c: 509:                 {;fs_menu_controller.c: 510:                
      +                               menu_flags.menu_decrease_flag = 0;
  3457  001B04  9BF0               	bcf	_menu_flags& (0+255),5,b
  3458  001B06                     
  3459                           ; BSR set to: 0
  3460                           ;fs_menu_controller.c: 511:                      KD -= 0.1;
  3461  001B06  C0F6  F01A         	movff	_KD,___flsub@b
  3462  001B0A  C0F7  F01B         	movff	_KD+1,___flsub@b+1
  3463  001B0E  C0F8  F01C         	movff	_KD+2,___flsub@b+2
  3464  001B12  C0F9  F01D         	movff	_KD+3,___flsub@b+3
  3465  001B16  0ECD               	movlw	205
  3466  001B18  6E1E               	movwf	___flsub@a^0,c
  3467  001B1A  0ECC               	movlw	204
  3468  001B1C  6E1F               	movwf	(___flsub@a+1)^0,c
  3469  001B1E  0ECC               	movlw	204
  3470  001B20  6E20               	movwf	(___flsub@a+2)^0,c
  3471  001B22  0E3D               	movlw	61
  3472  001B24  6E21               	movwf	(___flsub@a+3)^0,c
  3473  001B26  ECA1  F023         	call	___flsub	;wreg free
  3474  001B2A  C01A  F0F6         	movff	?___flsub,_KD
  3475  001B2E  C01B  F0F7         	movff	?___flsub+1,_KD+1
  3476  001B32  C01C  F0F8         	movff	?___flsub+2,_KD+2
  3477  001B36  C01D  F0F9         	movff	?___flsub+3,_KD+3
  3478  001B3A                     l5682:
  3479                           
  3480                           ;fs_menu_controller.c: 515:             if ( timer_value.menu_login_delay == 100)
  3481  001B3A  0E64               	movlw	100
  3482  001B3C  0100               	movlb	0	; () banked
  3483  001B3E  19DA               	xorwf	(_timer_value+8)& (0+255),w,b
  3484  001B40  A4D8               	btfss	status,2,c
  3485  001B42  EFA5  F00D         	goto	u7261
  3486  001B46  EFA7  F00D         	goto	u7260
  3487  001B4A                     u7261:
  3488  001B4A  EFDB  F00D         	goto	l397
  3489  001B4E                     u7260:
  3490  001B4E  EF7C  F00A         	goto	l5470
  3491  001B52                     l5688:
  3492  001B52  0100               	movlb	0	; () banked
  3493  001B54  51F1               	movf	_menu_selected& (0+255),w,b
  3494  001B56  6E5C               	movwf	??_stateMachine^0,c
  3495  001B58  6A5D               	clrf	(??_stateMachine+1)^0,c
  3496                           
  3497                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3498                           ; Switch size 1, requested type "simple"
  3499                           ; Number of cases is 1, Range of values is 0 to 0
  3500                           ; switch strategies available:
  3501                           ; Name         Instructions Cycles
  3502                           ; simple_byte            4     3 (average)
  3503                           ;	Chosen strategy is simple_byte
  3504  001B5A  505D               	movf	(??_stateMachine+1)^0,w,c
  3505  001B5C  0A00               	xorlw	0	; case 0
  3506  001B5E  B4D8               	btfsc	status,2,c
  3507  001B60  EFB4  F00D         	goto	l6124
  3508  001B64  EFDB  F00D         	goto	l397
  3509  001B68                     l6124:
  3510                           
  3511                           ; BSR set to: 0
  3512                           ; Switch size 1, requested type "simple"
  3513                           ; Number of cases is 9, Range of values is 0 to 8
  3514                           ; switch strategies available:
  3515                           ; Name         Instructions Cycles
  3516                           ; simple_byte           28    15 (average)
  3517                           ;	Chosen strategy is simple_byte
  3518  001B68  505C               	movf	??_stateMachine^0,w,c
  3519  001B6A  0A00               	xorlw	0	; case 0
  3520  001B6C  B4D8               	btfsc	status,2,c
  3521  001B6E  EF4C  F009         	goto	l356
  3522  001B72  0A01               	xorlw	1	; case 1
  3523  001B74  B4D8               	btfsc	status,2,c
  3524  001B76  EFF5  F009         	goto	l362
  3525  001B7A  0A03               	xorlw	3	; case 2
  3526  001B7C  B4D8               	btfsc	status,2,c
  3527  001B7E  EF82  F00A         	goto	l367
  3528  001B82  0A01               	xorlw	1	; case 3
  3529  001B84  B4D8               	btfsc	status,2,c
  3530  001B86  EFEE  F00A         	goto	l372
  3531  001B8A  0A07               	xorlw	7	; case 4
  3532  001B8C  B4D8               	btfsc	status,2,c
  3533  001B8E  EF58  F00B         	goto	l5548
  3534  001B92  0A01               	xorlw	1	; case 5
  3535  001B94  B4D8               	btfsc	status,2,c
  3536  001B96  EFBB  F00B         	goto	l380
  3537  001B9A  0A03               	xorlw	3	; case 6
  3538  001B9C  B4D8               	btfsc	status,2,c
  3539  001B9E  EFCA  F00B         	goto	l381
  3540  001BA2  0A01               	xorlw	1	; case 7
  3541  001BA4  B4D8               	btfsc	status,2,c
  3542  001BA6  EFDB  F00D         	goto	l397
  3543  001BAA  0A0F               	xorlw	15	; case 8
  3544  001BAC  B4D8               	btfsc	status,2,c
  3545  001BAE  EF58  F00C         	goto	l387
  3546  001BB2  EFDB  F00D         	goto	l397
  3547  001BB6                     l397:
  3548                           
  3549                           ; BSR set to: 0
  3550  001BB6  0012               	return		;funcret
  3551  001BB8                     __end_of_stateMachine:
  3552                           	callstack 0
  3553                           
  3554 ;; *************** function _sprintf *****************
  3555 ;; Defined at:
  3556 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;  s               2   78[BANK0 ] PTR unsigned char 
  3559 ;;		 -> stateMachine@textCursor2(16), 
  3560 ;;  fmt             2   80[BANK0 ] PTR const unsigned char 
  3561 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  3562 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  f               6   85[COMRAM] struct _IO_FILE
  3565 ;;  ap              2   83[COMRAM] PTR void [1]
  3566 ;;		 -> ?_sprintf(2), 
  3567 ;;  ret             2    0        int 
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  2   78[BANK0 ] int 
  3570 ;; Registers used:
  3571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3577 ;;      Params:         0       8       0       0       0       0       0
  3578 ;;      Locals:        10       0       0       0       0       0       0
  3579 ;;      Temps:          0       0       0       0       0       0       0
  3580 ;;      Totals:        10       8       0       0       0       0       0
  3581 ;;Total ram usage:       18 bytes
  3582 ;; Hardware stack levels used:    1
  3583 ;; Hardware stack levels required when called:    8
  3584 ;; This function calls:
  3585 ;;		_vfprintf
  3586 ;; This function is called by:
  3587 ;;		_stateMachine
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text7
  3592  0046AA                     __ptext7:
  3593                           	callstack 0
  3594  0046AA                     _sprintf:
  3595                           	callstack 20
  3596  0046AA  0EB2               	movlw	low (?_sprintf+4)
  3597  0046AC  6E54               	movwf	sprintf@ap^0,c
  3598  0046AE  0E00               	movlw	high (?_sprintf+4)
  3599  0046B0  6E55               	movwf	(sprintf@ap+1)^0,c
  3600  0046B2  C0AE  F056         	movff	sprintf@s,sprintf@f
  3601  0046B6  C0AF  F057         	movff	sprintf@s+1,sprintf@f+1
  3602  0046BA  0E00               	movlw	0
  3603  0046BC  6E59               	movwf	(sprintf@f+3)^0,c
  3604  0046BE  0E00               	movlw	0
  3605  0046C0  6E58               	movwf	(sprintf@f+2)^0,c
  3606  0046C2  0E00               	movlw	0
  3607  0046C4  6E5B               	movwf	(sprintf@f+5)^0,c
  3608  0046C6  0E00               	movlw	0
  3609  0046C8  6E5A               	movwf	(sprintf@f+4)^0,c
  3610  0046CA  0E56               	movlw	low sprintf@f
  3611  0046CC  6E4A               	movwf	vfprintf@fp^0,c
  3612  0046CE  0E00               	movlw	high sprintf@f
  3613  0046D0  6E4B               	movwf	(vfprintf@fp+1)^0,c
  3614  0046D2  C0B0  F04C         	movff	sprintf@fmt,vfprintf@fmt
  3615  0046D6  C0B1  F04D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3616  0046DA  0E54               	movlw	low sprintf@ap
  3617  0046DC  6E4E               	movwf	vfprintf@ap^0,c
  3618  0046DE  0E00               	movlw	high sprintf@ap
  3619  0046E0  6E4F               	movwf	(vfprintf@ap+1)^0,c
  3620  0046E2  EC3F  F022         	call	_vfprintf	;wreg free
  3621  0046E6  5058               	movf	(sprintf@f+2)^0,w,c
  3622  0046E8  0100               	movlb	0	; () banked
  3623  0046EA  25AE               	addwf	sprintf@s& (0+255),w,b
  3624  0046EC  6ED9               	movwf	fsr2l,c
  3625  0046EE  5059               	movf	(sprintf@f+3)^0,w,c
  3626  0046F0  21AF               	addwfc	(sprintf@s+1)& (0+255),w,b
  3627  0046F2  6EDA               	movwf	fsr2h,c
  3628  0046F4  0E00               	movlw	0
  3629  0046F6  6EDF               	movwf	indf2,c
  3630  0046F8                     
  3631                           ; BSR set to: 0
  3632  0046F8  0012               	return		;funcret
  3633  0046FA                     __end_of_sprintf:
  3634                           	callstack 0
  3635                           
  3636 ;; *************** function _vfprintf *****************
  3637 ;; Defined at:
  3638 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  fp              2   73[COMRAM] PTR struct _IO_FILE
  3641 ;;		 -> sprintf@f(6), 
  3642 ;;  fmt             2   75[COMRAM] PTR const unsigned char 
  3643 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  3644 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  3645 ;;  ap              2   77[COMRAM] PTR PTR void 
  3646 ;;		 -> sprintf@ap(2), 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  cfmt            2   79[COMRAM] PTR unsigned char 
  3649 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  3650 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  2   73[COMRAM] int 
  3653 ;; Registers used:
  3654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3660 ;;      Params:         6       0       0       0       0       0       0
  3661 ;;      Locals:         2       0       0       0       0       0       0
  3662 ;;      Temps:          0       0       0       0       0       0       0
  3663 ;;      Totals:         8       0       0       0       0       0       0
  3664 ;;Total ram usage:        8 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:    7
  3667 ;; This function calls:
  3668 ;;		_vfpfcnvrt
  3669 ;; This function is called by:
  3670 ;;		_sprintf
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text8
  3675  00447E                     __ptext8:
  3676                           	callstack 0
  3677  00447E                     _vfprintf:
  3678                           	callstack 20
  3679  00447E                     
  3680                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3681  00447E  C04C  F050         	movff	vfprintf@fmt,vfprintf@cfmt
  3682  004482  C04D  F051         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3683  004486                     
  3684                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  3685  004486  0E00               	movlw	0
  3686  004488  0100               	movlb	0	; () banked
  3687  00448A  6FE8               	movwf	(_nout+1)& (0+255),b
  3688  00448C  0E00               	movlw	0
  3689  00448E  6FE7               	movwf	_nout& (0+255),b
  3690                           
  3691                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3692  004490  EF5D  F022         	goto	l5264
  3693  004494                     l5262:
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3697  004494  C04A  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  3698  004498  C04B  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3699  00449C  0E50               	movlw	low vfprintf@cfmt
  3700  00449E  6E42               	movwf	vfpfcnvrt@fmt^0,c
  3701  0044A0  0E00               	movlw	high vfprintf@cfmt
  3702  0044A2  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3703  0044A4  C04E  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  3704  0044A8  C04F  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3705  0044AC  ECDC  F00D         	call	_vfpfcnvrt	;wreg free
  3706  0044B0  5040               	movf	?_vfpfcnvrt^0,w,c
  3707  0044B2  0100               	movlb	0	; () banked
  3708  0044B4  27E7               	addwf	_nout& (0+255),f,b
  3709  0044B6  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  3710  0044B8  23E8               	addwfc	(_nout+1)& (0+255),f,b
  3711  0044BA                     l5264:
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3715  0044BA  C050  FFF6         	movff	vfprintf@cfmt,tblptrl
  3716  0044BE  C051  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3717  0044C2                     	if	0	;tblptru may be non-zero
  3718  0044C2                     	endif
  3719  0044C2                     	if	0	;tblptru may be non-zero
  3720  0044C2                     	endif
  3721  0044C2  0008               	tblrd		*
  3722  0044C4  50F5               	movf	tablat,w,c
  3723  0044C6  0900               	iorlw	0
  3724  0044C8  A4D8               	btfss	status,2,c
  3725  0044CA  EF69  F022         	goto	u6411
  3726  0044CE  EF6B  F022         	goto	u6410
  3727  0044D2                     u6411:
  3728  0044D2  EF4A  F022         	goto	l5262
  3729  0044D6                     u6410:
  3730  0044D6                     
  3731                           ; BSR set to: 0
  3732                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  3733  0044D6  C0E7  F04A         	movff	_nout,?_vfprintf
  3734  0044DA  C0E8  F04B         	movff	_nout+1,?_vfprintf+1
  3735  0044DE                     
  3736                           ; BSR set to: 0
  3737  0044DE  0012               	return		;funcret
  3738  0044E0                     __end_of_vfprintf:
  3739                           	callstack 0
  3740                           
  3741 ;; *************** function _vfpfcnvrt *****************
  3742 ;; Defined at:
  3743 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  3746 ;;		 -> sprintf@f(6), 
  3747 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  3748 ;;		 -> vfprintf@cfmt(2), 
  3749 ;;  ap              2   67[COMRAM] PTR PTR void 
  3750 ;;		 -> sprintf@ap(2), 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  ll              8   56[BANK0 ] long long 
  3753 ;;  llu             8    0        unsigned long long 
  3754 ;;  f               4   70[BANK0 ] unsigned long long 
  3755 ;;  ct              3   74[BANK0 ] unsigned char [3]
  3756 ;;  vp              3    0        PTR void 
  3757 ;;  cp              3    0        PTR unsigned char 
  3758 ;;  i               2    0        int 
  3759 ;;  done            2    0        int 
  3760 ;;  c               1   77[BANK0 ] unsigned char 
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  2   63[COMRAM] int 
  3763 ;; Registers used:
  3764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3770 ;;      Params:         6       0       0       0       0       0       0
  3771 ;;      Locals:         0      22       0       0       0       0       0
  3772 ;;      Temps:          4       0       0       0       0       0       0
  3773 ;;      Totals:        10      22       0       0       0       0       0
  3774 ;;Total ram usage:       32 bytes
  3775 ;; Hardware stack levels used:    1
  3776 ;; Hardware stack levels required when called:    6
  3777 ;; This function calls:
  3778 ;;		_atoi
  3779 ;;		_dtoa
  3780 ;;		_efgtoa
  3781 ;;		_fputc
  3782 ;;		_isdigit
  3783 ;;		_isupper
  3784 ;;		_strncmp
  3785 ;;		_tolower
  3786 ;; This function is called by:
  3787 ;;		_vfprintf
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           	psect	text9
  3792  001BB8                     __ptext9:
  3793                           	callstack 0
  3794  001BB8                     _vfpfcnvrt:
  3795                           	callstack 20
  3796  001BB8                     
  3797                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  3798  001BB8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3799  001BBC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3800  001BC0  CFDE FFF6          	movff	postinc2,tblptrl
  3801  001BC4  CFDD FFF7          	movff	postdec2,tblptrh
  3802  001BC8                     	if	0	;tblptru may be non-zero
  3803  001BC8                     	endif
  3804  001BC8                     	if	0	;tblptru may be non-zero
  3805  001BC8                     	endif
  3806  001BC8  0008               	tblrd		*
  3807  001BCA  50F5               	movf	tablat,w,c
  3808  001BCC  0A25               	xorlw	37
  3809  001BCE  A4D8               	btfss	status,2,c
  3810  001BD0  EFEC  F00D         	goto	u6201
  3811  001BD4  EFEE  F00D         	goto	u6200
  3812  001BD8                     u6201:
  3813  001BD8  EFD8  F010         	goto	l5220
  3814  001BDC                     u6200:
  3815  001BDC                     
  3816                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  3817  001BDC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3818  001BE0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3819  001BE4  2ADE               	incf	postinc2,f,c
  3820  001BE6  0E00               	movlw	0
  3821  001BE8  22DD               	addwfc	postdec2,f,c
  3822  001BEA                     
  3823                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  3824  001BEA  0E00               	movlw	0
  3825  001BEC  0100               	movlb	0	; () banked
  3826  001BEE  6FEA               	movwf	(_width+1)& (0+255),b
  3827  001BF0  0E00               	movlw	0
  3828  001BF2  6FE9               	movwf	_width& (0+255),b
  3829  001BF4  C0E9  F0ED         	movff	_width,_flags
  3830  001BF8  C0EA  F0EE         	movff	_width+1,_flags+1
  3831  001BFC                     
  3832                           ; BSR set to: 0
  3833                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  3834  001BFC  69EB               	setf	_prec& (0+255),b
  3835  001BFE  69EC               	setf	(_prec+1)& (0+255),b
  3836  001C00                     
  3837                           ; BSR set to: 0
  3838                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  3839  001C00  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3840  001C04  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3841  001C08  CFDE FFF6          	movff	postinc2,tblptrl
  3842  001C0C  CFDD FFF7          	movff	postdec2,tblptrh
  3843  001C10                     	if	0	;tblptru may be non-zero
  3844  001C10                     	endif
  3845  001C10                     	if	0	;tblptru may be non-zero
  3846  001C10                     	endif
  3847  001C10  0008               	tblrd		*
  3848  001C12  50F5               	movf	tablat,w,c
  3849  001C14  0A2A               	xorlw	42
  3850  001C16  A4D8               	btfss	status,2,c
  3851  001C18  EF10  F00E         	goto	u6211
  3852  001C1C  EF12  F00E         	goto	u6210
  3853  001C20                     u6211:
  3854  001C20  EF3B  F00E         	goto	l5126
  3855  001C24                     u6210:
  3856  001C24                     
  3857                           ; BSR set to: 0
  3858                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  3859  001C24  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3860  001C28  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3861  001C2C  2ADE               	incf	postinc2,f,c
  3862  001C2E  0E00               	movlw	0
  3863  001C30  22DD               	addwfc	postdec2,f,c
  3864                           
  3865                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3866  001C32  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3867  001C36  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3868  001C3A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3869  001C3E  0E02               	movlw	2
  3870  001C40  26DE               	addwf	postinc2,f,c
  3871  001C42  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3872  001C46  0E00               	movlw	0
  3873  001C48  22DD               	addwfc	postdec2,f,c
  3874  001C4A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3875  001C4E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3876  001C52  CFDE F0E9          	movff	postinc2,_width
  3877  001C56  CFDD F0EA          	movff	postdec2,_width+1
  3878  001C5A                     
  3879                           ; BSR set to: 0
  3880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  3881  001C5A  BFEA               	btfsc	(_width+1)& (0+255),7,b
  3882  001C5C  EF34  F00E         	goto	u6220
  3883  001C60  EF32  F00E         	goto	u6221
  3884  001C64                     u6221:
  3885  001C64  EF7F  F00E         	goto	l5136
  3886  001C68                     u6220:
  3887  001C68                     
  3888                           ; BSR set to: 0
  3889                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  3890  001C68  81ED               	bsf	_flags& (0+255),0,b
  3891                           
  3892                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  3893  001C6A  6DE9               	negf	_width& (0+255),b
  3894  001C6C  1FEA               	comf	(_width+1)& (0+255),f,b
  3895  001C6E  B0D8               	btfsc	status,0,c
  3896  001C70  2BEA               	incf	(_width+1)& (0+255),f,b
  3897  001C72  EF7F  F00E         	goto	l5136
  3898  001C76                     l5126:
  3899                           
  3900                           ; BSR set to: 0
  3901                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  3902  001C76  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3903  001C7A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3904  001C7E  CFDE F008          	movff	postinc2,atoi@s
  3905  001C82  CFDD F009          	movff	postdec2,atoi@s+1
  3906  001C86  EC84  F01A         	call	_atoi	;wreg free
  3907  001C8A  C008  F0E9         	movff	?_atoi,_width
  3908  001C8E  C009  F0EA         	movff	?_atoi+1,_width+1
  3909                           
  3910                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3911  001C92  EF52  F00E         	goto	l5130
  3912  001C96                     l5128:
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  3916  001C96  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3917  001C9A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3918  001C9E  2ADE               	incf	postinc2,f,c
  3919  001CA0  0E00               	movlw	0
  3920  001CA2  22DD               	addwfc	postdec2,f,c
  3921  001CA4                     l5130:
  3922  001CA4  0ED0               	movlw	208
  3923  001CA6  6E46               	movwf	??_vfpfcnvrt^0,c
  3924  001CA8  0EFF               	movlw	255
  3925  001CAA  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  3926  001CAC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3927  001CB0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3928  001CB4  CFDE FFF6          	movff	postinc2,tblptrl
  3929  001CB8  CFDD FFF7          	movff	postdec2,tblptrh
  3930  001CBC                     	if	0	;tblptru may be non-zero
  3931  001CBC                     	endif
  3932  001CBC                     	if	0	;tblptru may be non-zero
  3933  001CBC                     	endif
  3934  001CBC  0008               	tblrd		*
  3935  001CBE  50F5               	movf	tablat,w,c
  3936  001CC0  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  3937  001CC2  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  3938  001CC4  5046               	movf	??_vfpfcnvrt^0,w,c
  3939  001CC6  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3940  001CC8  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  3941  001CCA  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3942  001CCC  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  3943  001CCE  E10A               	bnz	u6230
  3944  001CD0  0E0A               	movlw	10
  3945  001CD2  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3946  001CD4  A0D8               	btfss	status,0,c
  3947  001CD6  EF6F  F00E         	goto	u6231
  3948  001CDA  EF72  F00E         	goto	u6230
  3949  001CDE                     u6231:
  3950  001CDE  0E01               	movlw	1
  3951  001CE0  EF73  F00E         	goto	u6240
  3952  001CE4                     u6230:
  3953  001CE4  0E00               	movlw	0
  3954  001CE6                     u6240:
  3955  001CE6  0100               	movlb	0	; () banked
  3956  001CE8  6FA0               	movwf	_vfpfcnvrt$2894& (0+255),b
  3957  001CEA  6BA1               	clrf	(_vfpfcnvrt$2894+1)& (0+255),b
  3958  001CEC                     
  3959                           ; BSR set to: 0
  3960  001CEC  51A0               	movf	_vfpfcnvrt$2894& (0+255),w,b
  3961  001CEE  11A1               	iorwf	(_vfpfcnvrt$2894+1)& (0+255),w,b
  3962  001CF0  A4D8               	btfss	status,2,c
  3963  001CF2  EF7D  F00E         	goto	u6251
  3964  001CF6  EF7F  F00E         	goto	u6250
  3965  001CFA                     u6251:
  3966  001CFA  EF4B  F00E         	goto	l5128
  3967  001CFE                     u6250:
  3968  001CFE                     l5136:
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  3972  001CFE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3973  001D02  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3974  001D06  CFDE FFF6          	movff	postinc2,tblptrl
  3975  001D0A  CFDD FFF7          	movff	postdec2,tblptrh
  3976  001D0E                     	if	0	;tblptru may be non-zero
  3977  001D0E                     	endif
  3978  001D0E                     	if	0	;tblptru may be non-zero
  3979  001D0E                     	endif
  3980  001D0E  0008               	tblrd		*
  3981  001D10  50F5               	movf	tablat,w,c
  3982  001D12  0A2E               	xorlw	46
  3983  001D14  A4D8               	btfss	status,2,c
  3984  001D16  EF8F  F00E         	goto	u6261
  3985  001D1A  EF91  F00E         	goto	u6260
  3986  001D1E                     u6261:
  3987  001D1E  EF0F  F00F         	goto	l5156
  3988  001D22                     u6260:
  3989  001D22                     
  3990                           ; BSR set to: 0
  3991                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  3992  001D22  0E00               	movlw	0
  3993  001D24  6FEC               	movwf	(_prec+1)& (0+255),b
  3994  001D26  0E00               	movlw	0
  3995  001D28  6FEB               	movwf	_prec& (0+255),b
  3996  001D2A                     
  3997                           ; BSR set to: 0
  3998                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  3999  001D2A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4000  001D2E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4001  001D32  2ADE               	incf	postinc2,f,c
  4002  001D34  0E00               	movlw	0
  4003  001D36  22DD               	addwfc	postdec2,f,c
  4004  001D38                     
  4005                           ; BSR set to: 0
  4006                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  4007  001D38  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4008  001D3C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4009  001D40  CFDE FFF6          	movff	postinc2,tblptrl
  4010  001D44  CFDD FFF7          	movff	postdec2,tblptrh
  4011  001D48                     	if	0	;tblptru may be non-zero
  4012  001D48                     	endif
  4013  001D48                     	if	0	;tblptru may be non-zero
  4014  001D48                     	endif
  4015  001D48  0008               	tblrd		*
  4016  001D4A  50F5               	movf	tablat,w,c
  4017  001D4C  0A2A               	xorlw	42
  4018  001D4E  A4D8               	btfss	status,2,c
  4019  001D50  EFAC  F00E         	goto	u6271
  4020  001D54  EFAE  F00E         	goto	u6270
  4021  001D58                     u6271:
  4022  001D58  EFCB  F00E         	goto	l5146
  4023  001D5C                     u6270:
  4024  001D5C                     
  4025                           ; BSR set to: 0
  4026                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  4027  001D5C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4028  001D60  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4029  001D64  2ADE               	incf	postinc2,f,c
  4030  001D66  0E00               	movlw	0
  4031  001D68  22DD               	addwfc	postdec2,f,c
  4032                           
  4033                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4034  001D6A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4035  001D6E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4036  001D72  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4037  001D76  0E02               	movlw	2
  4038  001D78  26DE               	addwf	postinc2,f,c
  4039  001D7A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4040  001D7E  0E00               	movlw	0
  4041  001D80  22DD               	addwfc	postdec2,f,c
  4042  001D82  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4043  001D86  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4044  001D8A  CFDE F0EB          	movff	postinc2,_prec
  4045  001D8E  CFDD F0EC          	movff	postdec2,_prec+1
  4046                           
  4047                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  4048  001D92  EF0F  F00F         	goto	l5156
  4049  001D96                     l5146:
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  4053  001D96  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4054  001D9A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4055  001D9E  CFDE F008          	movff	postinc2,atoi@s
  4056  001DA2  CFDD F009          	movff	postdec2,atoi@s+1
  4057  001DA6  EC84  F01A         	call	_atoi	;wreg free
  4058  001DAA  C008  F0EB         	movff	?_atoi,_prec
  4059  001DAE  C009  F0EC         	movff	?_atoi+1,_prec+1
  4060                           
  4061                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4062  001DB2  EFE2  F00E         	goto	l5150
  4063  001DB6                     l5148:
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  4067  001DB6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4068  001DBA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4069  001DBE  2ADE               	incf	postinc2,f,c
  4070  001DC0  0E00               	movlw	0
  4071  001DC2  22DD               	addwfc	postdec2,f,c
  4072  001DC4                     l5150:
  4073  001DC4  0ED0               	movlw	208
  4074  001DC6  6E46               	movwf	??_vfpfcnvrt^0,c
  4075  001DC8  0EFF               	movlw	255
  4076  001DCA  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  4077  001DCC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4078  001DD0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4079  001DD4  CFDE FFF6          	movff	postinc2,tblptrl
  4080  001DD8  CFDD FFF7          	movff	postdec2,tblptrh
  4081  001DDC                     	if	0	;tblptru may be non-zero
  4082  001DDC                     	endif
  4083  001DDC                     	if	0	;tblptru may be non-zero
  4084  001DDC                     	endif
  4085  001DDC  0008               	tblrd		*
  4086  001DDE  50F5               	movf	tablat,w,c
  4087  001DE0  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  4088  001DE2  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  4089  001DE4  5046               	movf	??_vfpfcnvrt^0,w,c
  4090  001DE6  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4091  001DE8  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  4092  001DEA  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4093  001DEC  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  4094  001DEE  E10A               	bnz	u6280
  4095  001DF0  0E0A               	movlw	10
  4096  001DF2  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4097  001DF4  A0D8               	btfss	status,0,c
  4098  001DF6  EFFF  F00E         	goto	u6281
  4099  001DFA  EF02  F00F         	goto	u6280
  4100  001DFE                     u6281:
  4101  001DFE  0E01               	movlw	1
  4102  001E00  EF03  F00F         	goto	u6290
  4103  001E04                     u6280:
  4104  001E04  0E00               	movlw	0
  4105  001E06                     u6290:
  4106  001E06  0100               	movlb	0	; () banked
  4107  001E08  6FA2               	movwf	_vfpfcnvrt$2895& (0+255),b
  4108  001E0A  6BA3               	clrf	(_vfpfcnvrt$2895+1)& (0+255),b
  4109  001E0C                     
  4110                           ; BSR set to: 0
  4111  001E0C  51A2               	movf	_vfpfcnvrt$2895& (0+255),w,b
  4112  001E0E  11A3               	iorwf	(_vfpfcnvrt$2895+1)& (0+255),w,b
  4113  001E10  A4D8               	btfss	status,2,c
  4114  001E12  EF0D  F00F         	goto	u6301
  4115  001E16  EF0F  F00F         	goto	u6300
  4116  001E1A                     u6301:
  4117  001E1A  EFDB  F00E         	goto	l5148
  4118  001E1E                     u6300:
  4119  001E1E                     l5156:
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  4123  001E1E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4124  001E22  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4125  001E26  CFDE FFF6          	movff	postinc2,tblptrl
  4126  001E2A  CFDD FFF7          	movff	postdec2,tblptrh
  4127  001E2E                     	if	0	;tblptru may be non-zero
  4128  001E2E                     	endif
  4129  001E2E                     	if	0	;tblptru may be non-zero
  4130  001E2E                     	endif
  4131  001E2E  0008               	tblrd		*
  4132  001E30  50F5               	movf	tablat,w,c
  4133  001E32  6E07               	movwf	tolower@c^0,c
  4134  001E34  6A08               	clrf	(tolower@c+1)^0,c
  4135  001E36  ECA0  F022         	call	_tolower	;wreg free
  4136  001E3A  5007               	movf	?_tolower^0,w,c
  4137  001E3C  0100               	movlb	0	; () banked
  4138  001E3E  6FAA               	movwf	vfpfcnvrt@ct& (0+255),b
  4139  001E40                     
  4140                           ; BSR set to: 0
  4141                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  4142  001E40  51AA               	movf	vfpfcnvrt@ct& (0+255),w,b
  4143  001E42  B4D8               	btfsc	status,2,c
  4144  001E44  EF26  F00F         	goto	u6311
  4145  001E48  EF28  F00F         	goto	u6310
  4146  001E4C                     u6311:
  4147  001E4C  EF62  F00F         	goto	l5166
  4148  001E50                     u6310:
  4149  001E50                     
  4150                           ; BSR set to: 0
  4151                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  4152  001E50  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4153  001E54  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4154  001E58  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  4155  001E5C  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  4156  001E60  0E01               	movlw	1
  4157  001E62  2646               	addwf	??_vfpfcnvrt^0,f,c
  4158  001E64  0E00               	movlw	0
  4159  001E66  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4160  001E68  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4161  001E6C  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4162  001E70                     	if	0	;tblptru may be non-zero
  4163  001E70                     	endif
  4164  001E70                     	if	0	;tblptru may be non-zero
  4165  001E70                     	endif
  4166  001E70  0008               	tblrd		*
  4167  001E72  50F5               	movf	tablat,w,c
  4168  001E74  6E07               	movwf	tolower@c^0,c
  4169  001E76  6A08               	clrf	(tolower@c+1)^0,c
  4170  001E78  ECA0  F022         	call	_tolower	;wreg free
  4171  001E7C  5007               	movf	?_tolower^0,w,c
  4172  001E7E  0100               	movlb	0	; () banked
  4173  001E80  6FAB               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4174  001E82                     
  4175                           ; BSR set to: 0
  4176                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  4177  001E82  51AB               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4178  001E84  B4D8               	btfsc	status,2,c
  4179  001E86  EF47  F00F         	goto	u6321
  4180  001E8A  EF49  F00F         	goto	u6320
  4181  001E8E                     u6321:
  4182  001E8E  EF62  F00F         	goto	l5166
  4183  001E92                     u6320:
  4184  001E92                     
  4185                           ; BSR set to: 0
  4186                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  4187  001E92  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4188  001E96  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4189  001E9A  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  4190  001E9E  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  4191  001EA2  0E02               	movlw	2
  4192  001EA4  2646               	addwf	??_vfpfcnvrt^0,f,c
  4193  001EA6  0E00               	movlw	0
  4194  001EA8  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4195  001EAA  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4196  001EAE  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4197  001EB2                     	if	0	;tblptru may be non-zero
  4198  001EB2                     	endif
  4199  001EB2                     	if	0	;tblptru may be non-zero
  4200  001EB2                     	endif
  4201  001EB2  0008               	tblrd		*
  4202  001EB4  50F5               	movf	tablat,w,c
  4203  001EB6  6E07               	movwf	tolower@c^0,c
  4204  001EB8  6A08               	clrf	(tolower@c+1)^0,c
  4205  001EBA  ECA0  F022         	call	_tolower	;wreg free
  4206  001EBE  5007               	movf	?_tolower^0,w,c
  4207  001EC0  0100               	movlb	0	; () banked
  4208  001EC2  6FAC               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4209  001EC4                     l5166:
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4213  001EC4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4214  001EC8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4215  001ECC  CFDE FFF6          	movff	postinc2,tblptrl
  4216  001ED0  CFDD FFF7          	movff	postdec2,tblptrh
  4217  001ED4                     	if	0	;tblptru may be non-zero
  4218  001ED4                     	endif
  4219  001ED4                     	if	0	;tblptru may be non-zero
  4220  001ED4                     	endif
  4221  001ED4  0008               	tblrd		*
  4222  001ED6  50F5               	movf	tablat,w,c
  4223  001ED8  0A64               	xorlw	100
  4224  001EDA  B4D8               	btfsc	status,2,c
  4225  001EDC  EF72  F00F         	goto	u6331
  4226  001EE0  EF74  F00F         	goto	u6330
  4227  001EE4                     u6331:
  4228  001EE4  EF86  F00F         	goto	l5170
  4229  001EE8                     u6330:
  4230  001EE8                     
  4231                           ; BSR set to: 0
  4232  001EE8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4233  001EEC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4234  001EF0  CFDE FFF6          	movff	postinc2,tblptrl
  4235  001EF4  CFDD FFF7          	movff	postdec2,tblptrh
  4236  001EF8                     	if	0	;tblptru may be non-zero
  4237  001EF8                     	endif
  4238  001EF8                     	if	0	;tblptru may be non-zero
  4239  001EF8                     	endif
  4240  001EF8  0008               	tblrd		*
  4241  001EFA  50F5               	movf	tablat,w,c
  4242  001EFC  0A69               	xorlw	105
  4243  001EFE  A4D8               	btfss	status,2,c
  4244  001F00  EF84  F00F         	goto	u6341
  4245  001F04  EF86  F00F         	goto	u6340
  4246  001F08                     u6341:
  4247  001F08  EFC6  F00F         	goto	l5176
  4248  001F0C                     u6340:
  4249  001F0C                     l5170:
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  4253  001F0C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4254  001F10  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4255  001F14  2ADE               	incf	postinc2,f,c
  4256  001F16  0E00               	movlw	0
  4257  001F18  22DD               	addwfc	postdec2,f,c
  4258                           
  4259                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4260  001F1A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4261  001F1E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4262  001F22  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4263  001F26  0E02               	movlw	2
  4264  001F28  26DE               	addwf	postinc2,f,c
  4265  001F2A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4266  001F2E  0E00               	movlw	0
  4267  001F30  22DD               	addwfc	postdec2,f,c
  4268  001F32  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4269  001F36  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4270  001F3A  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  4271  001F3E  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  4272  001F42  0E00               	movlw	0
  4273  001F44  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4274  001F46  0EFF               	movlw	-1
  4275  001F48  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4276  001F4A  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4277  001F4C  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4278  001F4E  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4279  001F50  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4280  001F52  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4281  001F54                     
  4282                           ; BSR set to: 0
  4283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  4284  001F54  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4285  001F58  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4286  001F5C  C098  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4287  001F60  C099  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4288  001F64  C09A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4289  001F68  C09B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4290  001F6C  C09C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4291  001F70  C09D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4292  001F74  C09E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4293  001F78  C09F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4294  001F7C  EC36  F017         	call	_dtoa	;wreg free
  4295  001F80  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  4296  001F84  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4297  001F88  EFF3  F010         	goto	l1372
  4298  001F8C                     l5176:
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  4302  001F8C  0E66               	movlw	102
  4303  001F8E  19AA               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4304  001F90  A4D8               	btfss	status,2,c
  4305  001F92  EFCD  F00F         	goto	u6351
  4306  001F96  EFCF  F00F         	goto	u6350
  4307  001F9A                     u6351:
  4308  001F9A  EF0F  F010         	goto	l5188
  4309  001F9E                     u6350:
  4310  001F9E                     
  4311                           ; BSR set to: 0
  4312                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  4313  001F9E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4314  001FA2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4315  001FA6  CFDE FFF6          	movff	postinc2,tblptrl
  4316  001FAA  CFDD FFF7          	movff	postdec2,tblptrh
  4317  001FAE                     	if	0	;tblptru may be non-zero
  4318  001FAE                     	endif
  4319  001FAE                     	if	0	;tblptru may be non-zero
  4320  001FAE                     	endif
  4321  001FAE  0008               	tblrd		*
  4322  001FB0  CFF5 F0AD          	movff	tablat,vfpfcnvrt@c
  4323  001FB4                     
  4324                           ; BSR set to: 0
  4325                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  4326  001FB4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4327  001FB8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4328  001FBC  2ADE               	incf	postinc2,f,c
  4329  001FBE  0E00               	movlw	0
  4330  001FC0  22DD               	addwfc	postdec2,f,c
  4331  001FC2                     
  4332                           ; BSR set to: 0
  4333                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4334  001FC2  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4335  001FC6  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4336  001FCA  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4337  001FCE  0E04               	movlw	4
  4338  001FD0  26DE               	addwf	postinc2,f,c
  4339  001FD2  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4340  001FD6  0E00               	movlw	0
  4341  001FD8  22DD               	addwfc	postdec2,f,c
  4342  001FDA  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4343  001FDE  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4344  001FE2  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  4345  001FE6  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  4346  001FEA  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  4347  001FEE  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  4348  001FF2                     l5184:
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  4352  001FF2  C040  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  4353  001FF6  C041  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4354  001FFA  C0A6  F030         	movff	vfpfcnvrt@f,efgtoa@f
  4355  001FFE  C0A7  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4356  002002  C0A8  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4357  002006  C0A9  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4358  00200A  C0AD  F034         	movff	vfpfcnvrt@c,efgtoa@c
  4359  00200E  EC6C  F003         	call	_efgtoa	;wreg free
  4360  002012  C02E  F040         	movff	?_efgtoa,?_vfpfcnvrt
  4361  002016  C02F  F041         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4362  00201A  EFF3  F010         	goto	l1372
  4363  00201E                     l5188:
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4367  00201E  0EAA               	movlw	low vfpfcnvrt@ct
  4368  002020  6E01               	movwf	strncmp@_l^0,c
  4369  002022  0E00               	movlw	high vfpfcnvrt@ct
  4370  002024  6E02               	movwf	(strncmp@_l+1)^0,c
  4371  002026  0ED4               	movlw	low STR_25
  4372  002028  6E03               	movwf	strncmp@_r^0,c
  4373  00202A  0E06               	movlw	high STR_25
  4374  00202C  6E04               	movwf	(strncmp@_r+1)^0,c
  4375  00202E  0E00               	movlw	0
  4376  002030  6E06               	movwf	(strncmp@n+1)^0,c
  4377  002032  0E02               	movlw	2
  4378  002034  6E05               	movwf	strncmp@n^0,c
  4379  002036  ECD8  F01E         	call	_strncmp	;wreg free
  4380  00203A  5001               	movf	?_strncmp^0,w,c
  4381  00203C  1002               	iorwf	(?_strncmp+1)^0,w,c
  4382  00203E  A4D8               	btfss	status,2,c
  4383  002040  EF24  F010         	goto	u6361
  4384  002044  EF26  F010         	goto	u6360
  4385  002048                     u6361:
  4386  002048  EFA2  F010         	goto	l5204
  4387  00204C                     u6360:
  4388  00204C                     
  4389                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4390  00204C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4391  002050  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4392  002054  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  4393  002058  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  4394  00205C  0E01               	movlw	1
  4395  00205E  2646               	addwf	??_vfpfcnvrt^0,f,c
  4396  002060  0E00               	movlw	0
  4397  002062  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4398  002064  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4399  002068  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4400  00206C                     	if	0	;tblptru may be non-zero
  4401  00206C                     	endif
  4402  00206C                     	if	0	;tblptru may be non-zero
  4403  00206C                     	endif
  4404  00206C  0008               	tblrd		*
  4405  00206E  CFF5 F0AD          	movff	tablat,vfpfcnvrt@c
  4406  002072  0EBF               	movlw	191
  4407  002074  6E46               	movwf	??_vfpfcnvrt^0,c
  4408  002076  0EFF               	movlw	255
  4409  002078  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  4410  00207A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4411  00207E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4412  002082  CFDE FFF6          	movff	postinc2,tblptrl
  4413  002086  CFDD FFF7          	movff	postdec2,tblptrh
  4414  00208A                     	if	0	;tblptru may be non-zero
  4415  00208A                     	endif
  4416  00208A                     	if	0	;tblptru may be non-zero
  4417  00208A                     	endif
  4418  00208A  0008               	tblrd		*
  4419  00208C  50F5               	movf	tablat,w,c
  4420  00208E  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  4421  002090  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  4422  002092  5046               	movf	??_vfpfcnvrt^0,w,c
  4423  002094  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4424  002096  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  4425  002098  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4426  00209A  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  4427  00209C  E10A               	bnz	u6370
  4428  00209E  0E1A               	movlw	26
  4429  0020A0  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4430  0020A2  A0D8               	btfss	status,0,c
  4431  0020A4  EF56  F010         	goto	u6371
  4432  0020A8  EF59  F010         	goto	u6370
  4433  0020AC                     u6371:
  4434  0020AC  0E01               	movlw	1
  4435  0020AE  EF5A  F010         	goto	u6380
  4436  0020B2                     u6370:
  4437  0020B2  0E00               	movlw	0
  4438  0020B4                     u6380:
  4439  0020B4  0100               	movlb	0	; () banked
  4440  0020B6  6FA4               	movwf	_vfpfcnvrt$2900& (0+255),b
  4441  0020B8  6BA5               	clrf	(_vfpfcnvrt$2900+1)& (0+255),b
  4442  0020BA                     
  4443                           ; BSR set to: 0
  4444  0020BA  51A4               	movf	_vfpfcnvrt$2900& (0+255),w,b
  4445  0020BC  11A5               	iorwf	(_vfpfcnvrt$2900+1)& (0+255),w,b
  4446  0020BE  B4D8               	btfsc	status,2,c
  4447  0020C0  EF64  F010         	goto	u6391
  4448  0020C4  EF66  F010         	goto	u6390
  4449  0020C8                     u6391:
  4450  0020C8  EF80  F010         	goto	l5198
  4451  0020CC                     u6390:
  4452  0020CC                     
  4453                           ; BSR set to: 0
  4454                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4455  0020CC  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4456  0020D0  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4457  0020D4  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4458  0020D8  0E04               	movlw	4
  4459  0020DA  26DE               	addwf	postinc2,f,c
  4460  0020DC  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4461  0020E0  0E00               	movlw	0
  4462  0020E2  22DD               	addwfc	postdec2,f,c
  4463  0020E4  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4464  0020E8  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4465  0020EC  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  4466  0020F0  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  4467  0020F4  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  4468  0020F8  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  4469                           
  4470                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  4471  0020FC  EF98  F010         	goto	l1380
  4472  002100                     l5198:
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4476  002100  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4477  002104  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4478  002108  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4479  00210C  0E04               	movlw	4
  4480  00210E  26DE               	addwf	postinc2,f,c
  4481  002110  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4482  002114  0E00               	movlw	0
  4483  002116  22DD               	addwfc	postdec2,f,c
  4484  002118  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4485  00211C  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4486  002120  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  4487  002124  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  4488  002128  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  4489  00212C  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  4490  002130                     l1380:
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4494  002130  0E02               	movlw	2
  4495  002132  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4496  002136  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4497  00213A  26DE               	addwf	postinc2,f,c
  4498  00213C  0E00               	movlw	0
  4499  00213E  22DD               	addwfc	postdec2,f,c
  4500  002140  EFF9  F00F         	goto	l5184
  4501  002144                     l5204:
  4502                           
  4503                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  4504  002144  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4505  002148  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4506  00214C  CFDE FFF6          	movff	postinc2,tblptrl
  4507  002150  CFDD FFF7          	movff	postdec2,tblptrh
  4508  002154                     	if	0	;tblptru may be non-zero
  4509  002154                     	endif
  4510  002154                     	if	0	;tblptru may be non-zero
  4511  002154                     	endif
  4512  002154  0008               	tblrd		*
  4513  002156  50F5               	movf	tablat,w,c
  4514  002158  0A25               	xorlw	37
  4515  00215A  A4D8               	btfss	status,2,c
  4516  00215C  EFB2  F010         	goto	u6401
  4517  002160  EFB4  F010         	goto	u6400
  4518  002164                     u6401:
  4519  002164  EFCB  F010         	goto	l5214
  4520  002168                     u6400:
  4521  002168                     
  4522                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  4523  002168  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4524  00216C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4525  002170  2ADE               	incf	postinc2,f,c
  4526  002172  0E00               	movlw	0
  4527  002174  22DD               	addwfc	postdec2,f,c
  4528  002176                     
  4529                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  4530  002176  0E00               	movlw	0
  4531  002178  6E02               	movwf	(fputc@c+1)^0,c
  4532  00217A  0E25               	movlw	37
  4533  00217C  6E01               	movwf	fputc@c^0,c
  4534  00217E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4535  002182  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4536  002186  ECAB  F01F         	call	_fputc	;wreg free
  4537  00218A                     l5210:
  4538                           
  4539                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  4540  00218A  0E00               	movlw	0
  4541  00218C  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  4542  00218E  0E01               	movlw	1
  4543  002190  6E40               	movwf	?_vfpfcnvrt^0,c
  4544  002192  EFF3  F010         	goto	l1372
  4545  002196                     l5214:
  4546                           
  4547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  4548  002196  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4549  00219A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4550  00219E  2ADE               	incf	postinc2,f,c
  4551  0021A0  0E00               	movlw	0
  4552  0021A2  22DD               	addwfc	postdec2,f,c
  4553  0021A4                     
  4554                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  4555  0021A4  0E00               	movlw	0
  4556  0021A6  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  4557  0021A8  0E00               	movlw	0
  4558  0021AA  6E40               	movwf	?_vfpfcnvrt^0,c
  4559  0021AC  EFF3  F010         	goto	l1372
  4560  0021B0                     l5220:
  4561                           
  4562                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  4563  0021B0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4564  0021B4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4565  0021B8  CFDE FFF6          	movff	postinc2,tblptrl
  4566  0021BC  CFDD FFF7          	movff	postdec2,tblptrh
  4567  0021C0                     	if	0	;tblptru may be non-zero
  4568  0021C0                     	endif
  4569  0021C0                     	if	0	;tblptru may be non-zero
  4570  0021C0                     	endif
  4571  0021C0  0008               	tblrd		*
  4572  0021C2  50F5               	movf	tablat,w,c
  4573  0021C4  6E01               	movwf	fputc@c^0,c
  4574  0021C6  6A02               	clrf	(fputc@c+1)^0,c
  4575  0021C8  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4576  0021CC  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4577  0021D0  ECAB  F01F         	call	_fputc	;wreg free
  4578  0021D4                     
  4579                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  4580  0021D4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4581  0021D8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4582  0021DC  2ADE               	incf	postinc2,f,c
  4583  0021DE  0E00               	movlw	0
  4584  0021E0  22DD               	addwfc	postdec2,f,c
  4585  0021E2  EFC5  F010         	goto	l5210
  4586  0021E6                     l1372:
  4587  0021E6  0012               	return		;funcret
  4588  0021E8                     __end_of_vfpfcnvrt:
  4589                           	callstack 0
  4590                           
  4591 ;; *************** function _strncmp *****************
  4592 ;; Defined at:
  4593 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4596 ;;		 -> vfpfcnvrt@ct(3), 
  4597 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4598 ;;		 -> STR_27(3), 
  4599 ;;  n               2    4[COMRAM] unsigned int 
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4602 ;;		 -> STR_27(3), 
  4603 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4604 ;;		 -> vfpfcnvrt@ct(3), 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  2    0[COMRAM] int 
  4607 ;; Registers used:
  4608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4614 ;;      Params:         6       0       0       0       0       0       0
  4615 ;;      Locals:         4       0       0       0       0       0       0
  4616 ;;      Temps:          1       0       0       0       0       0       0
  4617 ;;      Totals:        11       0       0       0       0       0       0
  4618 ;;Total ram usage:       11 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; Hardware stack levels required when called:    1
  4621 ;; This function calls:
  4622 ;;		Nothing
  4623 ;; This function is called by:
  4624 ;;		_vfpfcnvrt
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text10
  4629  003DB0                     __ptext10:
  4630                           	callstack 0
  4631  003DB0                     _strncmp:
  4632                           	callstack 24
  4633  003DB0  C001  F008         	movff	strncmp@_l,strncmp@l
  4634  003DB4  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4635  003DB8  C003  F00A         	movff	strncmp@_r,strncmp@r
  4636  003DBC  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4637  003DC0  0605               	decf	strncmp@n^0,f,c
  4638  003DC2  A0D8               	btfss	status,0,c
  4639  003DC4  0606               	decf	(strncmp@n+1)^0,f,c
  4640  003DC6  2805               	incf	strncmp@n^0,w,c
  4641  003DC8  E106               	bnz	u6111
  4642  003DCA  2806               	incf	(strncmp@n+1)^0,w,c
  4643  003DCC  A4D8               	btfss	status,2,c
  4644  003DCE  EFEB  F01E         	goto	u6111
  4645  003DD2  EFED  F01E         	goto	u6110
  4646  003DD6                     u6111:
  4647  003DD6  EFFA  F01E         	goto	l5082
  4648  003DDA                     u6110:
  4649  003DDA  0E00               	movlw	0
  4650  003DDC  6E02               	movwf	(?_strncmp+1)^0,c
  4651  003DDE  0E00               	movlw	0
  4652  003DE0  6E01               	movwf	?_strncmp^0,c
  4653  003DE2  EF42  F01F         	goto	l1508
  4654  003DE6                     l5080:
  4655  003DE6  4A08               	infsnz	strncmp@l^0,f,c
  4656  003DE8  2A09               	incf	(strncmp@l+1)^0,f,c
  4657  003DEA  4A0A               	infsnz	strncmp@r^0,f,c
  4658  003DEC  2A0B               	incf	(strncmp@r+1)^0,f,c
  4659  003DEE  0605               	decf	strncmp@n^0,f,c
  4660  003DF0  A0D8               	btfss	status,0,c
  4661  003DF2  0606               	decf	(strncmp@n+1)^0,f,c
  4662  003DF4                     l5082:
  4663  003DF4  C008  FFD9         	movff	strncmp@l,fsr2l
  4664  003DF8  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4665  003DFC  50DF               	movf	indf2,w,c
  4666  003DFE  B4D8               	btfsc	status,2,c
  4667  003E00  EF04  F01F         	goto	u6121
  4668  003E04  EF06  F01F         	goto	u6120
  4669  003E08                     u6121:
  4670  003E08  EF31  F01F         	goto	l5090
  4671  003E0C                     u6120:
  4672  003E0C  C00A  FFF6         	movff	strncmp@r,tblptrl
  4673  003E10  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4674  003E14                     	if	0	;tblptru may be non-zero
  4675  003E14                     	endif
  4676  003E14                     	if	0	;tblptru may be non-zero
  4677  003E14                     	endif
  4678  003E14  0008               	tblrd		*
  4679  003E16  50F5               	movf	tablat,w,c
  4680  003E18  0900               	iorlw	0
  4681  003E1A  B4D8               	btfsc	status,2,c
  4682  003E1C  EF12  F01F         	goto	u6131
  4683  003E20  EF14  F01F         	goto	u6130
  4684  003E24                     u6131:
  4685  003E24  EF31  F01F         	goto	l5090
  4686  003E28                     u6130:
  4687  003E28  5005               	movf	strncmp@n^0,w,c
  4688  003E2A  1006               	iorwf	(strncmp@n+1)^0,w,c
  4689  003E2C  B4D8               	btfsc	status,2,c
  4690  003E2E  EF1B  F01F         	goto	u6141
  4691  003E32  EF1D  F01F         	goto	u6140
  4692  003E36                     u6141:
  4693  003E36  EF31  F01F         	goto	l5090
  4694  003E3A                     u6140:
  4695  003E3A  C008  FFD9         	movff	strncmp@l,fsr2l
  4696  003E3E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4697  003E42  50DF               	movf	indf2,w,c
  4698  003E44  6E07               	movwf	??_strncmp^0,c
  4699  003E46  C00A  FFF6         	movff	strncmp@r,tblptrl
  4700  003E4A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4701  003E4E                     	if	0	;tblptru may be non-zero
  4702  003E4E                     	endif
  4703  003E4E                     	if	0	;tblptru may be non-zero
  4704  003E4E                     	endif
  4705  003E4E  0008               	tblrd		*
  4706  003E50  50F5               	movf	tablat,w,c
  4707  003E52  1807               	xorwf	??_strncmp^0,w,c
  4708  003E54  B4D8               	btfsc	status,2,c
  4709  003E56  EF2F  F01F         	goto	u6151
  4710  003E5A  EF31  F01F         	goto	u6150
  4711  003E5E                     u6151:
  4712  003E5E  EFF3  F01E         	goto	l5080
  4713  003E62                     u6150:
  4714  003E62                     l5090:
  4715  003E62  C008  FFD9         	movff	strncmp@l,fsr2l
  4716  003E66  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4717  003E6A  50DF               	movf	indf2,w,c
  4718  003E6C  6E07               	movwf	??_strncmp^0,c
  4719  003E6E  C00A  FFF6         	movff	strncmp@r,tblptrl
  4720  003E72  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4721  003E76                     	if	0	;tblptru may be non-zero
  4722  003E76                     	endif
  4723  003E76                     	if	0	;tblptru may be non-zero
  4724  003E76                     	endif
  4725  003E76  0008               	tblrd		*
  4726  003E78  50F5               	movf	tablat,w,c
  4727  003E7A  5C07               	subwf	??_strncmp^0,w,c
  4728  003E7C  6E01               	movwf	?_strncmp^0,c
  4729  003E7E  6A02               	clrf	(?_strncmp+1)^0,c
  4730  003E80  A0D8               	btfss	status,0,c
  4731  003E82  0602               	decf	(?_strncmp+1)^0,f,c
  4732  003E84                     l1508:
  4733  003E84  0012               	return		;funcret
  4734  003E86                     __end_of_strncmp:
  4735                           	callstack 0
  4736                           
  4737 ;; *************** function _efgtoa *****************
  4738 ;; Defined at:
  4739 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  4742 ;;		 -> sprintf@f(6), 
  4743 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  4744 ;;  c               1   51[COMRAM] unsigned char 
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  u               4   52[BANK0 ] unsigned char 
  4747 ;;  g               4   44[BANK0 ] unsigned char 
  4748 ;;  l               4   38[BANK0 ] unsigned char 
  4749 ;;  h               4   34[BANK0 ] unsigned char 
  4750 ;;  ou              4    0[BANK0 ] unsigned char 
  4751 ;;  n               2   50[BANK0 ] int 
  4752 ;;  e               2   48[BANK0 ] int 
  4753 ;;  i               2   42[BANK0 ] int 
  4754 ;;  w               2   31[BANK0 ] int 
  4755 ;;  p               2   28[BANK0 ] int 
  4756 ;;  sign            2   26[BANK0 ] int 
  4757 ;;  d               2   24[BANK0 ] int 
  4758 ;;  ne              2   22[BANK0 ] int 
  4759 ;;  m               2   20[BANK0 ] int 
  4760 ;;  pp              2   18[BANK0 ] int 
  4761 ;;  t               2   16[BANK0 ] int 
  4762 ;;  mode            1   33[BANK0 ] unsigned char 
  4763 ;;  nmode           1   30[BANK0 ] unsigned char 
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  2   45[COMRAM] int 
  4766 ;; Registers used:
  4767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4773 ;;      Params:         7       0       0       0       0       0       0
  4774 ;;      Locals:         0      56       0       0       0       0       0
  4775 ;;      Temps:          5       0       0       0       0       0       0
  4776 ;;      Totals:        12      56       0       0       0       0       0
  4777 ;;Total ram usage:       68 bytes
  4778 ;; Hardware stack levels used:    1
  4779 ;; Hardware stack levels required when called:    5
  4780 ;; This function calls:
  4781 ;;		___awdiv
  4782 ;;		___awmod
  4783 ;;		___fladd
  4784 ;;		___fldiv
  4785 ;;		___fleq
  4786 ;;		___flge
  4787 ;;		___flmul
  4788 ;;		___flneg
  4789 ;;		___flsub
  4790 ;;		___fltol
  4791 ;;		___fpclassifyf
  4792 ;;		_floorf
  4793 ;;		_isupper
  4794 ;;		_pad
  4795 ;;		_strcpy
  4796 ;;		_tolower
  4797 ;; This function is called by:
  4798 ;;		_vfpfcnvrt
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text11
  4803  0006D8                     __ptext11:
  4804                           	callstack 0
  4805  0006D8                     _efgtoa:
  4806                           	callstack 20
  4807  0006D8                     
  4808                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  4809  0006D8  0E00               	movlw	0
  4810  0006DA  0100               	movlb	0	; () banked
  4811  0006DC  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4812  0006DE  0E00               	movlw	0
  4813  0006E0  6F7A               	movwf	efgtoa@sign& (0+255),b
  4814  0006E2                     
  4815                           ; BSR set to: 0
  4816                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  4817  0006E2  C030  F08C         	movff	efgtoa@f,efgtoa@g
  4818  0006E6  C031  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  4819  0006EA  C032  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  4820  0006EE  C033  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  4821  0006F2                     
  4822                           ; BSR set to: 0
  4823                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  4824  0006F2  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4825  0006F4  EF80  F003         	goto	u5520
  4826  0006F8  EF7E  F003         	goto	u5521
  4827  0006FC                     u5521:
  4828  0006FC  EF96  F003         	goto	l4744
  4829  000700                     u5520:
  4830  000700                     
  4831                           ; BSR set to: 0
  4832                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  4833  000700  0E00               	movlw	0
  4834  000702  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4835  000704  0E01               	movlw	1
  4836  000706  6F7A               	movwf	efgtoa@sign& (0+255),b
  4837  000708                     
  4838                           ; BSR set to: 0
  4839                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  4840  000708  C08C  F001         	movff	efgtoa@g,___flneg@f1
  4841  00070C  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4842  000710  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4843  000714  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4844  000718  EC22  F024         	call	___flneg	;wreg free
  4845  00071C  C001  F08C         	movff	?___flneg,efgtoa@g
  4846  000720  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  4847  000724  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  4848  000728  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  4849  00072C                     l4744:
  4850                           
  4851                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  4852  00072C  0E00               	movlw	0
  4853  00072E  0100               	movlb	0	; () banked
  4854  000730  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  4855  000732  0E00               	movlw	0
  4856  000734  6F92               	movwf	efgtoa@n& (0+255),b
  4857  000736                     
  4858                           ; BSR set to: 0
  4859                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  4860  000736  C0E9  F07F         	movff	_width,efgtoa@w
  4861  00073A  C0EA  F080         	movff	_width+1,efgtoa@w+1
  4862  00073E                     
  4863                           ; BSR set to: 0
  4864                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  4865  00073E  517A               	movf	efgtoa@sign& (0+255),w,b
  4866  000740  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4867  000742  A4D8               	btfss	status,2,c
  4868  000744  EFA6  F003         	goto	u5531
  4869  000748  EFA8  F003         	goto	u5530
  4870  00074C                     u5531:
  4871  00074C  EFAF  F003         	goto	l4752
  4872  000750                     u5530:
  4873  000750                     
  4874                           ; BSR set to: 0
  4875  000750  A5ED               	btfss	_flags& (0+255),2,b
  4876  000752  EFAD  F003         	goto	u5541
  4877  000756  EFAF  F003         	goto	u5540
  4878  00075A                     u5541:
  4879  00075A  EFC9  F003         	goto	l4764
  4880  00075E                     u5540:
  4881  00075E                     l4752:
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  4885  00075E  517A               	movf	efgtoa@sign& (0+255),w,b
  4886  000760  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4887  000762  A4D8               	btfss	status,2,c
  4888  000764  EFB6  F003         	goto	u5551
  4889  000768  EFB8  F003         	goto	u5550
  4890  00076C                     u5551:
  4891  00076C  EFBE  F003         	goto	l4756
  4892  000770                     u5550:
  4893  000770                     
  4894                           ; BSR set to: 0
  4895  000770  0E00               	movlw	0
  4896  000772  6F65               	movwf	(_efgtoa$2869+1)& (0+255),b
  4897  000774  0E2B               	movlw	43
  4898  000776  6F64               	movwf	_efgtoa$2869& (0+255),b
  4899  000778  EFC2  F003         	goto	l4758
  4900  00077C                     l4756:
  4901                           
  4902                           ; BSR set to: 0
  4903  00077C  0E00               	movlw	0
  4904  00077E  6F65               	movwf	(_efgtoa$2869+1)& (0+255),b
  4905  000780  0E2D               	movlw	45
  4906  000782  6F64               	movwf	_efgtoa$2869& (0+255),b
  4907  000784                     l4758:
  4908                           
  4909                           ; BSR set to: 0
  4910  000784  C064  F1AB         	movff	_efgtoa$2869,_dbuf
  4911  000788                     
  4912                           ; BSR set to: 0
  4913                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  4914  000788  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4915  00078A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4916  00078C                     
  4917                           ; BSR set to: 0
  4918                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  4919  00078C  077F               	decf	efgtoa@w& (0+255),f,b
  4920  00078E  A0D8               	btfss	status,0,c
  4921  000790  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4922  000792                     l4764:
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4926  000792  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4927  000796  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4928  00079A  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4929  00079E  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4930  0007A2  EC59  F01E         	call	___fpclassifyf	;wreg free
  4931  0007A6  0401               	decf	?___fpclassifyf^0,w,c
  4932  0007A8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4933  0007AA  A4D8               	btfss	status,2,c
  4934  0007AC  EFDA  F003         	goto	u5561
  4935  0007B0  EFDC  F003         	goto	u5560
  4936  0007B4                     u5561:
  4937  0007B4  EF33  F004         	goto	l4782
  4938  0007B8                     u5560:
  4939  0007B8  0EBF               	movlw	191
  4940  0007BA  6E35               	movwf	??_efgtoa^0,c
  4941  0007BC  0EFF               	movlw	255
  4942  0007BE  6E36               	movwf	(??_efgtoa+1)^0,c
  4943  0007C0  5034               	movf	efgtoa@c^0,w,c
  4944  0007C2  6E37               	movwf	(??_efgtoa+2)^0,c
  4945  0007C4  6A38               	clrf	(??_efgtoa+3)^0,c
  4946  0007C6  5035               	movf	??_efgtoa^0,w,c
  4947  0007C8  2637               	addwf	(??_efgtoa+2)^0,f,c
  4948  0007CA  5036               	movf	(??_efgtoa+1)^0,w,c
  4949  0007CC  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4950  0007CE  5038               	movf	(??_efgtoa+3)^0,w,c
  4951  0007D0  E10A               	bnz	u5570
  4952  0007D2  0E1A               	movlw	26
  4953  0007D4  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4954  0007D6  A0D8               	btfss	status,0,c
  4955  0007D8  EFF0  F003         	goto	u5571
  4956  0007DC  EFF3  F003         	goto	u5570
  4957  0007E0                     u5571:
  4958  0007E0  0E01               	movlw	1
  4959  0007E2  EFF4  F003         	goto	u5580
  4960  0007E6                     u5570:
  4961  0007E6  0E00               	movlw	0
  4962  0007E8                     u5580:
  4963  0007E8  0100               	movlb	0	; () banked
  4964  0007EA  6F66               	movwf	_efgtoa$2870& (0+255),b
  4965  0007EC  6B67               	clrf	(_efgtoa$2870+1)& (0+255),b
  4966  0007EE                     
  4967                           ; BSR set to: 0
  4968  0007EE  5166               	movf	_efgtoa$2870& (0+255),w,b
  4969  0007F0  1167               	iorwf	(_efgtoa$2870+1)& (0+255),w,b
  4970  0007F2  B4D8               	btfsc	status,2,c
  4971  0007F4  EFFE  F003         	goto	u5591
  4972  0007F8  EF00  F004         	goto	u5590
  4973  0007FC                     u5591:
  4974  0007FC  EF0E  F004         	goto	l4774
  4975  000800                     u5590:
  4976  000800                     
  4977                           ; BSR set to: 0
  4978                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  4979  000800  0EAB               	movlw	low _dbuf
  4980  000802  2592               	addwf	efgtoa@n& (0+255),w,b
  4981  000804  6E01               	movwf	strcpy@dest^0,c
  4982  000806  0E01               	movlw	high _dbuf
  4983  000808  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4984  00080A  6E02               	movwf	(strcpy@dest+1)^0,c
  4985  00080C  0EC4               	movlw	low STR_17
  4986  00080E  6E03               	movwf	strcpy@src^0,c
  4987  000810  0E06               	movlw	high STR_17
  4988  000812  6E04               	movwf	(strcpy@src+1)^0,c
  4989  000814  ECD0  F022         	call	_strcpy	;wreg free
  4990                           
  4991                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  4992  000818  EF1A  F004         	goto	l4776
  4993  00081C                     l4774:
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  4997  00081C  0EAB               	movlw	low _dbuf
  4998  00081E  2592               	addwf	efgtoa@n& (0+255),w,b
  4999  000820  6E01               	movwf	strcpy@dest^0,c
  5000  000822  0E01               	movlw	high _dbuf
  5001  000824  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5002  000826  6E02               	movwf	(strcpy@dest+1)^0,c
  5003  000828  0ECC               	movlw	low STR_18
  5004  00082A  6E03               	movwf	strcpy@src^0,c
  5005  00082C  0E06               	movlw	high STR_18
  5006  00082E  6E04               	movwf	(strcpy@src+1)^0,c
  5007  000830  ECD0  F022         	call	_strcpy	;wreg free
  5008  000834                     l4776:
  5009                           
  5010                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  5011  000834  0100               	movlb	0	; () banked
  5012  000836  0EFD               	movlw	253
  5013  000838  277F               	addwf	efgtoa@w& (0+255),f,b
  5014  00083A  0EFF               	movlw	255
  5015  00083C  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5016  00083E                     l4778:
  5017                           
  5018                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  5019  00083E  C02E  F011         	movff	efgtoa@fp,pad@fp
  5020  000842  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  5021  000846  0EAB               	movlw	low _dbuf
  5022  000848  6E13               	movwf	pad@buf^0,c
  5023  00084A  0E01               	movlw	high _dbuf
  5024  00084C  6E14               	movwf	(pad@buf+1)^0,c
  5025  00084E  C07F  F015         	movff	efgtoa@w,pad@p
  5026  000852  C080  F016         	movff	efgtoa@w+1,pad@p+1
  5027  000856  EC10  F020         	call	_pad	;wreg free
  5028  00085A  C011  F02E         	movff	?_pad,?_efgtoa
  5029  00085E  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  5030  000862  EF43  F009         	goto	l1270
  5031  000866                     l4782:
  5032                           
  5033                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5034  000866  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  5035  00086A  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5036  00086E  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5037  000872  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5038  000876  EC59  F01E         	call	___fpclassifyf	;wreg free
  5039  00087A  5001               	movf	?___fpclassifyf^0,w,c
  5040  00087C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5041  00087E  A4D8               	btfss	status,2,c
  5042  000880  EF44  F004         	goto	u5601
  5043  000884  EF46  F004         	goto	u5600
  5044  000888                     u5601:
  5045  000888  EF86  F004         	goto	l4800
  5046  00088C                     u5600:
  5047  00088C  0EBF               	movlw	191
  5048  00088E  6E35               	movwf	??_efgtoa^0,c
  5049  000890  0EFF               	movlw	255
  5050  000892  6E36               	movwf	(??_efgtoa+1)^0,c
  5051  000894  5034               	movf	efgtoa@c^0,w,c
  5052  000896  6E37               	movwf	(??_efgtoa+2)^0,c
  5053  000898  6A38               	clrf	(??_efgtoa+3)^0,c
  5054  00089A  5035               	movf	??_efgtoa^0,w,c
  5055  00089C  2637               	addwf	(??_efgtoa+2)^0,f,c
  5056  00089E  5036               	movf	(??_efgtoa+1)^0,w,c
  5057  0008A0  2238               	addwfc	(??_efgtoa+3)^0,f,c
  5058  0008A2  5038               	movf	(??_efgtoa+3)^0,w,c
  5059  0008A4  E10A               	bnz	u5610
  5060  0008A6  0E1A               	movlw	26
  5061  0008A8  5C37               	subwf	(??_efgtoa+2)^0,w,c
  5062  0008AA  A0D8               	btfss	status,0,c
  5063  0008AC  EF5A  F004         	goto	u5611
  5064  0008B0  EF5D  F004         	goto	u5610
  5065  0008B4                     u5611:
  5066  0008B4  0E01               	movlw	1
  5067  0008B6  EF5E  F004         	goto	u5620
  5068  0008BA                     u5610:
  5069  0008BA  0E00               	movlw	0
  5070  0008BC                     u5620:
  5071  0008BC  0100               	movlb	0	; () banked
  5072  0008BE  6F68               	movwf	_efgtoa$2874& (0+255),b
  5073  0008C0  6B69               	clrf	(_efgtoa$2874+1)& (0+255),b
  5074  0008C2                     
  5075                           ; BSR set to: 0
  5076  0008C2  5168               	movf	_efgtoa$2874& (0+255),w,b
  5077  0008C4  1169               	iorwf	(_efgtoa$2874+1)& (0+255),w,b
  5078  0008C6  B4D8               	btfsc	status,2,c
  5079  0008C8  EF68  F004         	goto	u5631
  5080  0008CC  EF6A  F004         	goto	u5630
  5081  0008D0                     u5631:
  5082  0008D0  EF78  F004         	goto	l4792
  5083  0008D4                     u5630:
  5084  0008D4                     
  5085                           ; BSR set to: 0
  5086                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  5087  0008D4  0EAB               	movlw	low _dbuf
  5088  0008D6  2592               	addwf	efgtoa@n& (0+255),w,b
  5089  0008D8  6E01               	movwf	strcpy@dest^0,c
  5090  0008DA  0E01               	movlw	high _dbuf
  5091  0008DC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5092  0008DE  6E02               	movwf	(strcpy@dest+1)^0,c
  5093  0008E0  0EC8               	movlw	low STR_21
  5094  0008E2  6E03               	movwf	strcpy@src^0,c
  5095  0008E4  0E06               	movlw	high STR_21
  5096  0008E6  6E04               	movwf	(strcpy@src+1)^0,c
  5097  0008E8  ECD0  F022         	call	_strcpy	;wreg free
  5098                           
  5099                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  5100  0008EC  EF1A  F004         	goto	l4776
  5101  0008F0                     l4792:
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  5105  0008F0  0EAB               	movlw	low _dbuf
  5106  0008F2  2592               	addwf	efgtoa@n& (0+255),w,b
  5107  0008F4  6E01               	movwf	strcpy@dest^0,c
  5108  0008F6  0E01               	movlw	high _dbuf
  5109  0008F8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5110  0008FA  6E02               	movwf	(strcpy@dest+1)^0,c
  5111  0008FC  0ED0               	movlw	low STR_22
  5112  0008FE  6E03               	movwf	strcpy@src^0,c
  5113  000900  0E06               	movlw	high STR_22
  5114  000902  6E04               	movwf	(strcpy@src+1)^0,c
  5115  000904  ECD0  F022         	call	_strcpy	;wreg free
  5116  000908  EF1A  F004         	goto	l4776
  5117  00090C                     l4800:
  5118                           
  5119                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  5120  00090C  0E00               	movlw	0
  5121  00090E  0100               	movlb	0	; () banked
  5122  000910  6F94               	movwf	efgtoa@u& (0+255),b
  5123  000912  0E00               	movlw	0
  5124  000914  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  5125  000916  0E80               	movlw	128
  5126  000918  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  5127  00091A  0E3F               	movlw	63
  5128  00091C  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5129                           
  5130                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  5131  00091E  0E00               	movlw	0
  5132  000920  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5133  000922  0E00               	movlw	0
  5134  000924  6F90               	movwf	efgtoa@e& (0+255),b
  5135  000926                     
  5136                           ; BSR set to: 0
  5137                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  5138  000926  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  5139  00092A  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  5140  00092E  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  5141  000932  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  5142  000936  0E00               	movlw	0
  5143  000938  6E05               	movwf	___fleq@ff2^0,c
  5144  00093A  0E00               	movlw	0
  5145  00093C  6E06               	movwf	(___fleq@ff2+1)^0,c
  5146  00093E  0E00               	movlw	0
  5147  000940  6E07               	movwf	(___fleq@ff2+2)^0,c
  5148  000942  0E00               	movlw	0
  5149  000944  6E08               	movwf	(___fleq@ff2+3)^0,c
  5150  000946  EC2D  F021         	call	___fleq	;wreg free
  5151  00094A  B0D8               	btfsc	status,0,c
  5152  00094C  EFAA  F004         	goto	u5641
  5153  000950  EFAC  F004         	goto	u5640
  5154  000954                     u5641:
  5155  000954  EF2F  F005         	goto	l4818
  5156  000958                     u5640:
  5157  000958  EFCB  F004         	goto	l4810
  5158  00095C                     l4806:
  5159                           
  5160                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  5161  00095C  C094  F001         	movff	efgtoa@u,___flmul@b
  5162  000960  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  5163  000964  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  5164  000968  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  5165  00096C  0E00               	movlw	0
  5166  00096E  6E05               	movwf	___flmul@a^0,c
  5167  000970  0E00               	movlw	0
  5168  000972  6E06               	movwf	(___flmul@a+1)^0,c
  5169  000974  0E20               	movlw	32
  5170  000976  6E07               	movwf	(___flmul@a+2)^0,c
  5171  000978  0E41               	movlw	65
  5172  00097A  6E08               	movwf	(___flmul@a+3)^0,c
  5173  00097C  EC54  F013         	call	___flmul	;wreg free
  5174  000980  C001  F094         	movff	?___flmul,efgtoa@u
  5175  000984  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  5176  000988  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  5177  00098C  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  5178  000990                     
  5179                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  5180  000990  0100               	movlb	0	; () banked
  5181  000992  4B90               	infsnz	efgtoa@e& (0+255),f,b
  5182  000994  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5183  000996                     l4810:
  5184                           
  5185                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  5186  000996  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  5187  00099A  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  5188  00099E  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  5189  0009A2  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  5190  0009A6  0E00               	movlw	0
  5191  0009A8  6E05               	movwf	___flmul@a^0,c
  5192  0009AA  0E00               	movlw	0
  5193  0009AC  6E06               	movwf	(___flmul@a+1)^0,c
  5194  0009AE  0E20               	movlw	32
  5195  0009B0  6E07               	movwf	(___flmul@a+2)^0,c
  5196  0009B2  0E41               	movlw	65
  5197  0009B4  6E08               	movwf	(___flmul@a+3)^0,c
  5198  0009B6  C094  F001         	movff	efgtoa@u,___flmul@b
  5199  0009BA  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  5200  0009BE  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  5201  0009C2  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  5202  0009C6  EC54  F013         	call	___flmul	;wreg free
  5203  0009CA  C001  F01E         	movff	?___flmul,___flge@ff2
  5204  0009CE  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  5205  0009D2  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  5206  0009D6  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  5207  0009DA  ECD7  F01D         	call	___flge	;wreg free
  5208  0009DE  B0D8               	btfsc	status,0,c
  5209  0009E0  EFF4  F004         	goto	u5651
  5210  0009E4  EFF6  F004         	goto	u5650
  5211  0009E8                     u5651:
  5212  0009E8  EFAE  F004         	goto	l4806
  5213  0009EC                     u5650:
  5214  0009EC  EF16  F005         	goto	l4816
  5215  0009F0                     l4812:
  5216                           
  5217                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  5218  0009F0  C094  F001         	movff	efgtoa@u,___fldiv@b
  5219  0009F4  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5220  0009F8  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5221  0009FC  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5222  000A00  0E00               	movlw	0
  5223  000A02  6E05               	movwf	___fldiv@a^0,c
  5224  000A04  0E00               	movlw	0
  5225  000A06  6E06               	movwf	(___fldiv@a+1)^0,c
  5226  000A08  0E20               	movlw	32
  5227  000A0A  6E07               	movwf	(___fldiv@a+2)^0,c
  5228  000A0C  0E41               	movlw	65
  5229  000A0E  6E08               	movwf	(___fldiv@a+3)^0,c
  5230  000A10  EC69  F015         	call	___fldiv	;wreg free
  5231  000A14  C001  F094         	movff	?___fldiv,efgtoa@u
  5232  000A18  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5233  000A1C  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5234  000A20  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5235  000A24                     
  5236                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  5237  000A24  0100               	movlb	0	; () banked
  5238  000A26  0790               	decf	efgtoa@e& (0+255),f,b
  5239  000A28  A0D8               	btfss	status,0,c
  5240  000A2A  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  5241  000A2C                     l4816:
  5242                           
  5243                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  5244  000A2C  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  5245  000A30  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  5246  000A34  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  5247  000A38  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  5248  000A3C  C094  F01E         	movff	efgtoa@u,___flge@ff2
  5249  000A40  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  5250  000A44  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  5251  000A48  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  5252  000A4C  ECD7  F01D         	call	___flge	;wreg free
  5253  000A50  A0D8               	btfss	status,0,c
  5254  000A52  EF2D  F005         	goto	u5661
  5255  000A56  EF2F  F005         	goto	u5660
  5256  000A5A                     u5661:
  5257  000A5A  EFF8  F004         	goto	l4812
  5258  000A5E                     u5660:
  5259  000A5E                     l4818:
  5260                           
  5261                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  5262  000A5E  C034  F007         	movff	efgtoa@c,tolower@c
  5263  000A62  6A08               	clrf	(tolower@c+1)^0,c
  5264  000A64  ECA0  F022         	call	_tolower	;wreg free
  5265  000A68  5007               	movf	?_tolower^0,w,c
  5266  000A6A  0100               	movlb	0	; () banked
  5267  000A6C  6F81               	movwf	efgtoa@mode& (0+255),b
  5268  000A6E                     
  5269                           ; BSR set to: 0
  5270                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  5271  000A6E  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  5272  000A72                     
  5273                           ; BSR set to: 0
  5274                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  5275  000A72  0E67               	movlw	103
  5276  000A74  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5277  000A76  A4D8               	btfss	status,2,c
  5278  000A78  EF40  F005         	goto	u5671
  5279  000A7C  EF42  F005         	goto	u5670
  5280  000A80                     u5671:
  5281  000A80  EF68  F005         	goto	l4832
  5282  000A84                     u5670:
  5283  000A84                     
  5284                           ; BSR set to: 0
  5285                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  5286  000A84  51EB               	movf	_prec& (0+255),w,b
  5287  000A86  11EC               	iorwf	(_prec+1)& (0+255),w,b
  5288  000A88  A4D8               	btfss	status,2,c
  5289  000A8A  EF49  F005         	goto	u5681
  5290  000A8E  EF4B  F005         	goto	u5680
  5291  000A92                     u5681:
  5292  000A92  EF4F  F005         	goto	l4828
  5293  000A96                     u5680:
  5294  000A96                     
  5295                           ; BSR set to: 0
  5296                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  5297  000A96  0E00               	movlw	0
  5298  000A98  6FEC               	movwf	(_prec+1)& (0+255),b
  5299  000A9A  0E01               	movlw	1
  5300  000A9C  6FEB               	movwf	_prec& (0+255),b
  5301  000A9E                     l4828:
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  5305  000A9E  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  5306  000AA0  EF5C  F005         	goto	u5690
  5307  000AA4  51EC               	movf	(_prec+1)& (0+255),w,b
  5308  000AA6  E106               	bnz	u5691
  5309  000AA8  05EB               	decf	_prec& (0+255),w,b
  5310  000AAA  B0D8               	btfsc	status,0,c
  5311  000AAC  EF5A  F005         	goto	u5691
  5312  000AB0  EF5C  F005         	goto	u5690
  5313  000AB4                     u5691:
  5314  000AB4  EF62  F005         	goto	l1288
  5315  000AB8                     u5690:
  5316  000AB8                     l4830:
  5317                           
  5318                           ; BSR set to: 0
  5319  000AB8  0E00               	movlw	0
  5320  000ABA  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  5321  000ABC  0E06               	movlw	6
  5322  000ABE  6F7C               	movwf	efgtoa@p& (0+255),b
  5323  000AC0  EF71  F005         	goto	l4838
  5324  000AC4                     l1288:
  5325                           
  5326                           ; BSR set to: 0
  5327  000AC4  C0EB  F07C         	movff	_prec,efgtoa@p
  5328  000AC8  C0EC  F07D         	movff	_prec+1,efgtoa@p+1
  5329  000ACC  EF71  F005         	goto	l4838
  5330  000AD0                     l4832:
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  5334  000AD0  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  5335  000AD2  EF6D  F005         	goto	u5701
  5336  000AD6  EF6F  F005         	goto	u5700
  5337  000ADA                     u5701:
  5338  000ADA  EF5C  F005         	goto	l4830
  5339  000ADE                     u5700:
  5340  000ADE  EF62  F005         	goto	l1288
  5341  000AE2                     l4838:
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  5345  000AE2  0E67               	movlw	103
  5346  000AE4  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5347  000AE6  A4D8               	btfss	status,2,c
  5348  000AE8  EF78  F005         	goto	u5711
  5349  000AEC  EF7A  F005         	goto	u5710
  5350  000AF0                     u5711:
  5351  000AF0  EFA9  F005         	goto	l4848
  5352  000AF4                     u5710:
  5353  000AF4                     
  5354                           ; BSR set to: 0
  5355                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  5356  000AF4  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  5357  000AF6  EF88  F005         	goto	u5720
  5358  000AFA  0EFC               	movlw	252
  5359  000AFC  5D90               	subwf	efgtoa@e& (0+255),w,b
  5360  000AFE  0EFF               	movlw	255
  5361  000B00  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5362  000B02  A0D8               	btfss	status,0,c
  5363  000B04  EF86  F005         	goto	u5721
  5364  000B08  EF88  F005         	goto	u5720
  5365  000B0C                     u5721:
  5366  000B0C  EFA7  F005         	goto	l4846
  5367  000B10                     u5720:
  5368  000B10                     
  5369                           ; BSR set to: 0
  5370  000B10  0EFF               	movlw	255
  5371  000B12  6E35               	movwf	??_efgtoa^0,c
  5372  000B14  0EFF               	movlw	255
  5373  000B16  6E36               	movwf	(??_efgtoa+1)^0,c
  5374  000B18  C07C  F037         	movff	efgtoa@p,??_efgtoa+2
  5375  000B1C  C07D  F038         	movff	efgtoa@p+1,??_efgtoa+3
  5376  000B20  5035               	movf	??_efgtoa^0,w,c
  5377  000B22  2637               	addwf	(??_efgtoa+2)^0,f,c
  5378  000B24  5036               	movf	(??_efgtoa+1)^0,w,c
  5379  000B26  2238               	addwfc	(??_efgtoa+3)^0,f,c
  5380  000B28  5190               	movf	efgtoa@e& (0+255),w,b
  5381  000B2A  5C37               	subwf	(??_efgtoa+2)^0,w,c
  5382  000B2C  5038               	movf	(??_efgtoa+3)^0,w,c
  5383  000B2E  0A80               	xorlw	128
  5384  000B30  6E39               	movwf	(??_efgtoa+4)^0,c
  5385  000B32  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5386  000B34  0A80               	xorlw	128
  5387  000B36  5839               	subwfb	(??_efgtoa+4)^0,w,c
  5388  000B38  A0D8               	btfss	status,0,c
  5389  000B3A  EFA1  F005         	goto	u5731
  5390  000B3E  EFA3  F005         	goto	u5730
  5391  000B42                     u5731:
  5392  000B42  EFA7  F005         	goto	l4846
  5393  000B46                     u5730:
  5394  000B46                     
  5395                           ; BSR set to: 0
  5396                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  5397  000B46  0E66               	movlw	102
  5398  000B48  6F7E               	movwf	efgtoa@nmode& (0+255),b
  5399                           
  5400                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  5401  000B4A  EFA9  F005         	goto	l4848
  5402  000B4E                     l4846:
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  5406  000B4E  0E65               	movlw	101
  5407  000B50  6F7E               	movwf	efgtoa@nmode& (0+255),b
  5408  000B52                     l4848:
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  5412  000B52  C07C  F074         	movff	efgtoa@p,efgtoa@m
  5413  000B56  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  5414  000B5A                     
  5415                           ; BSR set to: 0
  5416                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  5417  000B5A  0E67               	movlw	103
  5418  000B5C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5419  000B5E  A4D8               	btfss	status,2,c
  5420  000B60  EFB4  F005         	goto	u5741
  5421  000B64  EFB6  F005         	goto	u5740
  5422  000B68                     u5741:
  5423  000B68  EFC6  F005         	goto	l4856
  5424  000B6C                     u5740:
  5425  000B6C                     
  5426                           ; BSR set to: 0
  5427  000B6C  0E66               	movlw	102
  5428  000B6E  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  5429  000B70  A4D8               	btfss	status,2,c
  5430  000B72  EFBD  F005         	goto	u5751
  5431  000B76  EFBF  F005         	goto	u5750
  5432  000B7A                     u5751:
  5433  000B7A  EFC8  F005         	goto	l4858
  5434  000B7E                     u5750:
  5435  000B7E                     
  5436                           ; BSR set to: 0
  5437  000B7E  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5438  000B80  EFC6  F005         	goto	u5760
  5439  000B84  EFC4  F005         	goto	u5761
  5440  000B88                     u5761:
  5441  000B88  EFC8  F005         	goto	l4858
  5442  000B8C                     u5760:
  5443  000B8C                     l4856:
  5444                           
  5445                           ; BSR set to: 0
  5446                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  5447  000B8C  4B74               	infsnz	efgtoa@m& (0+255),f,b
  5448  000B8E  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  5449  000B90                     l4858:
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  5453  000B90  0E66               	movlw	102
  5454  000B92  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  5455  000B94  A4D8               	btfss	status,2,c
  5456  000B96  EFCF  F005         	goto	u5771
  5457  000B9A  EFD1  F005         	goto	u5770
  5458  000B9E                     u5771:
  5459  000B9E  EFF1  F005         	goto	l4868
  5460  000BA2                     u5770:
  5461  000BA2                     
  5462                           ; BSR set to: 0
  5463                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  5464  000BA2  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5465  000BA4  EFD8  F005         	goto	u5780
  5466  000BA8  EFD6  F005         	goto	u5781
  5467  000BAC                     u5781:
  5468  000BAC  EFE4  F005         	goto	l4864
  5469  000BB0                     u5780:
  5470  000BB0                     
  5471                           ; BSR set to: 0
  5472                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  5473  000BB0  0E00               	movlw	0
  5474  000BB2  6F94               	movwf	efgtoa@u& (0+255),b
  5475  000BB4  0E00               	movlw	0
  5476  000BB6  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  5477  000BB8  0E80               	movlw	128
  5478  000BBA  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  5479  000BBC  0E3F               	movlw	63
  5480  000BBE  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5481                           
  5482                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  5483  000BC0  0E00               	movlw	0
  5484  000BC2  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5485  000BC4  0E00               	movlw	0
  5486  000BC6  6F90               	movwf	efgtoa@e& (0+255),b
  5487  000BC8                     l4864:
  5488                           
  5489                           ; BSR set to: 0
  5490                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  5491  000BC8  0E67               	movlw	103
  5492  000BCA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5493  000BCC  B4D8               	btfsc	status,2,c
  5494  000BCE  EFEB  F005         	goto	u5791
  5495  000BD2  EFED  F005         	goto	u5790
  5496  000BD6                     u5791:
  5497  000BD6  EFF1  F005         	goto	l4868
  5498  000BDA                     u5790:
  5499  000BDA                     
  5500                           ; BSR set to: 0
  5501                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  5502  000BDA  5190               	movf	efgtoa@e& (0+255),w,b
  5503  000BDC  2774               	addwf	efgtoa@m& (0+255),f,b
  5504  000BDE  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5505  000BE0  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5506  000BE2                     l4868:
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  5510  000BE2  0E00               	movlw	0
  5511  000BE4  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5512  000BE6  0E00               	movlw	0
  5513  000BE8  6F8A               	movwf	efgtoa@i& (0+255),b
  5514  000BEA                     
  5515                           ; BSR set to: 0
  5516                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  5517  000BEA  C08C  F082         	movff	efgtoa@g,efgtoa@h
  5518  000BEE  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  5519  000BF2  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  5520  000BF6  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  5521  000BFA                     
  5522                           ; BSR set to: 0
  5523                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  5524  000BFA  C094  F060         	movff	efgtoa@u,efgtoa@ou
  5525  000BFE  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  5526  000C02  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  5527  000C06  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  5528                           
  5529                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  5530  000C0A  EF82  F006         	goto	l4882
  5531  000C0E                     l4874:
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  5535  000C0E  C082  F001         	movff	efgtoa@h,___fldiv@b
  5536  000C12  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5537  000C16  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5538  000C1A  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5539  000C1E  C094  F005         	movff	efgtoa@u,___fldiv@a
  5540  000C22  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5541  000C26  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5542  000C2A  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5543  000C2E  EC69  F015         	call	___fldiv	;wreg free
  5544  000C32  C001  F01A         	movff	?___fldiv,floorf@x
  5545  000C36  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5546  000C3A  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5547  000C3E  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5548  000C42  ECA8  F018         	call	_floorf	;wreg free
  5549  000C46  C01A  F086         	movff	?_floorf,efgtoa@l
  5550  000C4A  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  5551  000C4E  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  5552  000C52  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  5553                           
  5554                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  5555  000C56  C086  F001         	movff	efgtoa@l,___fltol@f1
  5556  000C5A  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5557  000C5E  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5558  000C62  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5559  000C66  EC54  F01D         	call	___fltol	;wreg free
  5560  000C6A  C001  F078         	movff	?___fltol,efgtoa@d
  5561  000C6E  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5562  000C72                     
  5563                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  5564  000C72  C082  F01A         	movff	efgtoa@h,___flsub@b
  5565  000C76  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  5566  000C7A  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  5567  000C7E  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  5568  000C82  C094  F005         	movff	efgtoa@u,___flmul@a
  5569  000C86  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  5570  000C8A  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  5571  000C8E  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  5572  000C92  C086  F001         	movff	efgtoa@l,___flmul@b
  5573  000C96  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  5574  000C9A  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  5575  000C9E  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  5576  000CA2  EC54  F013         	call	___flmul	;wreg free
  5577  000CA6  C001  F01E         	movff	?___flmul,___flsub@a
  5578  000CAA  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  5579  000CAE  C003  F020         	movff	?___flmul+2,___flsub@a+2
  5580  000CB2  C004  F021         	movff	?___flmul+3,___flsub@a+3
  5581  000CB6  ECA1  F023         	call	___flsub	;wreg free
  5582  000CBA  C01A  F082         	movff	?___flsub,efgtoa@h
  5583  000CBE  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  5584  000CC2  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  5585  000CC6  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  5586  000CCA                     
  5587                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  5588  000CCA  C094  F001         	movff	efgtoa@u,___fldiv@b
  5589  000CCE  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5590  000CD2  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5591  000CD6  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5592  000CDA  0E00               	movlw	0
  5593  000CDC  6E05               	movwf	___fldiv@a^0,c
  5594  000CDE  0E00               	movlw	0
  5595  000CE0  6E06               	movwf	(___fldiv@a+1)^0,c
  5596  000CE2  0E20               	movlw	32
  5597  000CE4  6E07               	movwf	(___fldiv@a+2)^0,c
  5598  000CE6  0E41               	movlw	65
  5599  000CE8  6E08               	movwf	(___fldiv@a+3)^0,c
  5600  000CEA  EC69  F015         	call	___fldiv	;wreg free
  5601  000CEE  C001  F094         	movff	?___fldiv,efgtoa@u
  5602  000CF2  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5603  000CF6  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5604  000CFA  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5605  000CFE                     
  5606                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  5607  000CFE  0100               	movlb	0	; () banked
  5608  000D00  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5609  000D02  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5610  000D04                     l4882:
  5611                           
  5612                           ; BSR set to: 0
  5613                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  5614  000D04  5174               	movf	efgtoa@m& (0+255),w,b
  5615  000D06  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5616  000D08  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5617  000D0A  0A80               	xorlw	128
  5618  000D0C  6E35               	movwf	??_efgtoa^0,c
  5619  000D0E  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  5620  000D10  0A80               	xorlw	128
  5621  000D12  5835               	subwfb	??_efgtoa^0,w,c
  5622  000D14  A0D8               	btfss	status,0,c
  5623  000D16  EF8F  F006         	goto	u5801
  5624  000D1A  EF91  F006         	goto	u5800
  5625  000D1E                     u5801:
  5626  000D1E  EF07  F006         	goto	l4874
  5627  000D22                     u5800:
  5628  000D22                     
  5629                           ; BSR set to: 0
  5630                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  5631  000D22  C094  F001         	movff	efgtoa@u,___flmul@b
  5632  000D26  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  5633  000D2A  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  5634  000D2E  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  5635  000D32  0E00               	movlw	0
  5636  000D34  6E05               	movwf	___flmul@a^0,c
  5637  000D36  0E00               	movlw	0
  5638  000D38  6E06               	movwf	(___flmul@a+1)^0,c
  5639  000D3A  0EA0               	movlw	160
  5640  000D3C  6E07               	movwf	(___flmul@a+2)^0,c
  5641  000D3E  0E40               	movlw	64
  5642  000D40  6E08               	movwf	(___flmul@a+3)^0,c
  5643  000D42  EC54  F013         	call	___flmul	;wreg free
  5644  000D46  C001  F086         	movff	?___flmul,efgtoa@l
  5645  000D4A  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  5646  000D4E  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  5647  000D52  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  5648  000D56                     
  5649                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  5650  000D56  C082  F01A         	movff	efgtoa@h,___flge@ff1
  5651  000D5A  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  5652  000D5E  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  5653  000D62  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  5654  000D66  C086  F01E         	movff	efgtoa@l,___flge@ff2
  5655  000D6A  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  5656  000D6E  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  5657  000D72  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  5658  000D76  ECD7  F01D         	call	___flge	;wreg free
  5659  000D7A  B0D8               	btfsc	status,0,c
  5660  000D7C  EFC2  F006         	goto	u5811
  5661  000D80  EFC4  F006         	goto	u5810
  5662  000D84                     u5811:
  5663  000D84  EFCF  F006         	goto	l4890
  5664  000D88                     u5810:
  5665  000D88                     
  5666                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  5667  000D88  0E00               	movlw	0
  5668  000D8A  0100               	movlb	0	; () banked
  5669  000D8C  6F86               	movwf	efgtoa@l& (0+255),b
  5670  000D8E  0E00               	movlw	0
  5671  000D90  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5672  000D92  0E00               	movlw	0
  5673  000D94  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5674  000D96  0E00               	movlw	0
  5675  000D98  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5676                           
  5677                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  5678  000D9A  EFF8  F006         	goto	l4896
  5679  000D9E                     l4890:
  5680                           
  5681                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  5682  000D9E  C082  F001         	movff	efgtoa@h,___fleq@ff1
  5683  000DA2  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5684  000DA6  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5685  000DAA  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5686  000DAE  C086  F005         	movff	efgtoa@l,___fleq@ff2
  5687  000DB2  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5688  000DB6  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5689  000DBA  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5690  000DBE  EC2D  F021         	call	___fleq	;wreg free
  5691  000DC2  A0D8               	btfss	status,0,c
  5692  000DC4  EFE6  F006         	goto	u5821
  5693  000DC8  EFE8  F006         	goto	u5820
  5694  000DCC                     u5821:
  5695  000DCC  EFF8  F006         	goto	l4896
  5696  000DD0                     u5820:
  5697  000DD0  0100               	movlb	0	; () banked
  5698  000DD2  B178               	btfsc	efgtoa@d& (0+255),0,b
  5699  000DD4  EFEE  F006         	goto	u5831
  5700  000DD8  EFF0  F006         	goto	u5830
  5701  000DDC                     u5831:
  5702  000DDC  EFF8  F006         	goto	l4896
  5703  000DE0                     u5830:
  5704  000DE0                     
  5705                           ; BSR set to: 0
  5706                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  5707  000DE0  0E00               	movlw	0
  5708  000DE2  6F86               	movwf	efgtoa@l& (0+255),b
  5709  000DE4  0E00               	movlw	0
  5710  000DE6  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5711  000DE8  0E00               	movlw	0
  5712  000DEA  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5713  000DEC  0E00               	movlw	0
  5714  000DEE  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5715  000DF0                     l4896:
  5716                           
  5717                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  5718  000DF0  C08C  F001         	movff	efgtoa@g,___fladd@b
  5719  000DF4  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  5720  000DF8  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  5721  000DFC  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  5722  000E00  C086  F005         	movff	efgtoa@l,___fladd@a
  5723  000E04  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  5724  000E08  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  5725  000E0C  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  5726  000E10  ECF4  F010         	call	___fladd	;wreg free
  5727  000E14  C001  F082         	movff	?___fladd,efgtoa@h
  5728  000E18  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  5729  000E1C  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  5730  000E20  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  5731  000E24                     
  5732                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  5733  000E24  C060  F094         	movff	efgtoa@ou,efgtoa@u
  5734  000E28  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  5735  000E2C  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  5736  000E30  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  5737  000E34                     
  5738                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5739  000E34  0E65               	movlw	101
  5740  000E36  0100               	movlb	0	; () banked
  5741  000E38  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  5742  000E3A  B4D8               	btfsc	status,2,c
  5743  000E3C  EF22  F007         	goto	u5841
  5744  000E40  EF24  F007         	goto	u5840
  5745  000E44                     u5841:
  5746  000E44  EF2A  F007         	goto	l4904
  5747  000E48                     u5840:
  5748  000E48                     
  5749                           ; BSR set to: 0
  5750  000E48  C090  F076         	movff	efgtoa@e,efgtoa@ne
  5751  000E4C  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  5752  000E50  EF2E  F007         	goto	l1314
  5753  000E54                     l4904:
  5754                           
  5755                           ; BSR set to: 0
  5756  000E54  0E00               	movlw	0
  5757  000E56  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  5758  000E58  0E00               	movlw	0
  5759  000E5A  6F76               	movwf	efgtoa@ne& (0+255),b
  5760  000E5C                     l1314:
  5761                           
  5762                           ; BSR set to: 0
  5763                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  5764  000E5C  0E00               	movlw	0
  5765  000E5E  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  5766  000E60  0E00               	movlw	0
  5767  000E62  6F72               	movwf	efgtoa@pp& (0+255),b
  5768                           
  5769                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  5770  000E64  0E00               	movlw	0
  5771  000E66  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  5772  000E68  0E00               	movlw	0
  5773  000E6A  6F70               	movwf	efgtoa@t& (0+255),b
  5774                           
  5775                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  5776  000E6C  0E00               	movlw	0
  5777  000E6E  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5778  000E70  0E00               	movlw	0
  5779  000E72  6F8A               	movwf	efgtoa@i& (0+255),b
  5780                           
  5781                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5782  000E74  EF29  F008         	goto	l4954
  5783  000E78                     l4906:
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  5787  000E78  C082  F001         	movff	efgtoa@h,___fldiv@b
  5788  000E7C  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5789  000E80  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5790  000E84  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5791  000E88  C094  F005         	movff	efgtoa@u,___fldiv@a
  5792  000E8C  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5793  000E90  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5794  000E94  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5795  000E98  EC69  F015         	call	___fldiv	;wreg free
  5796  000E9C  C001  F01A         	movff	?___fldiv,floorf@x
  5797  000EA0  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5798  000EA4  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5799  000EA8  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5800  000EAC  ECA8  F018         	call	_floorf	;wreg free
  5801  000EB0  C01A  F086         	movff	?_floorf,efgtoa@l
  5802  000EB4  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  5803  000EB8  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  5804  000EBC  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  5805                           
  5806                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  5807  000EC0  C086  F001         	movff	efgtoa@l,___fltol@f1
  5808  000EC4  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5809  000EC8  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5810  000ECC  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5811  000ED0  EC54  F01D         	call	___fltol	;wreg free
  5812  000ED4  C001  F078         	movff	?___fltol,efgtoa@d
  5813  000ED8  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5814  000EDC                     
  5815                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5816  000EDC  0100               	movlb	0	; () banked
  5817  000EDE  B9ED               	btfsc	_flags& (0+255),4,b
  5818  000EE0  EF74  F007         	goto	u5851
  5819  000EE4  EF76  F007         	goto	u5850
  5820  000EE8                     u5851:
  5821  000EE8  EF93  F007         	goto	l4918
  5822  000EEC                     u5850:
  5823  000EEC                     
  5824                           ; BSR set to: 0
  5825  000EEC  5178               	movf	efgtoa@d& (0+255),w,b
  5826  000EEE  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5827  000EF0  A4D8               	btfss	status,2,c
  5828  000EF2  EF7D  F007         	goto	u5861
  5829  000EF6  EF7F  F007         	goto	u5860
  5830  000EFA                     u5861:
  5831  000EFA  EF93  F007         	goto	l4918
  5832  000EFE                     u5860:
  5833  000EFE                     
  5834                           ; BSR set to: 0
  5835  000EFE  0E67               	movlw	103
  5836  000F00  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5837  000F02  A4D8               	btfss	status,2,c
  5838  000F04  EF86  F007         	goto	u5871
  5839  000F08  EF88  F007         	goto	u5870
  5840  000F0C                     u5871:
  5841  000F0C  EF93  F007         	goto	l4918
  5842  000F10                     u5870:
  5843  000F10                     
  5844                           ; BSR set to: 0
  5845  000F10  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5846  000F12  EF8F  F007         	goto	u5880
  5847  000F16  EF8D  F007         	goto	u5881
  5848  000F1A                     u5881:
  5849  000F1A  EF93  F007         	goto	l4918
  5850  000F1E                     u5880:
  5851  000F1E                     
  5852                           ; BSR set to: 0
  5853                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  5854  000F1E  4B70               	infsnz	efgtoa@t& (0+255),f,b
  5855  000F20  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  5856                           
  5857                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  5858  000F22  EFDD  F007         	goto	l4946
  5859  000F26                     l4918:
  5860                           
  5861                           ; BSR set to: 0
  5862                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  5863  000F26  5172               	movf	efgtoa@pp& (0+255),w,b
  5864  000F28  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5865  000F2A  A4D8               	btfss	status,2,c
  5866  000F2C  EF9A  F007         	goto	u5891
  5867  000F30  EF9C  F007         	goto	u5890
  5868  000F34                     u5891:
  5869  000F34  EFC6  F007         	goto	l4938
  5870  000F38                     u5890:
  5871  000F38                     
  5872                           ; BSR set to: 0
  5873  000F38  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5874  000F3A  EFA3  F007         	goto	u5900
  5875  000F3E  EFA1  F007         	goto	u5901
  5876  000F42                     u5901:
  5877  000F42  EFC6  F007         	goto	l4938
  5878  000F46                     u5900:
  5879  000F46                     
  5880                           ; BSR set to: 0
  5881                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  5882  000F46  0EAB               	movlw	low _dbuf
  5883  000F48  2592               	addwf	efgtoa@n& (0+255),w,b
  5884  000F4A  6ED9               	movwf	fsr2l,c
  5885  000F4C  0E01               	movlw	high _dbuf
  5886  000F4E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5887  000F50  6EDA               	movwf	fsr2h,c
  5888  000F52  0E2E               	movlw	46
  5889  000F54  6EDF               	movwf	indf2,c
  5890  000F56                     
  5891                           ; BSR set to: 0
  5892  000F56  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5893  000F58  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5894  000F5A                     
  5895                           ; BSR set to: 0
  5896                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  5897  000F5A  077F               	decf	efgtoa@w& (0+255),f,b
  5898  000F5C  A0D8               	btfss	status,0,c
  5899  000F5E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5900  000F60                     
  5901                           ; BSR set to: 0
  5902                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  5903  000F60  0E00               	movlw	0
  5904  000F62  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  5905  000F64  0E01               	movlw	1
  5906  000F66  6F72               	movwf	efgtoa@pp& (0+255),b
  5907  000F68  EFC6  F007         	goto	l4938
  5908  000F6C                     l4930:
  5909                           
  5910                           ; BSR set to: 0
  5911                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  5912  000F6C  0EAB               	movlw	low _dbuf
  5913  000F6E  2592               	addwf	efgtoa@n& (0+255),w,b
  5914  000F70  6ED9               	movwf	fsr2l,c
  5915  000F72  0E01               	movlw	high _dbuf
  5916  000F74  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5917  000F76  6EDA               	movwf	fsr2h,c
  5918  000F78  0E30               	movlw	48
  5919  000F7A  6EDF               	movwf	indf2,c
  5920  000F7C                     
  5921                           ; BSR set to: 0
  5922  000F7C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5923  000F7E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5924  000F80                     
  5925                           ; BSR set to: 0
  5926                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  5927  000F80  077F               	decf	efgtoa@w& (0+255),f,b
  5928  000F82  A0D8               	btfss	status,0,c
  5929  000F84  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5930  000F86                     
  5931                           ; BSR set to: 0
  5932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  5933  000F86  0770               	decf	efgtoa@t& (0+255),f,b
  5934  000F88  A0D8               	btfss	status,0,c
  5935  000F8A  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  5936  000F8C                     l4938:
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  5940  000F8C  5170               	movf	efgtoa@t& (0+255),w,b
  5941  000F8E  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5942  000F90  A4D8               	btfss	status,2,c
  5943  000F92  EFCD  F007         	goto	u5911
  5944  000F96  EFCF  F007         	goto	u5910
  5945  000F9A                     u5911:
  5946  000F9A  EFB6  F007         	goto	l4930
  5947  000F9E                     u5910:
  5948  000F9E                     
  5949                           ; BSR set to: 0
  5950                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  5951  000F9E  0EAB               	movlw	low _dbuf
  5952  000FA0  2592               	addwf	efgtoa@n& (0+255),w,b
  5953  000FA2  6ED9               	movwf	fsr2l,c
  5954  000FA4  0E01               	movlw	high _dbuf
  5955  000FA6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5956  000FA8  6EDA               	movwf	fsr2h,c
  5957  000FAA  5178               	movf	efgtoa@d& (0+255),w,b
  5958  000FAC  0F30               	addlw	48
  5959  000FAE  6EDF               	movwf	indf2,c
  5960  000FB0                     
  5961                           ; BSR set to: 0
  5962  000FB0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5963  000FB2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5964  000FB4                     
  5965                           ; BSR set to: 0
  5966                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  5967  000FB4  077F               	decf	efgtoa@w& (0+255),f,b
  5968  000FB6  A0D8               	btfss	status,0,c
  5969  000FB8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5970  000FBA                     l4946:
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  5974  000FBA  C082  F01A         	movff	efgtoa@h,___flsub@b
  5975  000FBE  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  5976  000FC2  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  5977  000FC6  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  5978  000FCA  C094  F005         	movff	efgtoa@u,___flmul@a
  5979  000FCE  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  5980  000FD2  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  5981  000FD6  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  5982  000FDA  C086  F001         	movff	efgtoa@l,___flmul@b
  5983  000FDE  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  5984  000FE2  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  5985  000FE6  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  5986  000FEA  EC54  F013         	call	___flmul	;wreg free
  5987  000FEE  C001  F01E         	movff	?___flmul,___flsub@a
  5988  000FF2  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  5989  000FF6  C003  F020         	movff	?___flmul+2,___flsub@a+2
  5990  000FFA  C004  F021         	movff	?___flmul+3,___flsub@a+3
  5991  000FFE  ECA1  F023         	call	___flsub	;wreg free
  5992  001002  C01A  F082         	movff	?___flsub,efgtoa@h
  5993  001006  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  5994  00100A  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  5995  00100E  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  5996  001012                     
  5997                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  5998  001012  C094  F001         	movff	efgtoa@u,___fldiv@b
  5999  001016  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  6000  00101A  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  6001  00101E  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  6002  001022  0E00               	movlw	0
  6003  001024  6E05               	movwf	___fldiv@a^0,c
  6004  001026  0E00               	movlw	0
  6005  001028  6E06               	movwf	(___fldiv@a+1)^0,c
  6006  00102A  0E20               	movlw	32
  6007  00102C  6E07               	movwf	(___fldiv@a+2)^0,c
  6008  00102E  0E41               	movlw	65
  6009  001030  6E08               	movwf	(___fldiv@a+3)^0,c
  6010  001032  EC69  F015         	call	___fldiv	;wreg free
  6011  001036  C001  F094         	movff	?___fldiv,efgtoa@u
  6012  00103A  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  6013  00103E  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  6014  001042  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  6015  001046                     
  6016                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  6017  001046  0100               	movlb	0	; () banked
  6018  001048  0776               	decf	efgtoa@ne& (0+255),f,b
  6019  00104A  A0D8               	btfss	status,0,c
  6020  00104C  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  6021  00104E                     
  6022                           ; BSR set to: 0
  6023                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  6024  00104E  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  6025  001050  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  6026  001052                     l4954:
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6030  001052  5174               	movf	efgtoa@m& (0+255),w,b
  6031  001054  5D8A               	subwf	efgtoa@i& (0+255),w,b
  6032  001056  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  6033  001058  0A80               	xorlw	128
  6034  00105A  6E35               	movwf	??_efgtoa^0,c
  6035  00105C  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  6036  00105E  0A80               	xorlw	128
  6037  001060  5835               	subwfb	??_efgtoa^0,w,c
  6038  001062  B0D8               	btfsc	status,0,c
  6039  001064  EF36  F008         	goto	u5921
  6040  001068  EF38  F008         	goto	u5920
  6041  00106C                     u5921:
  6042  00106C  EF46  F008         	goto	l4958
  6043  001070                     u5920:
  6044  001070                     
  6045                           ; BSR set to: 0
  6046  001070  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6047  001072  EF44  F008         	goto	u5931
  6048  001076  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  6049  001078  E109               	bnz	u5930
  6050  00107A  0E4B               	movlw	75
  6051  00107C  5D92               	subwf	efgtoa@n& (0+255),w,b
  6052  00107E  A0D8               	btfss	status,0,c
  6053  001080  EF44  F008         	goto	u5931
  6054  001084  EF46  F008         	goto	u5930
  6055  001088                     u5931:
  6056  001088  EF3C  F007         	goto	l4906
  6057  00108C                     u5930:
  6058  00108C                     l4958:
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  6062  00108C  5172               	movf	efgtoa@pp& (0+255),w,b
  6063  00108E  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6064  001090  A4D8               	btfss	status,2,c
  6065  001092  EF4D  F008         	goto	u5941
  6066  001096  EF4F  F008         	goto	u5940
  6067  00109A                     u5941:
  6068  00109A  EF60  F008         	goto	l4966
  6069  00109E                     u5940:
  6070  00109E                     
  6071                           ; BSR set to: 0
  6072  00109E  A9ED               	btfss	_flags& (0+255),4,b
  6073  0010A0  EF54  F008         	goto	u5951
  6074  0010A4  EF56  F008         	goto	u5950
  6075  0010A8                     u5951:
  6076  0010A8  EF60  F008         	goto	l4966
  6077  0010AC                     u5950:
  6078  0010AC                     
  6079                           ; BSR set to: 0
  6080                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  6081  0010AC  0EAB               	movlw	low _dbuf
  6082  0010AE  2592               	addwf	efgtoa@n& (0+255),w,b
  6083  0010B0  6ED9               	movwf	fsr2l,c
  6084  0010B2  0E01               	movlw	high _dbuf
  6085  0010B4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6086  0010B6  6EDA               	movwf	fsr2h,c
  6087  0010B8  0E2E               	movlw	46
  6088  0010BA  6EDF               	movwf	indf2,c
  6089  0010BC                     
  6090                           ; BSR set to: 0
  6091  0010BC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6092  0010BE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6093  0010C0                     l4966:
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  6097  0010C0  0EAB               	movlw	low _dbuf
  6098  0010C2  2592               	addwf	efgtoa@n& (0+255),w,b
  6099  0010C4  6ED9               	movwf	fsr2l,c
  6100  0010C6  0E01               	movlw	high _dbuf
  6101  0010C8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6102  0010CA  6EDA               	movwf	fsr2h,c
  6103  0010CC  0E00               	movlw	0
  6104  0010CE  6EDF               	movwf	indf2,c
  6105  0010D0                     
  6106                           ; BSR set to: 0
  6107                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  6108  0010D0  0E65               	movlw	101
  6109  0010D2  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  6110  0010D4  A4D8               	btfss	status,2,c
  6111  0010D6  EF6F  F008         	goto	u5961
  6112  0010DA  EF71  F008         	goto	u5960
  6113  0010DE                     u5961:
  6114  0010DE  EF1F  F004         	goto	l4778
  6115  0010E2                     u5960:
  6116  0010E2                     
  6117                           ; BSR set to: 0
  6118                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  6119  0010E2  0E00               	movlw	0
  6120  0010E4  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  6121  0010E6  0E4F               	movlw	79
  6122  0010E8  6F8A               	movwf	efgtoa@i& (0+255),b
  6123  0010EA                     
  6124                           ; BSR set to: 0
  6125                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  6126  0010EA  0EAB               	movlw	low _dbuf
  6127  0010EC  258A               	addwf	efgtoa@i& (0+255),w,b
  6128  0010EE  6ED9               	movwf	fsr2l,c
  6129  0010F0  0E01               	movlw	high _dbuf
  6130  0010F2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6131  0010F4  6EDA               	movwf	fsr2h,c
  6132  0010F6  0E00               	movlw	0
  6133  0010F8  6EDF               	movwf	indf2,c
  6134  0010FA                     
  6135                           ; BSR set to: 0
  6136                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  6137  0010FA  0E00               	movlw	0
  6138  0010FC  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  6139  0010FE  0E00               	movlw	0
  6140  001100  6F7A               	movwf	efgtoa@sign& (0+255),b
  6141  001102                     
  6142                           ; BSR set to: 0
  6143                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  6144  001102  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6145  001104  EF88  F008         	goto	u5970
  6146  001108  EF86  F008         	goto	u5971
  6147  00110C                     u5971:
  6148  00110C  EF90  F008         	goto	l4982
  6149  001110                     u5970:
  6150  001110                     
  6151                           ; BSR set to: 0
  6152                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  6153  001110  0E00               	movlw	0
  6154  001112  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  6155  001114  0E01               	movlw	1
  6156  001116  6F7A               	movwf	efgtoa@sign& (0+255),b
  6157  001118                     
  6158                           ; BSR set to: 0
  6159                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  6160  001118  6D90               	negf	efgtoa@e& (0+255),b
  6161  00111A  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  6162  00111C  B0D8               	btfsc	status,0,c
  6163  00111E  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  6164  001120                     l4982:
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  6168  001120  0E00               	movlw	0
  6169  001122  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  6170  001124  0E02               	movlw	2
  6171  001126  6F7C               	movwf	efgtoa@p& (0+255),b
  6172                           
  6173                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  6174  001128  EFC1  F008         	goto	l4994
  6175  00112C                     l4984:
  6176                           
  6177                           ; BSR set to: 0
  6178                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  6179  00112C  078A               	decf	efgtoa@i& (0+255),f,b
  6180  00112E  A0D8               	btfss	status,0,c
  6181  001130  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6182  001132                     
  6183                           ; BSR set to: 0
  6184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  6185  001132  0EAB               	movlw	low _dbuf
  6186  001134  258A               	addwf	efgtoa@i& (0+255),w,b
  6187  001136  6ED9               	movwf	fsr2l,c
  6188  001138  0E01               	movlw	high _dbuf
  6189  00113A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6190  00113C  6EDA               	movwf	fsr2h,c
  6191  00113E  C090  F001         	movff	efgtoa@e,___awmod@dividend
  6192  001142  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  6193  001146  0E00               	movlw	0
  6194  001148  6E04               	movwf	(___awmod@divisor+1)^0,c
  6195  00114A  0E0A               	movlw	10
  6196  00114C  6E03               	movwf	___awmod@divisor^0,c
  6197  00114E  ECD5  F020         	call	___awmod	;wreg free
  6198  001152  5001               	movf	?___awmod^0,w,c
  6199  001154  0F30               	addlw	48
  6200  001156  6EDF               	movwf	indf2,c
  6201  001158                     
  6202                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  6203  001158  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  6204  00115C  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  6205  001160  0E00               	movlw	0
  6206  001162  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6207  001164  0E0A               	movlw	10
  6208  001166  6E03               	movwf	___awdiv@divisor^0,c
  6209  001168  EC73  F020         	call	___awdiv	;wreg free
  6210  00116C  C001  F090         	movff	?___awdiv,efgtoa@e
  6211  001170  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  6212  001174                     
  6213                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  6214  001174  0100               	movlb	0	; () banked
  6215  001176  077C               	decf	efgtoa@p& (0+255),f,b
  6216  001178  A0D8               	btfss	status,0,c
  6217  00117A  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  6218  00117C                     
  6219                           ; BSR set to: 0
  6220                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  6221  00117C  077F               	decf	efgtoa@w& (0+255),f,b
  6222  00117E  A0D8               	btfss	status,0,c
  6223  001180  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  6224  001182                     l4994:
  6225                           
  6226                           ; BSR set to: 0
  6227                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  6228  001182  5190               	movf	efgtoa@e& (0+255),w,b
  6229  001184  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6230  001186  A4D8               	btfss	status,2,c
  6231  001188  EFC8  F008         	goto	u5981
  6232  00118C  EFCA  F008         	goto	u5980
  6233  001190                     u5981:
  6234  001190  EF96  F008         	goto	l4984
  6235  001194                     u5980:
  6236  001194                     
  6237                           ; BSR set to: 0
  6238  001194  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6239  001196  EFD7  F008         	goto	u5990
  6240  00119A  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  6241  00119C  E106               	bnz	u5991
  6242  00119E  057C               	decf	efgtoa@p& (0+255),w,b
  6243  0011A0  B0D8               	btfsc	status,0,c
  6244  0011A2  EFD5  F008         	goto	u5991
  6245  0011A6  EFD7  F008         	goto	u5990
  6246  0011AA                     u5991:
  6247  0011AA  EF96  F008         	goto	l4984
  6248  0011AE                     u5990:
  6249  0011AE                     
  6250                           ; BSR set to: 0
  6251                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  6252  0011AE  078A               	decf	efgtoa@i& (0+255),f,b
  6253  0011B0  A0D8               	btfss	status,0,c
  6254  0011B2  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6255  0011B4                     
  6256                           ; BSR set to: 0
  6257                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  6258  0011B4  517A               	movf	efgtoa@sign& (0+255),w,b
  6259  0011B6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6260  0011B8  A4D8               	btfss	status,2,c
  6261  0011BA  EFE1  F008         	goto	u6001
  6262  0011BE  EFE3  F008         	goto	u6000
  6263  0011C2                     u6001:
  6264  0011C2  EFE9  F008         	goto	l5004
  6265  0011C6                     u6000:
  6266  0011C6                     
  6267                           ; BSR set to: 0
  6268  0011C6  0E00               	movlw	0
  6269  0011C8  6F6B               	movwf	(_efgtoa$2878+1)& (0+255),b
  6270  0011CA  0E2B               	movlw	43
  6271  0011CC  6F6A               	movwf	_efgtoa$2878& (0+255),b
  6272  0011CE  EFED  F008         	goto	l5006
  6273  0011D2                     l5004:
  6274                           
  6275                           ; BSR set to: 0
  6276  0011D2  0E00               	movlw	0
  6277  0011D4  6F6B               	movwf	(_efgtoa$2878+1)& (0+255),b
  6278  0011D6  0E2D               	movlw	45
  6279  0011D8  6F6A               	movwf	_efgtoa$2878& (0+255),b
  6280  0011DA                     l5006:
  6281                           
  6282                           ; BSR set to: 0
  6283  0011DA  0EAB               	movlw	low _dbuf
  6284  0011DC  258A               	addwf	efgtoa@i& (0+255),w,b
  6285  0011DE  6ED9               	movwf	fsr2l,c
  6286  0011E0  0E01               	movlw	high _dbuf
  6287  0011E2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6288  0011E4  6EDA               	movwf	fsr2h,c
  6289  0011E6  C06A  FFDF         	movff	_efgtoa$2878,indf2
  6290  0011EA                     
  6291                           ; BSR set to: 0
  6292                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  6293  0011EA  077F               	decf	efgtoa@w& (0+255),f,b
  6294  0011EC  A0D8               	btfss	status,0,c
  6295  0011EE  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  6296  0011F0                     
  6297                           ; BSR set to: 0
  6298                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6299  0011F0  078A               	decf	efgtoa@i& (0+255),f,b
  6300  0011F2  A0D8               	btfss	status,0,c
  6301  0011F4  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6302  0011F6                     
  6303                           ; BSR set to: 0
  6304  0011F6  0EBF               	movlw	191
  6305  0011F8  6E35               	movwf	??_efgtoa^0,c
  6306  0011FA  0EFF               	movlw	255
  6307  0011FC  6E36               	movwf	(??_efgtoa+1)^0,c
  6308  0011FE  5034               	movf	efgtoa@c^0,w,c
  6309  001200  6E37               	movwf	(??_efgtoa+2)^0,c
  6310  001202  6A38               	clrf	(??_efgtoa+3)^0,c
  6311  001204  5035               	movf	??_efgtoa^0,w,c
  6312  001206  2637               	addwf	(??_efgtoa+2)^0,f,c
  6313  001208  5036               	movf	(??_efgtoa+1)^0,w,c
  6314  00120A  2238               	addwfc	(??_efgtoa+3)^0,f,c
  6315  00120C  5038               	movf	(??_efgtoa+3)^0,w,c
  6316  00120E  E10A               	bnz	u6010
  6317  001210  0E1A               	movlw	26
  6318  001212  5C37               	subwf	(??_efgtoa+2)^0,w,c
  6319  001214  A0D8               	btfss	status,0,c
  6320  001216  EF0F  F009         	goto	u6011
  6321  00121A  EF12  F009         	goto	u6010
  6322  00121E                     u6011:
  6323  00121E  0E01               	movlw	1
  6324  001220  EF13  F009         	goto	u6020
  6325  001224                     u6010:
  6326  001224  0E00               	movlw	0
  6327  001226                     u6020:
  6328  001226  6F6E               	movwf	_efgtoa$2880& (0+255),b
  6329  001228  6B6F               	clrf	(_efgtoa$2880+1)& (0+255),b
  6330  00122A                     
  6331                           ; BSR set to: 0
  6332  00122A  516E               	movf	_efgtoa$2880& (0+255),w,b
  6333  00122C  116F               	iorwf	(_efgtoa$2880+1)& (0+255),w,b
  6334  00122E  A4D8               	btfss	status,2,c
  6335  001230  EF1C  F009         	goto	u6031
  6336  001234  EF1E  F009         	goto	u6030
  6337  001238                     u6031:
  6338  001238  EF24  F009         	goto	l5020
  6339  00123C                     u6030:
  6340  00123C                     
  6341                           ; BSR set to: 0
  6342  00123C  0E00               	movlw	0
  6343  00123E  6F6D               	movwf	(_efgtoa$2879+1)& (0+255),b
  6344  001240  0E65               	movlw	101
  6345  001242  6F6C               	movwf	_efgtoa$2879& (0+255),b
  6346  001244  EF28  F009         	goto	l5022
  6347  001248                     l5020:
  6348                           
  6349                           ; BSR set to: 0
  6350  001248  0E00               	movlw	0
  6351  00124A  6F6D               	movwf	(_efgtoa$2879+1)& (0+255),b
  6352  00124C  0E45               	movlw	69
  6353  00124E  6F6C               	movwf	_efgtoa$2879& (0+255),b
  6354  001250                     l5022:
  6355                           
  6356                           ; BSR set to: 0
  6357  001250  0EAB               	movlw	low _dbuf
  6358  001252  258A               	addwf	efgtoa@i& (0+255),w,b
  6359  001254  6ED9               	movwf	fsr2l,c
  6360  001256  0E01               	movlw	high _dbuf
  6361  001258  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6362  00125A  6EDA               	movwf	fsr2h,c
  6363  00125C  C06C  FFDF         	movff	_efgtoa$2879,indf2
  6364  001260                     
  6365                           ; BSR set to: 0
  6366                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  6367  001260  077F               	decf	efgtoa@w& (0+255),f,b
  6368  001262  A0D8               	btfss	status,0,c
  6369  001264  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  6370  001266                     
  6371                           ; BSR set to: 0
  6372                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6373  001266  0EAB               	movlw	low _dbuf
  6374  001268  2592               	addwf	efgtoa@n& (0+255),w,b
  6375  00126A  6E01               	movwf	strcpy@dest^0,c
  6376  00126C  0E01               	movlw	high _dbuf
  6377  00126E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6378  001270  6E02               	movwf	(strcpy@dest+1)^0,c
  6379  001272  0EAB               	movlw	low _dbuf
  6380  001274  258A               	addwf	efgtoa@i& (0+255),w,b
  6381  001276  6E03               	movwf	strcpy@src^0,c
  6382  001278  0E01               	movlw	high _dbuf
  6383  00127A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6384  00127C  6E04               	movwf	(strcpy@src+1)^0,c
  6385  00127E  ECD0  F022         	call	_strcpy	;wreg free
  6386  001282  EF1F  F004         	goto	l4778
  6387  001286                     l1270:
  6388  001286  0012               	return		;funcret
  6389  001288                     __end_of_efgtoa:
  6390                           	callstack 0
  6391                           
  6392 ;; *************** function _tolower *****************
  6393 ;; Defined at:
  6394 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;  c               2    6[COMRAM] int 
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;		None
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  2    6[COMRAM] int 
  6401 ;; Registers used:
  6402 ;;		wreg, status,2, status,0
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6408 ;;      Params:         2       0       0       0       0       0       0
  6409 ;;      Locals:         2       0       0       0       0       0       0
  6410 ;;      Temps:          4       0       0       0       0       0       0
  6411 ;;      Totals:         8       0       0       0       0       0       0
  6412 ;;Total ram usage:        8 bytes
  6413 ;; Hardware stack levels used:    1
  6414 ;; Hardware stack levels required when called:    2
  6415 ;; This function calls:
  6416 ;;		_isupper
  6417 ;; This function is called by:
  6418 ;;		_efgtoa
  6419 ;;		_vfpfcnvrt
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           
  6423                           	psect	text12
  6424  004540                     __ptext12:
  6425                           	callstack 0
  6426  004540                     _tolower:
  6427                           	callstack 23
  6428  004540  0EBF               	movlw	191
  6429  004542  6E09               	movwf	??_tolower^0,c
  6430  004544  0EFF               	movlw	255
  6431  004546  6E0A               	movwf	(??_tolower+1)^0,c
  6432  004548  C007  F00B         	movff	tolower@c,??_tolower+2
  6433  00454C  C008  F00C         	movff	tolower@c+1,??_tolower+3
  6434  004550  5009               	movf	??_tolower^0,w,c
  6435  004552  260B               	addwf	(??_tolower+2)^0,f,c
  6436  004554  500A               	movf	(??_tolower+1)^0,w,c
  6437  004556  220C               	addwfc	(??_tolower+3)^0,f,c
  6438  004558  500C               	movf	(??_tolower+3)^0,w,c
  6439  00455A  E10A               	bnz	u5200
  6440  00455C  0E1A               	movlw	26
  6441  00455E  5C0B               	subwf	(??_tolower+2)^0,w,c
  6442  004560  A0D8               	btfss	status,0,c
  6443  004562  EFB5  F022         	goto	u5201
  6444  004566  EFB8  F022         	goto	u5200
  6445  00456A                     u5201:
  6446  00456A  0E01               	movlw	1
  6447  00456C  EFB9  F022         	goto	u5210
  6448  004570                     u5200:
  6449  004570  0E00               	movlw	0
  6450  004572                     u5210:
  6451  004572  6E0D               	movwf	_tolower$3031^0,c
  6452  004574  6A0E               	clrf	(_tolower$3031+1)^0,c
  6453  004576  500D               	movf	_tolower$3031^0,w,c
  6454  004578  100E               	iorwf	(_tolower$3031+1)^0,w,c
  6455  00457A  B4D8               	btfsc	status,2,c
  6456  00457C  EFC2  F022         	goto	u5221
  6457  004580  EFC4  F022         	goto	u5220
  6458  004584                     u5221:
  6459  004584  EFCB  F022         	goto	l1518
  6460  004588                     u5220:
  6461  004588  0E20               	movlw	32
  6462  00458A  1007               	iorwf	tolower@c^0,w,c
  6463  00458C  6E07               	movwf	?_tolower^0,c
  6464  00458E  5008               	movf	(tolower@c+1)^0,w,c
  6465  004590  6E08               	movwf	(?_tolower+1)^0,c
  6466  004592  EFCF  F022         	goto	l1523
  6467  004596                     l1518:
  6468  004596  C007  F007         	movff	tolower@c,?_tolower
  6469  00459A  C008  F008         	movff	tolower@c+1,?_tolower+1
  6470  00459E                     l1523:
  6471  00459E  0012               	return		;funcret
  6472  0045A0                     __end_of_tolower:
  6473                           	callstack 0
  6474                           
  6475 ;; *************** function _isupper *****************
  6476 ;; Defined at:
  6477 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;  c               2    0[COMRAM] int 
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;		None
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  2    0[COMRAM] int 
  6484 ;; Registers used:
  6485 ;;		wreg, status,2, status,0
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6491 ;;      Params:         2       0       0       0       0       0       0
  6492 ;;      Locals:         0       0       0       0       0       0       0
  6493 ;;      Temps:          4       0       0       0       0       0       0
  6494 ;;      Totals:         6       0       0       0       0       0       0
  6495 ;;Total ram usage:        6 bytes
  6496 ;; Hardware stack levels used:    1
  6497 ;; Hardware stack levels required when called:    1
  6498 ;; This function calls:
  6499 ;;		Nothing
  6500 ;; This function is called by:
  6501 ;;		_efgtoa
  6502 ;;		_vfpfcnvrt
  6503 ;;		_tolower
  6504 ;; This function uses a non-reentrant model
  6505 ;;
  6506                           
  6507                           	psect	text13
  6508  00480C                     __ptext13:
  6509                           	callstack 0
  6510  00480C                     _isupper:
  6511                           	callstack 23
  6512  00480C  0EBF               	movlw	191
  6513  00480E  6E03               	movwf	??_isupper^0,c
  6514  004810  0EFF               	movlw	255
  6515  004812  6E04               	movwf	(??_isupper+1)^0,c
  6516  004814  C001  F005         	movff	isupper@c,??_isupper+2
  6517  004818  C002  F006         	movff	isupper@c+1,??_isupper+3
  6518  00481C  5003               	movf	??_isupper^0,w,c
  6519  00481E  2605               	addwf	(??_isupper+2)^0,f,c
  6520  004820  5004               	movf	(??_isupper+1)^0,w,c
  6521  004822  2206               	addwfc	(??_isupper+3)^0,f,c
  6522  004824  5006               	movf	(??_isupper+3)^0,w,c
  6523  004826  E10A               	bnz	u4210
  6524  004828  0E1A               	movlw	26
  6525  00482A  5C05               	subwf	(??_isupper+2)^0,w,c
  6526  00482C  A0D8               	btfss	status,0,c
  6527  00482E  EF1B  F024         	goto	u4211
  6528  004832  EF1E  F024         	goto	u4210
  6529  004836                     u4211:
  6530  004836  0E01               	movlw	1
  6531  004838  EF1F  F024         	goto	u4220
  6532  00483C                     u4210:
  6533  00483C  0E00               	movlw	0
  6534  00483E                     u4220:
  6535  00483E  6E01               	movwf	?_isupper^0,c
  6536  004840  6A02               	clrf	(?_isupper+1)^0,c
  6537  004842  0012               	return		;funcret
  6538  004844                     __end_of_isupper:
  6539                           	callstack 0
  6540                           
  6541 ;; *************** function _strcpy *****************
  6542 ;; Defined at:
  6543 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  6544 ;; Parameters:    Size  Location     Type
  6545 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6546 ;;		 -> dbuf(80), 
  6547 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6548 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  6549 ;;		 -> dbuf(80), 
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;  d               2    8[COMRAM] PTR unsigned char 
  6552 ;;		 -> dbuf(80), 
  6553 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6554 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  6555 ;;		 -> dbuf(80), 
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  2    0[COMRAM] PTR unsigned char 
  6558 ;; Registers used:
  6559 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6565 ;;      Params:         4       0       0       0       0       0       0
  6566 ;;      Locals:         4       0       0       0       0       0       0
  6567 ;;      Temps:          2       0       0       0       0       0       0
  6568 ;;      Totals:        10       0       0       0       0       0       0
  6569 ;;Total ram usage:       10 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; Hardware stack levels required when called:    1
  6572 ;; This function calls:
  6573 ;;		Nothing
  6574 ;; This function is called by:
  6575 ;;		_efgtoa
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           	psect	text14
  6580  0045A0                     __ptext14:
  6581                           	callstack 0
  6582  0045A0                     _strcpy:
  6583                           	callstack 23
  6584  0045A0  C003  F007         	movff	strcpy@src,strcpy@s
  6585  0045A4  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  6586  0045A8  C001  F009         	movff	strcpy@dest,strcpy@d
  6587  0045AC  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  6588  0045B0                     l4616:
  6589  0045B0  5007               	movf	strcpy@s^0,w,c
  6590  0045B2  6E05               	movwf	??_strcpy^0,c
  6591  0045B4  5008               	movf	(strcpy@s+1)^0,w,c
  6592  0045B6  6E06               	movwf	(??_strcpy+1)^0,c
  6593  0045B8  4A07               	infsnz	strcpy@s^0,f,c
  6594  0045BA  2A08               	incf	(strcpy@s+1)^0,f,c
  6595  0045BC  C005  FFF6         	movff	??_strcpy,tblptrl
  6596  0045C0  C006  FFF7         	movff	??_strcpy+1,tblptrh
  6597  0045C4  6AF8               	clrf	tblptru,c
  6598  0045C6  C009  FFD9         	movff	strcpy@d,fsr2l
  6599  0045CA  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  6600  0045CE  4A09               	infsnz	strcpy@d^0,f,c
  6601  0045D0  2A0A               	incf	(strcpy@d+1)^0,f,c
  6602  0045D2  0E05               	movlw	(high __ramtop+-1)
  6603  0045D4  64F7               	cpfsgt	tblptrh,c
  6604  0045D6  D003               	bra	u5187
  6605  0045D8  0008               	tblrd		*
  6606  0045DA  50F5               	movf	tablat,w,c
  6607  0045DC  D005               	bra	u5180
  6608  0045DE                     u5187:
  6609  0045DE  CFF6 FFE9          	movff	tblptrl,fsr0l
  6610  0045E2  CFF7 FFEA          	movff	tblptrh,fsr0h
  6611  0045E6  50EF               	movf	indf0,w,c
  6612  0045E8                     u5180:
  6613  0045E8  6EDF               	movwf	indf2,c
  6614  0045EA  50DF               	movf	indf2,w,c
  6615  0045EC  A4D8               	btfss	status,2,c
  6616  0045EE  EFFB  F022         	goto	u5191
  6617  0045F2  EFFD  F022         	goto	u5190
  6618  0045F6                     u5191:
  6619  0045F6  EFD8  F022         	goto	l4616
  6620  0045FA                     u5190:
  6621  0045FA  0012               	return		;funcret
  6622  0045FC                     __end_of_strcpy:
  6623                           	callstack 0
  6624                           
  6625 ;; *************** function _floorf *****************
  6626 ;; Defined at:
  6627 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;  x               4   25[COMRAM] float 
  6630 ;; Auto vars:     Size  Location     Type
  6631 ;;  u               4   41[COMRAM] struct .
  6632 ;;  m               4   35[COMRAM] unsigned long 
  6633 ;;  e               2   39[COMRAM] int 
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  4   25[COMRAM] float 
  6636 ;; Registers used:
  6637 ;;		wreg, status,2, status,0
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6643 ;;      Params:         4       0       0       0       0       0       0
  6644 ;;      Locals:        10       0       0       0       0       0       0
  6645 ;;      Temps:          6       0       0       0       0       0       0
  6646 ;;      Totals:        20       0       0       0       0       0       0
  6647 ;;Total ram usage:       20 bytes
  6648 ;; Hardware stack levels used:    1
  6649 ;; Hardware stack levels required when called:    1
  6650 ;; This function calls:
  6651 ;;		Nothing
  6652 ;; This function is called by:
  6653 ;;		_efgtoa
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text15
  6658  003150                     __ptext15:
  6659                           	callstack 0
  6660  003150                     _floorf:
  6661                           	callstack 23
  6662  003150  C0DC  F02A         	movff	floorf@F524,floorf@u
  6663  003154  C0DD  F02B         	movff	floorf@F524+1,floorf@u+1
  6664  003158  C0DE  F02C         	movff	floorf@F524+2,floorf@u+2
  6665  00315C  C0DF  F02D         	movff	floorf@F524+3,floorf@u+3
  6666  003160  C01A  F02A         	movff	floorf@x,floorf@u
  6667  003164  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  6668  003168  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  6669  00316C  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  6670  003170  0E81               	movlw	129
  6671  003172  6E1E               	movwf	??_floorf^0,c
  6672  003174  0EFF               	movlw	255
  6673  003176  6E1F               	movwf	(??_floorf+1)^0,c
  6674  003178  C02A  F020         	movff	floorf@u,??_floorf+2
  6675  00317C  C02B  F021         	movff	floorf@u+1,??_floorf+3
  6676  003180  C02C  F022         	movff	floorf@u+2,??_floorf+4
  6677  003184  C02D  F023         	movff	floorf@u+3,??_floorf+5
  6678  003188  0E18               	movlw	24
  6679  00318A  EFCC  F018         	goto	u5230
  6680  00318E                     u5235:
  6681  00318E  90D8               	bcf	status,0,c
  6682  003190  3223               	rrcf	(??_floorf+5)^0,f,c
  6683  003192  3222               	rrcf	(??_floorf+4)^0,f,c
  6684  003194  3221               	rrcf	(??_floorf+3)^0,f,c
  6685  003196  3220               	rrcf	(??_floorf+2)^0,f,c
  6686  003198                     u5230:
  6687  003198  2EE8               	decfsz	wreg,f,c
  6688  00319A  EFC7  F018         	goto	u5235
  6689  00319E  5020               	movf	(??_floorf+2)^0,w,c
  6690  0031A0  241E               	addwf	??_floorf^0,w,c
  6691  0031A2  6E28               	movwf	floorf@e^0,c
  6692  0031A4  0E00               	movlw	0
  6693  0031A6  201F               	addwfc	(??_floorf+1)^0,w,c
  6694  0031A8  6E29               	movwf	(floorf@e+1)^0,c
  6695  0031AA  BE29               	btfsc	(floorf@e+1)^0,7,c
  6696  0031AC  EFE1  F018         	goto	u5241
  6697  0031B0  5029               	movf	(floorf@e+1)^0,w,c
  6698  0031B2  E109               	bnz	u5240
  6699  0031B4  0E17               	movlw	23
  6700  0031B6  5C28               	subwf	floorf@e^0,w,c
  6701  0031B8  A0D8               	btfss	status,0,c
  6702  0031BA  EFE1  F018         	goto	u5241
  6703  0031BE  EFE3  F018         	goto	u5240
  6704  0031C2                     u5241:
  6705  0031C2  EFED  F018         	goto	l4634
  6706  0031C6                     u5240:
  6707  0031C6                     l4632:
  6708  0031C6  C01A  F01A         	movff	floorf@x,?_floorf
  6709  0031CA  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  6710  0031CE  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  6711  0031D2  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  6712  0031D6  EFB0  F019         	goto	l1442
  6713  0031DA                     l4634:
  6714  0031DA  BE29               	btfsc	(floorf@e+1)^0,7,c
  6715  0031DC  EFF2  F018         	goto	u5251
  6716  0031E0  EFF4  F018         	goto	u5250
  6717  0031E4                     u5251:
  6718  0031E4  EF64  F019         	goto	l4644
  6719  0031E8                     u5250:
  6720  0031E8  C028  F01E         	movff	floorf@e,??_floorf
  6721  0031EC  0EFF               	movlw	255
  6722  0031EE  6E1F               	movwf	(??_floorf+1)^0,c
  6723  0031F0  0EFF               	movlw	255
  6724  0031F2  6E20               	movwf	(??_floorf+2)^0,c
  6725  0031F4  0E7F               	movlw	127
  6726  0031F6  6E21               	movwf	(??_floorf+3)^0,c
  6727  0031F8  0E00               	movlw	0
  6728  0031FA  6E22               	movwf	(??_floorf+4)^0,c
  6729  0031FC                     u5265:
  6730  0031FC  661E               	tstfsz	??_floorf^0,c
  6731  0031FE  EF03  F019         	goto	u5266
  6732  003202  EF0B  F019         	goto	u5267
  6733  003206                     u5266:
  6734  003206  3422               	rlcf	(??_floorf+4)^0,w,c
  6735  003208  3222               	rrcf	(??_floorf+4)^0,f,c
  6736  00320A  3221               	rrcf	(??_floorf+3)^0,f,c
  6737  00320C  3220               	rrcf	(??_floorf+2)^0,f,c
  6738  00320E  321F               	rrcf	(??_floorf+1)^0,f,c
  6739  003210  2E1E               	decfsz	??_floorf^0,f,c
  6740  003212  EFFE  F018         	goto	u5265
  6741  003216                     u5267:
  6742  003216  C01F  F024         	movff	??_floorf+1,floorf@m
  6743  00321A  C020  F025         	movff	??_floorf+2,floorf@m+1
  6744  00321E  C021  F026         	movff	??_floorf+3,floorf@m+2
  6745  003222  C022  F027         	movff	??_floorf+4,floorf@m+3
  6746  003226  5024               	movf	floorf@m^0,w,c
  6747  003228  142A               	andwf	floorf@u^0,w,c
  6748  00322A  6E1E               	movwf	??_floorf^0,c
  6749  00322C  5025               	movf	(floorf@m+1)^0,w,c
  6750  00322E  142B               	andwf	(floorf@u+1)^0,w,c
  6751  003230  6E1F               	movwf	(??_floorf+1)^0,c
  6752  003232  5026               	movf	(floorf@m+2)^0,w,c
  6753  003234  142C               	andwf	(floorf@u+2)^0,w,c
  6754  003236  6E20               	movwf	(??_floorf+2)^0,c
  6755  003238  5027               	movf	(floorf@m+3)^0,w,c
  6756  00323A  142D               	andwf	(floorf@u+3)^0,w,c
  6757  00323C  6E21               	movwf	(??_floorf+3)^0,c
  6758  00323E  501E               	movf	??_floorf^0,w,c
  6759  003240  101F               	iorwf	(??_floorf+1)^0,w,c
  6760  003242  1020               	iorwf	(??_floorf+2)^0,w,c
  6761  003244  1021               	iorwf	(??_floorf+3)^0,w,c
  6762  003246  A4D8               	btfss	status,2,c
  6763  003248  EF28  F019         	goto	u5271
  6764  00324C  EF2A  F019         	goto	u5270
  6765  003250                     u5271:
  6766  003250  EF2C  F019         	goto	l4640
  6767  003254                     u5270:
  6768  003254  EFE3  F018         	goto	l4632
  6769  003258                     l4640:
  6770  003258  C02A  F01E         	movff	floorf@u,??_floorf
  6771  00325C  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6772  003260  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6773  003264  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6774  003268  0E20               	movlw	32
  6775  00326A  EF3C  F019         	goto	u5280
  6776  00326E                     u5285:
  6777  00326E  90D8               	bcf	status,0,c
  6778  003270  3221               	rrcf	(??_floorf+3)^0,f,c
  6779  003272  3220               	rrcf	(??_floorf+2)^0,f,c
  6780  003274  321F               	rrcf	(??_floorf+1)^0,f,c
  6781  003276  321E               	rrcf	??_floorf^0,f,c
  6782  003278                     u5280:
  6783  003278  2EE8               	decfsz	wreg,f,c
  6784  00327A  EF37  F019         	goto	u5285
  6785  00327E  501E               	movf	??_floorf^0,w,c
  6786  003280  101F               	iorwf	(??_floorf+1)^0,w,c
  6787  003282  1020               	iorwf	(??_floorf+2)^0,w,c
  6788  003284  1021               	iorwf	(??_floorf+3)^0,w,c
  6789  003286  B4D8               	btfsc	status,2,c
  6790  003288  EF48  F019         	goto	u5291
  6791  00328C  EF4A  F019         	goto	u5290
  6792  003290                     u5291:
  6793  003290  EF52  F019         	goto	l1445
  6794  003294                     u5290:
  6795  003294  5024               	movf	floorf@m^0,w,c
  6796  003296  262A               	addwf	floorf@u^0,f,c
  6797  003298  5025               	movf	(floorf@m+1)^0,w,c
  6798  00329A  222B               	addwfc	(floorf@u+1)^0,f,c
  6799  00329C  5026               	movf	(floorf@m+2)^0,w,c
  6800  00329E  222C               	addwfc	(floorf@u+2)^0,f,c
  6801  0032A0  5027               	movf	(floorf@m+3)^0,w,c
  6802  0032A2  222D               	addwfc	(floorf@u+3)^0,f,c
  6803  0032A4                     l1445:
  6804  0032A4  1C24               	comf	floorf@m^0,w,c
  6805  0032A6  6E1E               	movwf	??_floorf^0,c
  6806  0032A8  1C25               	comf	(floorf@m+1)^0,w,c
  6807  0032AA  6E1F               	movwf	(??_floorf+1)^0,c
  6808  0032AC  1C26               	comf	(floorf@m+2)^0,w,c
  6809  0032AE  6E20               	movwf	(??_floorf+2)^0,c
  6810  0032B0  1C27               	comf	(floorf@m+3)^0,w,c
  6811  0032B2  6E21               	movwf	(??_floorf+3)^0,c
  6812  0032B4  501E               	movf	??_floorf^0,w,c
  6813  0032B6  162A               	andwf	floorf@u^0,f,c
  6814  0032B8  501F               	movf	(??_floorf+1)^0,w,c
  6815  0032BA  162B               	andwf	(floorf@u+1)^0,f,c
  6816  0032BC  5020               	movf	(??_floorf+2)^0,w,c
  6817  0032BE  162C               	andwf	(floorf@u+2)^0,f,c
  6818  0032C0  5021               	movf	(??_floorf+3)^0,w,c
  6819  0032C2  162D               	andwf	(floorf@u+3)^0,f,c
  6820  0032C4  EFA8  F019         	goto	l4652
  6821  0032C8                     l4644:
  6822  0032C8  C02A  F01E         	movff	floorf@u,??_floorf
  6823  0032CC  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6824  0032D0  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6825  0032D4  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6826  0032D8  0E20               	movlw	32
  6827  0032DA  EF74  F019         	goto	u5300
  6828  0032DE                     u5305:
  6829  0032DE  90D8               	bcf	status,0,c
  6830  0032E0  3221               	rrcf	(??_floorf+3)^0,f,c
  6831  0032E2  3220               	rrcf	(??_floorf+2)^0,f,c
  6832  0032E4  321F               	rrcf	(??_floorf+1)^0,f,c
  6833  0032E6  321E               	rrcf	??_floorf^0,f,c
  6834  0032E8                     u5300:
  6835  0032E8  2EE8               	decfsz	wreg,f,c
  6836  0032EA  EF6F  F019         	goto	u5305
  6837  0032EE  501E               	movf	??_floorf^0,w,c
  6838  0032F0  101F               	iorwf	(??_floorf+1)^0,w,c
  6839  0032F2  1020               	iorwf	(??_floorf+2)^0,w,c
  6840  0032F4  1021               	iorwf	(??_floorf+3)^0,w,c
  6841  0032F6  A4D8               	btfss	status,2,c
  6842  0032F8  EF80  F019         	goto	u5311
  6843  0032FC  EF82  F019         	goto	u5310
  6844  003300                     u5311:
  6845  003300  EF8C  F019         	goto	l4648
  6846  003304                     u5310:
  6847  003304  0E00               	movlw	0
  6848  003306  6E2A               	movwf	floorf@u^0,c
  6849  003308  0E00               	movlw	0
  6850  00330A  6E2B               	movwf	(floorf@u+1)^0,c
  6851  00330C  0E00               	movlw	0
  6852  00330E  6E2C               	movwf	(floorf@u+2)^0,c
  6853  003310  0E00               	movlw	0
  6854  003312  6E2D               	movwf	(floorf@u+3)^0,c
  6855  003314  EFA8  F019         	goto	l4652
  6856  003318                     l4648:
  6857  003318  90D8               	bcf	status,0,c
  6858  00331A  342A               	rlcf	floorf@u^0,w,c
  6859  00331C  6E1E               	movwf	??_floorf^0,c
  6860  00331E  342B               	rlcf	(floorf@u+1)^0,w,c
  6861  003320  6E1F               	movwf	(??_floorf+1)^0,c
  6862  003322  342C               	rlcf	(floorf@u+2)^0,w,c
  6863  003324  6E20               	movwf	(??_floorf+2)^0,c
  6864  003326  342D               	rlcf	(floorf@u+3)^0,w,c
  6865  003328  6E21               	movwf	(??_floorf+3)^0,c
  6866  00332A  501E               	movf	??_floorf^0,w,c
  6867  00332C  101F               	iorwf	(??_floorf+1)^0,w,c
  6868  00332E  1020               	iorwf	(??_floorf+2)^0,w,c
  6869  003330  1021               	iorwf	(??_floorf+3)^0,w,c
  6870  003332  B4D8               	btfsc	status,2,c
  6871  003334  EF9E  F019         	goto	u5321
  6872  003338  EFA0  F019         	goto	u5320
  6873  00333C                     u5321:
  6874  00333C  EFA8  F019         	goto	l4652
  6875  003340                     u5320:
  6876  003340  0E00               	movlw	0
  6877  003342  6E2A               	movwf	floorf@u^0,c
  6878  003344  0E00               	movlw	0
  6879  003346  6E2B               	movwf	(floorf@u+1)^0,c
  6880  003348  0E80               	movlw	128
  6881  00334A  6E2C               	movwf	(floorf@u+2)^0,c
  6882  00334C  0EBF               	movlw	191
  6883  00334E  6E2D               	movwf	(floorf@u+3)^0,c
  6884  003350                     l4652:
  6885  003350  C02A  F01A         	movff	floorf@u,?_floorf
  6886  003354  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  6887  003358  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  6888  00335C  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  6889  003360                     l1442:
  6890  003360  0012               	return		;funcret
  6891  003362                     __end_of_floorf:
  6892                           	callstack 0
  6893                           
  6894 ;; *************** function ___fpclassifyf *****************
  6895 ;; Defined at:
  6896 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;  x               4    0[COMRAM] float 
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;  u               4   10[COMRAM] struct .
  6901 ;;  e               2    8[COMRAM] int 
  6902 ;; Return value:  Size  Location     Type
  6903 ;;                  2    0[COMRAM] int 
  6904 ;; Registers used:
  6905 ;;		wreg, status,2, status,0
  6906 ;; Tracked objects:
  6907 ;;		On entry : 0/0
  6908 ;;		On exit  : 0/0
  6909 ;;		Unchanged: 0/0
  6910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6911 ;;      Params:         4       0       0       0       0       0       0
  6912 ;;      Locals:         6       0       0       0       0       0       0
  6913 ;;      Temps:          4       0       0       0       0       0       0
  6914 ;;      Totals:        14       0       0       0       0       0       0
  6915 ;;Total ram usage:       14 bytes
  6916 ;; Hardware stack levels used:    1
  6917 ;; Hardware stack levels required when called:    1
  6918 ;; This function calls:
  6919 ;;		Nothing
  6920 ;; This function is called by:
  6921 ;;		_efgtoa
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           	psect	text16
  6926  003CB2                     __ptext16:
  6927                           	callstack 0
  6928  003CB2                     ___fpclassifyf:
  6929                           	callstack 23
  6930  003CB2  C0E0  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  6931  003CB6  C0E1  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6932  003CBA  C0E2  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6933  003CBE  C0E3  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6934  003CC2  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6935  003CC6  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6936  003CCA  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6937  003CCE  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6938  003CD2  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6939  003CD6  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6940  003CDA  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6941  003CDE  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6942  003CE2  0E18               	movlw	24
  6943  003CE4  EF79  F01E         	goto	u5110
  6944  003CE8                     u5115:
  6945  003CE8  90D8               	bcf	status,0,c
  6946  003CEA  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6947  003CEC  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6948  003CEE  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6949  003CF0  3205               	rrcf	??___fpclassifyf^0,f,c
  6950  003CF2                     u5110:
  6951  003CF2  2EE8               	decfsz	wreg,f,c
  6952  003CF4  EF74  F01E         	goto	u5115
  6953  003CF8  5005               	movf	??___fpclassifyf^0,w,c
  6954  003CFA  6E09               	movwf	___fpclassifyf@e^0,c
  6955  003CFC  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6956  003CFE  5009               	movf	___fpclassifyf@e^0,w,c
  6957  003D00  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6958  003D02  A4D8               	btfss	status,2,c
  6959  003D04  EF86  F01E         	goto	u5121
  6960  003D08  EF88  F01E         	goto	u5120
  6961  003D0C                     u5121:
  6962  003D0C  EFA8  F01E         	goto	l4604
  6963  003D10                     u5120:
  6964  003D10  90D8               	bcf	status,0,c
  6965  003D12  340B               	rlcf	___fpclassifyf@u^0,w,c
  6966  003D14  6E05               	movwf	??___fpclassifyf^0,c
  6967  003D16  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6968  003D18  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6969  003D1A  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6970  003D1C  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6971  003D1E  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6972  003D20  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6973  003D22  5005               	movf	??___fpclassifyf^0,w,c
  6974  003D24  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6975  003D26  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6976  003D28  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6977  003D2A  A4D8               	btfss	status,2,c
  6978  003D2C  EF9A  F01E         	goto	u5131
  6979  003D30  EF9C  F01E         	goto	u5130
  6980  003D34                     u5131:
  6981  003D34  EFA2  F01E         	goto	l4600
  6982  003D38                     u5130:
  6983  003D38  0E00               	movlw	0
  6984  003D3A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6985  003D3C  0E02               	movlw	2
  6986  003D3E  6E01               	movwf	?___fpclassifyf^0,c
  6987  003D40  EFD7  F01E         	goto	l1397
  6988  003D44                     l4600:
  6989  003D44  0E00               	movlw	0
  6990  003D46  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6991  003D48  0E03               	movlw	3
  6992  003D4A  6E01               	movwf	?___fpclassifyf^0,c
  6993  003D4C  EFD7  F01E         	goto	l1397
  6994  003D50                     l4604:
  6995  003D50  2809               	incf	___fpclassifyf@e^0,w,c
  6996  003D52  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6997  003D54  A4D8               	btfss	status,2,c
  6998  003D56  EFAF  F01E         	goto	u5141
  6999  003D5A  EFB1  F01E         	goto	u5140
  7000  003D5E                     u5141:
  7001  003D5E  EFD3  F01E         	goto	l4610
  7002  003D62                     u5140:
  7003  003D62  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7004  003D66  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7005  003D6A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7006  003D6E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7007  003D72  0E09               	movlw	9
  7008  003D74                     u5155:
  7009  003D74  90D8               	bcf	status,0,c
  7010  003D76  3605               	rlcf	??___fpclassifyf^0,f,c
  7011  003D78  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  7012  003D7A  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  7013  003D7C  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  7014  003D7E  2EE8               	decfsz	wreg,f,c
  7015  003D80  EFBA  F01E         	goto	u5155
  7016  003D84  5005               	movf	??___fpclassifyf^0,w,c
  7017  003D86  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7018  003D88  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7019  003D8A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7020  003D8C  B4D8               	btfsc	status,2,c
  7021  003D8E  EFCB  F01E         	goto	u5161
  7022  003D92  EFCE  F01E         	goto	u5160
  7023  003D96                     u5161:
  7024  003D96  0E01               	movlw	1
  7025  003D98  EFCF  F01E         	goto	u5170
  7026  003D9C                     u5160:
  7027  003D9C  0E00               	movlw	0
  7028  003D9E                     u5170:
  7029  003D9E  6E01               	movwf	?___fpclassifyf^0,c
  7030  003DA0  6A02               	clrf	(?___fpclassifyf+1)^0,c
  7031  003DA2  EFD7  F01E         	goto	l1397
  7032  003DA6                     l4610:
  7033  003DA6  0E00               	movlw	0
  7034  003DA8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7035  003DAA  0E04               	movlw	4
  7036  003DAC  6E01               	movwf	?___fpclassifyf^0,c
  7037  003DAE                     l1397:
  7038  003DAE  0012               	return		;funcret
  7039  003DB0                     __end_of___fpclassifyf:
  7040                           	callstack 0
  7041                           
  7042 ;; *************** function ___fltol *****************
  7043 ;; Defined at:
  7044 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;  f1              4    0[COMRAM] int 
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;  exp1            1    9[COMRAM] unsigned char 
  7049 ;;  sign1           1    8[COMRAM] unsigned char 
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  4    0[COMRAM] long 
  7052 ;; Registers used:
  7053 ;;		wreg, status,2, status,0
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7059 ;;      Params:         4       0       0       0       0       0       0
  7060 ;;      Locals:         2       0       0       0       0       0       0
  7061 ;;      Temps:          4       0       0       0       0       0       0
  7062 ;;      Totals:        10       0       0       0       0       0       0
  7063 ;;Total ram usage:       10 bytes
  7064 ;; Hardware stack levels used:    1
  7065 ;; Hardware stack levels required when called:    1
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		_efgtoa
  7070 ;;		_scanAdcConversion
  7071 ;;		_PWM1_setDC
  7072 ;;		_PWM2_setDC
  7073 ;;		_speedControl
  7074 ;; This function uses a non-reentrant model
  7075 ;;
  7076                           
  7077                           	psect	text17
  7078  003AA8                     __ptext17:
  7079                           	callstack 0
  7080  003AA8                     ___fltol:
  7081                           	callstack 23
  7082  003AA8  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7083  003AAA  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7084  003AAC  6E0A               	movwf	___fltol@exp1^0,c
  7085  003AAE  500A               	movf	___fltol@exp1^0,w,c
  7086  003AB0  A4D8               	btfss	status,2,c
  7087  003AB2  EF5D  F01D         	goto	u4991
  7088  003AB6  EF5F  F01D         	goto	u4990
  7089  003ABA                     u4991:
  7090  003ABA  EF69  F01D         	goto	l4528
  7091  003ABE                     u4990:
  7092  003ABE                     l4524:
  7093  003ABE  0E00               	movlw	0
  7094  003AC0  6E01               	movwf	?___fltol^0,c
  7095  003AC2  0E00               	movlw	0
  7096  003AC4  6E02               	movwf	(?___fltol+1)^0,c
  7097  003AC6  0E00               	movlw	0
  7098  003AC8  6E03               	movwf	(?___fltol+2)^0,c
  7099  003ACA  0E00               	movlw	0
  7100  003ACC  6E04               	movwf	(?___fltol+3)^0,c
  7101  003ACE  EFD6  F01D         	goto	l792
  7102  003AD2                     l4528:
  7103  003AD2  C001  F005         	movff	___fltol@f1,??___fltol
  7104  003AD6  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  7105  003ADA  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  7106  003ADE  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  7107  003AE2  0E20               	movlw	32
  7108  003AE4  EF79  F01D         	goto	u5000
  7109  003AE8                     u5005:
  7110  003AE8  90D8               	bcf	status,0,c
  7111  003AEA  3208               	rrcf	(??___fltol+3)^0,f,c
  7112  003AEC  3207               	rrcf	(??___fltol+2)^0,f,c
  7113  003AEE  3206               	rrcf	(??___fltol+1)^0,f,c
  7114  003AF0  3205               	rrcf	??___fltol^0,f,c
  7115  003AF2                     u5000:
  7116  003AF2  2EE8               	decfsz	wreg,f,c
  7117  003AF4  EF74  F01D         	goto	u5005
  7118  003AF8  5005               	movf	??___fltol^0,w,c
  7119  003AFA  6E09               	movwf	___fltol@sign1^0,c
  7120  003AFC  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7121  003AFE  0EFF               	movlw	255
  7122  003B00  1601               	andwf	___fltol@f1^0,f,c
  7123  003B02  0EFF               	movlw	255
  7124  003B04  1602               	andwf	(___fltol@f1+1)^0,f,c
  7125  003B06  0EFF               	movlw	255
  7126  003B08  1603               	andwf	(___fltol@f1+2)^0,f,c
  7127  003B0A  0E00               	movlw	0
  7128  003B0C  1604               	andwf	(___fltol@f1+3)^0,f,c
  7129  003B0E  0E96               	movlw	150
  7130  003B10  5E0A               	subwf	___fltol@exp1^0,f,c
  7131  003B12  BE0A               	btfsc	___fltol@exp1^0,7,c
  7132  003B14  EF90  F01D         	goto	u5010
  7133  003B18  EF8E  F01D         	goto	u5011
  7134  003B1C                     u5011:
  7135  003B1C  EFA6  F01D         	goto	l4548
  7136  003B20                     u5010:
  7137  003B20  500A               	movf	___fltol@exp1^0,w,c
  7138  003B22  0A80               	xorlw	128
  7139  003B24  0F97               	addlw	151
  7140  003B26  B0D8               	btfsc	status,0,c
  7141  003B28  EF98  F01D         	goto	u5021
  7142  003B2C  EF9A  F01D         	goto	u5020
  7143  003B30                     u5021:
  7144  003B30  EF9C  F01D         	goto	l4544
  7145  003B34                     u5020:
  7146  003B34  EF5F  F01D         	goto	l4524
  7147  003B38                     l4544:
  7148  003B38  90D8               	bcf	status,0,c
  7149  003B3A  3204               	rrcf	(___fltol@f1+3)^0,f,c
  7150  003B3C  3203               	rrcf	(___fltol@f1+2)^0,f,c
  7151  003B3E  3202               	rrcf	(___fltol@f1+1)^0,f,c
  7152  003B40  3201               	rrcf	___fltol@f1^0,f,c
  7153  003B42  3E0A               	incfsz	___fltol@exp1^0,f,c
  7154  003B44  EF9C  F01D         	goto	l4544
  7155  003B48  EFBE  F01D         	goto	l4558
  7156  003B4C                     l4548:
  7157  003B4C  0E1F               	movlw	31
  7158  003B4E  640A               	cpfsgt	___fltol@exp1^0,c
  7159  003B50  EFAC  F01D         	goto	u5031
  7160  003B54  EFAE  F01D         	goto	u5030
  7161  003B58                     u5031:
  7162  003B58  EFB6  F01D         	goto	l4556
  7163  003B5C                     u5030:
  7164  003B5C  EF5F  F01D         	goto	l4524
  7165  003B60                     l4554:
  7166  003B60  90D8               	bcf	status,0,c
  7167  003B62  3601               	rlcf	___fltol@f1^0,f,c
  7168  003B64  3602               	rlcf	(___fltol@f1+1)^0,f,c
  7169  003B66  3603               	rlcf	(___fltol@f1+2)^0,f,c
  7170  003B68  3604               	rlcf	(___fltol@f1+3)^0,f,c
  7171  003B6A  060A               	decf	___fltol@exp1^0,f,c
  7172  003B6C                     l4556:
  7173  003B6C  500A               	movf	___fltol@exp1^0,w,c
  7174  003B6E  A4D8               	btfss	status,2,c
  7175  003B70  EFBC  F01D         	goto	u5041
  7176  003B74  EFBE  F01D         	goto	u5040
  7177  003B78                     u5041:
  7178  003B78  EFB0  F01D         	goto	l4554
  7179  003B7C                     u5040:
  7180  003B7C                     l4558:
  7181  003B7C  5009               	movf	___fltol@sign1^0,w,c
  7182  003B7E  B4D8               	btfsc	status,2,c
  7183  003B80  EFC4  F01D         	goto	u5051
  7184  003B84  EFC6  F01D         	goto	u5050
  7185  003B88                     u5051:
  7186  003B88  EFCE  F01D         	goto	l4562
  7187  003B8C                     u5050:
  7188  003B8C  1E04               	comf	(___fltol@f1+3)^0,f,c
  7189  003B8E  1E03               	comf	(___fltol@f1+2)^0,f,c
  7190  003B90  1E02               	comf	(___fltol@f1+1)^0,f,c
  7191  003B92  6C01               	negf	___fltol@f1^0,c
  7192  003B94  0E00               	movlw	0
  7193  003B96  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7194  003B98  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7195  003B9A  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7196  003B9C                     l4562:
  7197  003B9C  C001  F001         	movff	___fltol@f1,?___fltol
  7198  003BA0  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  7199  003BA4  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  7200  003BA8  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  7201  003BAC                     l792:
  7202  003BAC  0012               	return		;funcret
  7203  003BAE                     __end_of___fltol:
  7204                           	callstack 0
  7205                           
  7206 ;; *************** function ___flsub *****************
  7207 ;; Defined at:
  7208 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;  b               4   25[COMRAM] long 
  7211 ;;  a               4   29[COMRAM] long 
  7212 ;; Auto vars:     Size  Location     Type
  7213 ;;		None
  7214 ;; Return value:  Size  Location     Type
  7215 ;;                  4   25[COMRAM] long 
  7216 ;; Registers used:
  7217 ;;		wreg, status,2, status,0, cstack
  7218 ;; Tracked objects:
  7219 ;;		On entry : 0/0
  7220 ;;		On exit  : 0/0
  7221 ;;		Unchanged: 0/0
  7222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7223 ;;      Params:         8       0       0       0       0       0       0
  7224 ;;      Locals:         0       0       0       0       0       0       0
  7225 ;;      Temps:          0       0       0       0       0       0       0
  7226 ;;      Totals:         8       0       0       0       0       0       0
  7227 ;;Total ram usage:        8 bytes
  7228 ;; Hardware stack levels used:    1
  7229 ;; Hardware stack levels required when called:    2
  7230 ;; This function calls:
  7231 ;;		___fladd
  7232 ;; This function is called by:
  7233 ;;		_stateMachine
  7234 ;;		_efgtoa
  7235 ;; This function uses a non-reentrant model
  7236 ;;
  7237                           
  7238                           	psect	text18
  7239  004742                     __ptext18:
  7240                           	callstack 0
  7241  004742                     ___flsub:
  7242                           	callstack 22
  7243  004742  0E00               	movlw	0
  7244  004744  1A1E               	xorwf	___flsub@a^0,f,c
  7245  004746  0E00               	movlw	0
  7246  004748  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  7247  00474A  0E00               	movlw	0
  7248  00474C  1A20               	xorwf	(___flsub@a+2)^0,f,c
  7249  00474E  0E80               	movlw	128
  7250  004750  1A21               	xorwf	(___flsub@a+3)^0,f,c
  7251  004752  C01A  F001         	movff	___flsub@b,___fladd@b
  7252  004756  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  7253  00475A  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  7254  00475E  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  7255  004762  C01E  F005         	movff	___flsub@a,___fladd@a
  7256  004766  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  7257  00476A  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  7258  00476E  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  7259  004772  ECF4  F010         	call	___fladd	;wreg free
  7260  004776  C001  F01A         	movff	?___fladd,?___flsub
  7261  00477A  C002  F01B         	movff	?___fladd+1,?___flsub+1
  7262  00477E  C003  F01C         	movff	?___fladd+2,?___flsub+2
  7263  004782  C004  F01D         	movff	?___fladd+3,?___flsub+3
  7264  004786  0012               	return		;funcret
  7265  004788                     __end_of___flsub:
  7266                           	callstack 0
  7267                           
  7268 ;; *************** function ___fladd *****************
  7269 ;; Defined at:
  7270 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;  b               4    0[COMRAM] long 
  7273 ;;  a               4    4[COMRAM] long 
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;  grs             1   15[COMRAM] unsigned char 
  7276 ;;  bexp            1   14[COMRAM] unsigned char 
  7277 ;;  aexp            1   13[COMRAM] unsigned char 
  7278 ;;  signs           1   12[COMRAM] unsigned char 
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  4    0[COMRAM] unsigned char 
  7281 ;; Registers used:
  7282 ;;		wreg, status,2, status,0
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7288 ;;      Params:         8       0       0       0       0       0       0
  7289 ;;      Locals:         4       0       0       0       0       0       0
  7290 ;;      Temps:          4       0       0       0       0       0       0
  7291 ;;      Totals:        16       0       0       0       0       0       0
  7292 ;;Total ram usage:       16 bytes
  7293 ;; Hardware stack levels used:    1
  7294 ;; Hardware stack levels required when called:    1
  7295 ;; This function calls:
  7296 ;;		Nothing
  7297 ;; This function is called by:
  7298 ;;		_stateMachine
  7299 ;;		___flsub
  7300 ;;		_efgtoa
  7301 ;;		_speedControl
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text19
  7306  0021E8                     __ptext19:
  7307                           	callstack 0
  7308  0021E8                     ___fladd:
  7309                           	callstack 22
  7310  0021E8  5004               	movf	(___fladd@b+3)^0,w,c
  7311  0021EA  0B80               	andlw	128
  7312  0021EC  6E0D               	movwf	___fladd@signs^0,c
  7313  0021EE  5004               	movf	(___fladd@b+3)^0,w,c
  7314  0021F0  2404               	addwf	(___fladd@b+3)^0,w,c
  7315  0021F2  6E0F               	movwf	___fladd@bexp^0,c
  7316  0021F4  AE03               	btfss	(___fladd@b+2)^0,7,c
  7317  0021F6  EFFF  F010         	goto	u3801
  7318  0021FA  EF01  F011         	goto	u3800
  7319  0021FE                     u3801:
  7320  0021FE  EF02  F011         	goto	l3818
  7321  002202                     u3800:
  7322  002202  800F               	bsf	___fladd@bexp^0,0,c
  7323  002204                     l3818:
  7324  002204  500F               	movf	___fladd@bexp^0,w,c
  7325  002206  B4D8               	btfsc	status,2,c
  7326  002208  EF08  F011         	goto	u3811
  7327  00220C  EF0A  F011         	goto	u3810
  7328  002210                     u3811:
  7329  002210  EF1F  F011         	goto	l3828
  7330  002214                     u3810:
  7331  002214  280F               	incf	___fladd@bexp^0,w,c
  7332  002216  A4D8               	btfss	status,2,c
  7333  002218  EF10  F011         	goto	u3821
  7334  00221C  EF12  F011         	goto	u3820
  7335  002220                     u3821:
  7336  002220  EF1A  F011         	goto	l3824
  7337  002224                     u3820:
  7338  002224  0E00               	movlw	0
  7339  002226  6E01               	movwf	___fladd@b^0,c
  7340  002228  0E00               	movlw	0
  7341  00222A  6E02               	movwf	(___fladd@b+1)^0,c
  7342  00222C  0E00               	movlw	0
  7343  00222E  6E03               	movwf	(___fladd@b+2)^0,c
  7344  002230  0E00               	movlw	0
  7345  002232  6E04               	movwf	(___fladd@b+3)^0,c
  7346  002234                     l3824:
  7347  002234  8E03               	bsf	(___fladd@b+2)^0,7,c
  7348  002236  0E00               	movlw	0
  7349  002238  6E04               	movwf	(___fladd@b+3)^0,c
  7350  00223A  EF27  F011         	goto	l3830
  7351  00223E                     l3828:
  7352  00223E  0E00               	movlw	0
  7353  002240  6E01               	movwf	___fladd@b^0,c
  7354  002242  0E00               	movlw	0
  7355  002244  6E02               	movwf	(___fladd@b+1)^0,c
  7356  002246  0E00               	movlw	0
  7357  002248  6E03               	movwf	(___fladd@b+2)^0,c
  7358  00224A  0E00               	movlw	0
  7359  00224C  6E04               	movwf	(___fladd@b+3)^0,c
  7360  00224E                     l3830:
  7361  00224E  5008               	movf	(___fladd@a+3)^0,w,c
  7362  002250  0B80               	andlw	128
  7363  002252  6E0E               	movwf	___fladd@aexp^0,c
  7364  002254  500D               	movf	___fladd@signs^0,w,c
  7365  002256  180E               	xorwf	___fladd@aexp^0,w,c
  7366  002258  B4D8               	btfsc	status,2,c
  7367  00225A  EF31  F011         	goto	u3831
  7368  00225E  EF33  F011         	goto	u3830
  7369  002262                     u3831:
  7370  002262  EF34  F011         	goto	l3836
  7371  002266                     u3830:
  7372  002266  8C0D               	bsf	___fladd@signs^0,6,c
  7373  002268                     l3836:
  7374  002268  5008               	movf	(___fladd@a+3)^0,w,c
  7375  00226A  2408               	addwf	(___fladd@a+3)^0,w,c
  7376  00226C  6E0E               	movwf	___fladd@aexp^0,c
  7377  00226E  AE07               	btfss	(___fladd@a+2)^0,7,c
  7378  002270  EF3C  F011         	goto	u3841
  7379  002274  EF3E  F011         	goto	u3840
  7380  002278                     u3841:
  7381  002278  EF3F  F011         	goto	l3842
  7382  00227C                     u3840:
  7383  00227C  800E               	bsf	___fladd@aexp^0,0,c
  7384  00227E                     l3842:
  7385  00227E  500E               	movf	___fladd@aexp^0,w,c
  7386  002280  B4D8               	btfsc	status,2,c
  7387  002282  EF45  F011         	goto	u3851
  7388  002286  EF47  F011         	goto	u3850
  7389  00228A                     u3851:
  7390  00228A  EF5C  F011         	goto	l3852
  7391  00228E                     u3850:
  7392  00228E  280E               	incf	___fladd@aexp^0,w,c
  7393  002290  A4D8               	btfss	status,2,c
  7394  002292  EF4D  F011         	goto	u3861
  7395  002296  EF4F  F011         	goto	u3860
  7396  00229A                     u3861:
  7397  00229A  EF57  F011         	goto	l3848
  7398  00229E                     u3860:
  7399  00229E  0E00               	movlw	0
  7400  0022A0  6E05               	movwf	___fladd@a^0,c
  7401  0022A2  0E00               	movlw	0
  7402  0022A4  6E06               	movwf	(___fladd@a+1)^0,c
  7403  0022A6  0E00               	movlw	0
  7404  0022A8  6E07               	movwf	(___fladd@a+2)^0,c
  7405  0022AA  0E00               	movlw	0
  7406  0022AC  6E08               	movwf	(___fladd@a+3)^0,c
  7407  0022AE                     l3848:
  7408  0022AE  8E07               	bsf	(___fladd@a+2)^0,7,c
  7409  0022B0  0E00               	movlw	0
  7410  0022B2  6E08               	movwf	(___fladd@a+3)^0,c
  7411  0022B4  EF64  F011         	goto	l3854
  7412  0022B8                     l3852:
  7413  0022B8  0E00               	movlw	0
  7414  0022BA  6E05               	movwf	___fladd@a^0,c
  7415  0022BC  0E00               	movlw	0
  7416  0022BE  6E06               	movwf	(___fladd@a+1)^0,c
  7417  0022C0  0E00               	movlw	0
  7418  0022C2  6E07               	movwf	(___fladd@a+2)^0,c
  7419  0022C4  0E00               	movlw	0
  7420  0022C6  6E08               	movwf	(___fladd@a+3)^0,c
  7421  0022C8                     l3854:
  7422  0022C8  500F               	movf	___fladd@bexp^0,w,c
  7423  0022CA  5C0E               	subwf	___fladd@aexp^0,w,c
  7424  0022CC  B0D8               	btfsc	status,0,c
  7425  0022CE  EF6B  F011         	goto	u3871
  7426  0022D2  EF6D  F011         	goto	u3870
  7427  0022D6                     u3871:
  7428  0022D6  EF94  F011         	goto	l3890
  7429  0022DA                     u3870:
  7430  0022DA  AC0D               	btfss	___fladd@signs^0,6,c
  7431  0022DC  EF72  F011         	goto	u3881
  7432  0022E0  EF74  F011         	goto	u3880
  7433  0022E4                     u3881:
  7434  0022E4  EF76  F011         	goto	l3860
  7435  0022E8                     u3880:
  7436  0022E8  0E80               	movlw	128
  7437  0022EA  1A0D               	xorwf	___fladd@signs^0,f,c
  7438  0022EC                     l3860:
  7439  0022EC  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7440  0022F0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7441  0022F4  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7442  0022F8  C001  F010         	movff	___fladd@b,___fladd@grs
  7443  0022FC  C005  F001         	movff	___fladd@a,___fladd@b
  7444  002300  C010  F005         	movff	___fladd@grs,___fladd@a
  7445  002304  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7446  002308  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7447  00230C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7448  002310  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7449  002314  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7450  002318  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7451  00231C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7452  002320  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7453  002324  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7454  002328                     l3890:
  7455  002328  0E00               	movlw	0
  7456  00232A  6E10               	movwf	___fladd@grs^0,c
  7457  00232C  500F               	movf	___fladd@bexp^0,w,c
  7458  00232E  C00E  F009         	movff	___fladd@aexp,??___fladd
  7459  002332  6A0A               	clrf	(??___fladd+1)^0,c
  7460  002334  5E09               	subwf	??___fladd^0,f,c
  7461  002336  0E00               	movlw	0
  7462  002338  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7463  00233A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7464  00233C  EFA9  F011         	goto	u3891
  7465  002340  500A               	movf	(??___fladd+1)^0,w,c
  7466  002342  E109               	bnz	u3890
  7467  002344  0E1A               	movlw	26
  7468  002346  5C09               	subwf	??___fladd^0,w,c
  7469  002348  A0D8               	btfss	status,0,c
  7470  00234A  EFA9  F011         	goto	u3891
  7471  00234E  EFAB  F011         	goto	u3890
  7472  002352                     u3891:
  7473  002352  EFE2  F011         	goto	l1024
  7474  002356                     u3890:
  7475  002356  5001               	movf	___fladd@b^0,w,c
  7476  002358  1002               	iorwf	(___fladd@b+1)^0,w,c
  7477  00235A  1003               	iorwf	(___fladd@b+2)^0,w,c
  7478  00235C  1004               	iorwf	(___fladd@b+3)^0,w,c
  7479  00235E  A4D8               	btfss	status,2,c
  7480  002360  EFB4  F011         	goto	u3901
  7481  002364  EFB7  F011         	goto	u3900
  7482  002368                     u3901:
  7483  002368  0E01               	movlw	1
  7484  00236A  EFB8  F011         	goto	u3910
  7485  00236E                     u3900:
  7486  00236E  0E00               	movlw	0
  7487  002370                     u3910:
  7488  002370  6E10               	movwf	___fladd@grs^0,c
  7489  002372  0E00               	movlw	0
  7490  002374  6E01               	movwf	___fladd@b^0,c
  7491  002376  0E00               	movlw	0
  7492  002378  6E02               	movwf	(___fladd@b+1)^0,c
  7493  00237A  0E00               	movlw	0
  7494  00237C  6E03               	movwf	(___fladd@b+2)^0,c
  7495  00237E  0E00               	movlw	0
  7496  002380  6E04               	movwf	(___fladd@b+3)^0,c
  7497  002382  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7498  002386  EFEB  F011         	goto	l1023
  7499  00238A                     l1025:
  7500  00238A  A010               	btfss	___fladd@grs^0,0,c
  7501  00238C  EFCA  F011         	goto	u3921
  7502  002390  EFCC  F011         	goto	u3920
  7503  002394                     u3921:
  7504  002394  EFD2  F011         	goto	l3902
  7505  002398                     u3920:
  7506  002398  90D8               	bcf	status,0,c
  7507  00239A  3010               	rrcf	___fladd@grs^0,w,c
  7508  00239C  0901               	iorlw	1
  7509  00239E  6E10               	movwf	___fladd@grs^0,c
  7510  0023A0  EFD4  F011         	goto	l3904
  7511  0023A4                     l3902:
  7512  0023A4  90D8               	bcf	status,0,c
  7513  0023A6  3210               	rrcf	___fladd@grs^0,f,c
  7514  0023A8                     l3904:
  7515  0023A8  A001               	btfss	___fladd@b^0,0,c
  7516  0023AA  EFD9  F011         	goto	u3931
  7517  0023AE  EFDB  F011         	goto	u3930
  7518  0023B2                     u3931:
  7519  0023B2  EFDC  F011         	goto	l3908
  7520  0023B6                     u3930:
  7521  0023B6  8E10               	bsf	___fladd@grs^0,7,c
  7522  0023B8                     l3908:
  7523  0023B8  3404               	rlcf	(___fladd@b+3)^0,w,c
  7524  0023BA  3204               	rrcf	(___fladd@b+3)^0,f,c
  7525  0023BC  3203               	rrcf	(___fladd@b+2)^0,f,c
  7526  0023BE  3202               	rrcf	(___fladd@b+1)^0,f,c
  7527  0023C0  3201               	rrcf	___fladd@b^0,f,c
  7528  0023C2  2A0F               	incf	___fladd@bexp^0,f,c
  7529  0023C4                     l1024:
  7530  0023C4  500E               	movf	___fladd@aexp^0,w,c
  7531  0023C6  5C0F               	subwf	___fladd@bexp^0,w,c
  7532  0023C8  A0D8               	btfss	status,0,c
  7533  0023CA  EFE9  F011         	goto	u3941
  7534  0023CE  EFEB  F011         	goto	u3940
  7535  0023D2                     u3941:
  7536  0023D2  EFC5  F011         	goto	l1025
  7537  0023D6                     u3940:
  7538  0023D6                     l1023:
  7539  0023D6  BC0D               	btfsc	___fladd@signs^0,6,c
  7540  0023D8  EFF0  F011         	goto	u3951
  7541  0023DC  EFF2  F011         	goto	u3950
  7542  0023E0                     u3951:
  7543  0023E0  EF32  F012         	goto	l3936
  7544  0023E4                     u3950:
  7545  0023E4  500F               	movf	___fladd@bexp^0,w,c
  7546  0023E6  A4D8               	btfss	status,2,c
  7547  0023E8  EFF8  F011         	goto	u3961
  7548  0023EC  EFFA  F011         	goto	u3960
  7549  0023F0                     u3961:
  7550  0023F0  EF04  F012         	goto	l3918
  7551  0023F4                     u3960:
  7552  0023F4  0E00               	movlw	0
  7553  0023F6  6E01               	movwf	?___fladd^0,c
  7554  0023F8  0E00               	movlw	0
  7555  0023FA  6E02               	movwf	(?___fladd+1)^0,c
  7556  0023FC  0E00               	movlw	0
  7557  0023FE  6E03               	movwf	(?___fladd+2)^0,c
  7558  002400  0E00               	movlw	0
  7559  002402  6E04               	movwf	(?___fladd+3)^0,c
  7560  002404  EF53  F013         	goto	l1032
  7561  002408                     l3918:
  7562  002408  5005               	movf	___fladd@a^0,w,c
  7563  00240A  2601               	addwf	___fladd@b^0,f,c
  7564  00240C  5006               	movf	(___fladd@a+1)^0,w,c
  7565  00240E  2202               	addwfc	(___fladd@b+1)^0,f,c
  7566  002410  5007               	movf	(___fladd@a+2)^0,w,c
  7567  002412  2203               	addwfc	(___fladd@b+2)^0,f,c
  7568  002414  5008               	movf	(___fladd@a+3)^0,w,c
  7569  002416  2204               	addwfc	(___fladd@b+3)^0,f,c
  7570  002418  A004               	btfss	(___fladd@b+3)^0,0,c
  7571  00241A  EF11  F012         	goto	u3971
  7572  00241E  EF13  F012         	goto	u3970
  7573  002422                     u3971:
  7574  002422  EFBF  F012         	goto	l3972
  7575  002426                     u3970:
  7576  002426  A010               	btfss	___fladd@grs^0,0,c
  7577  002428  EF18  F012         	goto	u3981
  7578  00242C  EF1A  F012         	goto	u3980
  7579  002430                     u3981:
  7580  002430  EF20  F012         	goto	l3926
  7581  002434                     u3980:
  7582  002434  90D8               	bcf	status,0,c
  7583  002436  3010               	rrcf	___fladd@grs^0,w,c
  7584  002438  0901               	iorlw	1
  7585  00243A  6E10               	movwf	___fladd@grs^0,c
  7586  00243C  EF22  F012         	goto	l3928
  7587  002440                     l3926:
  7588  002440  90D8               	bcf	status,0,c
  7589  002442  3210               	rrcf	___fladd@grs^0,f,c
  7590  002444                     l3928:
  7591  002444  A001               	btfss	___fladd@b^0,0,c
  7592  002446  EF27  F012         	goto	u3991
  7593  00244A  EF29  F012         	goto	u3990
  7594  00244E                     u3991:
  7595  00244E  EF2A  F012         	goto	l3932
  7596  002452                     u3990:
  7597  002452  8E10               	bsf	___fladd@grs^0,7,c
  7598  002454                     l3932:
  7599  002454  3404               	rlcf	(___fladd@b+3)^0,w,c
  7600  002456  3204               	rrcf	(___fladd@b+3)^0,f,c
  7601  002458  3203               	rrcf	(___fladd@b+2)^0,f,c
  7602  00245A  3202               	rrcf	(___fladd@b+1)^0,f,c
  7603  00245C  3201               	rrcf	___fladd@b^0,f,c
  7604  00245E  2A0F               	incf	___fladd@bexp^0,f,c
  7605  002460  EFBF  F012         	goto	l3972
  7606  002464                     l3936:
  7607  002464  5005               	movf	___fladd@a^0,w,c
  7608  002466  5C01               	subwf	___fladd@b^0,w,c
  7609  002468  5006               	movf	(___fladd@a+1)^0,w,c
  7610  00246A  5802               	subwfb	(___fladd@b+1)^0,w,c
  7611  00246C  5007               	movf	(___fladd@a+2)^0,w,c
  7612  00246E  5803               	subwfb	(___fladd@b+2)^0,w,c
  7613  002470  5004               	movf	(___fladd@b+3)^0,w,c
  7614  002472  0A80               	xorlw	128
  7615  002474  6E09               	movwf	??___fladd^0,c
  7616  002476  5008               	movf	(___fladd@a+3)^0,w,c
  7617  002478  0A80               	xorlw	128
  7618  00247A  5809               	subwfb	??___fladd^0,w,c
  7619  00247C  B0D8               	btfsc	status,0,c
  7620  00247E  EF43  F012         	goto	u4001
  7621  002482  EF45  F012         	goto	u4000
  7622  002486                     u4001:
  7623  002486  EF70  F012         	goto	l3946
  7624  00248A                     u4000:
  7625  00248A  5001               	movf	___fladd@b^0,w,c
  7626  00248C  5C05               	subwf	___fladd@a^0,w,c
  7627  00248E  6E09               	movwf	??___fladd^0,c
  7628  002490  5002               	movf	(___fladd@b+1)^0,w,c
  7629  002492  5806               	subwfb	(___fladd@a+1)^0,w,c
  7630  002494  6E0A               	movwf	(??___fladd+1)^0,c
  7631  002496  5003               	movf	(___fladd@b+2)^0,w,c
  7632  002498  5807               	subwfb	(___fladd@a+2)^0,w,c
  7633  00249A  6E0B               	movwf	(??___fladd+2)^0,c
  7634  00249C  5004               	movf	(___fladd@b+3)^0,w,c
  7635  00249E  5808               	subwfb	(___fladd@a+3)^0,w,c
  7636  0024A0  6E0C               	movwf	(??___fladd+3)^0,c
  7637  0024A2  0EFF               	movlw	255
  7638  0024A4  2409               	addwf	??___fladd^0,w,c
  7639  0024A6  6E01               	movwf	___fladd@b^0,c
  7640  0024A8  0EFF               	movlw	255
  7641  0024AA  200A               	addwfc	(??___fladd+1)^0,w,c
  7642  0024AC  6E02               	movwf	(___fladd@b+1)^0,c
  7643  0024AE  0EFF               	movlw	255
  7644  0024B0  200B               	addwfc	(??___fladd+2)^0,w,c
  7645  0024B2  6E03               	movwf	(___fladd@b+2)^0,c
  7646  0024B4  0EFF               	movlw	255
  7647  0024B6  200C               	addwfc	(??___fladd+3)^0,w,c
  7648  0024B8  6E04               	movwf	(___fladd@b+3)^0,c
  7649  0024BA  0E80               	movlw	128
  7650  0024BC  1A0D               	xorwf	___fladd@signs^0,f,c
  7651  0024BE  6C10               	negf	___fladd@grs^0,c
  7652  0024C0  5010               	movf	___fladd@grs^0,w,c
  7653  0024C2  A4D8               	btfss	status,2,c
  7654  0024C4  EF66  F012         	goto	u4011
  7655  0024C8  EF68  F012         	goto	u4010
  7656  0024CC                     u4011:
  7657  0024CC  EF78  F012         	goto	l1040
  7658  0024D0                     u4010:
  7659  0024D0  0E01               	movlw	1
  7660  0024D2  2601               	addwf	___fladd@b^0,f,c
  7661  0024D4  0E00               	movlw	0
  7662  0024D6  2202               	addwfc	(___fladd@b+1)^0,f,c
  7663  0024D8  2203               	addwfc	(___fladd@b+2)^0,f,c
  7664  0024DA  2204               	addwfc	(___fladd@b+3)^0,f,c
  7665  0024DC  EF78  F012         	goto	l1040
  7666  0024E0                     l3946:
  7667  0024E0  5005               	movf	___fladd@a^0,w,c
  7668  0024E2  5E01               	subwf	___fladd@b^0,f,c
  7669  0024E4  5006               	movf	(___fladd@a+1)^0,w,c
  7670  0024E6  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7671  0024E8  5007               	movf	(___fladd@a+2)^0,w,c
  7672  0024EA  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7673  0024EC  5008               	movf	(___fladd@a+3)^0,w,c
  7674  0024EE  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7675  0024F0                     l1040:
  7676  0024F0  5001               	movf	___fladd@b^0,w,c
  7677  0024F2  1002               	iorwf	(___fladd@b+1)^0,w,c
  7678  0024F4  1003               	iorwf	(___fladd@b+2)^0,w,c
  7679  0024F6  1004               	iorwf	(___fladd@b+3)^0,w,c
  7680  0024F8  A4D8               	btfss	status,2,c
  7681  0024FA  EF81  F012         	goto	u4021
  7682  0024FE  EF83  F012         	goto	u4020
  7683  002502                     u4021:
  7684  002502  EFB8  F012         	goto	l3970
  7685  002506                     u4020:
  7686  002506  5010               	movf	___fladd@grs^0,w,c
  7687  002508  A4D8               	btfss	status,2,c
  7688  00250A  EF89  F012         	goto	u4031
  7689  00250E  EF8B  F012         	goto	u4030
  7690  002512                     u4031:
  7691  002512  EFB8  F012         	goto	l3970
  7692  002516                     u4030:
  7693  002516  0E00               	movlw	0
  7694  002518  6E01               	movwf	?___fladd^0,c
  7695  00251A  0E00               	movlw	0
  7696  00251C  6E02               	movwf	(?___fladd+1)^0,c
  7697  00251E  0E00               	movlw	0
  7698  002520  6E03               	movwf	(?___fladd+2)^0,c
  7699  002522  0E00               	movlw	0
  7700  002524  6E04               	movwf	(?___fladd+3)^0,c
  7701  002526  EF53  F013         	goto	l1032
  7702  00252A                     l3954:
  7703  00252A  90D8               	bcf	status,0,c
  7704  00252C  3601               	rlcf	___fladd@b^0,f,c
  7705  00252E  3602               	rlcf	(___fladd@b+1)^0,f,c
  7706  002530  3603               	rlcf	(___fladd@b+2)^0,f,c
  7707  002532  3604               	rlcf	(___fladd@b+3)^0,f,c
  7708  002534  AE10               	btfss	___fladd@grs^0,7,c
  7709  002536  EF9F  F012         	goto	u4041
  7710  00253A  EFA1  F012         	goto	u4040
  7711  00253E                     u4041:
  7712  00253E  EFA2  F012         	goto	l3960
  7713  002542                     u4040:
  7714  002542  8001               	bsf	___fladd@b^0,0,c
  7715  002544                     l3960:
  7716  002544  A010               	btfss	___fladd@grs^0,0,c
  7717  002546  EFA7  F012         	goto	u4051
  7718  00254A  EFA9  F012         	goto	u4050
  7719  00254E                     u4051:
  7720  00254E  EFAD  F012         	goto	l3964
  7721  002552                     u4050:
  7722  002552  80D8               	bsf	status,0,c
  7723  002554  3610               	rlcf	___fladd@grs^0,f,c
  7724  002556  EFAF  F012         	goto	l3966
  7725  00255A                     l3964:
  7726  00255A  90D8               	bcf	status,0,c
  7727  00255C  3610               	rlcf	___fladd@grs^0,f,c
  7728  00255E                     l3966:
  7729  00255E  500F               	movf	___fladd@bexp^0,w,c
  7730  002560  B4D8               	btfsc	status,2,c
  7731  002562  EFB5  F012         	goto	u4061
  7732  002566  EFB7  F012         	goto	u4060
  7733  00256A                     u4061:
  7734  00256A  EFB8  F012         	goto	l3970
  7735  00256E                     u4060:
  7736  00256E  060F               	decf	___fladd@bexp^0,f,c
  7737  002570                     l3970:
  7738  002570  AE03               	btfss	(___fladd@b+2)^0,7,c
  7739  002572  EFBD  F012         	goto	u4071
  7740  002576  EFBF  F012         	goto	u4070
  7741  00257A                     u4071:
  7742  00257A  EF95  F012         	goto	l3954
  7743  00257E                     u4070:
  7744  00257E                     l3972:
  7745  00257E  0E00               	movlw	0
  7746  002580  6E0E               	movwf	___fladd@aexp^0,c
  7747  002582  AE10               	btfss	___fladd@grs^0,7,c
  7748  002584  EFC6  F012         	goto	u4081
  7749  002588  EFC8  F012         	goto	u4080
  7750  00258C                     u4081:
  7751  00258C  EFE0  F012         	goto	l1049
  7752  002590                     u4080:
  7753  002590  C010  F009         	movff	___fladd@grs,??___fladd
  7754  002594  0E7F               	movlw	127
  7755  002596  1609               	andwf	??___fladd^0,f,c
  7756  002598  B4D8               	btfsc	status,2,c
  7757  00259A  EFD1  F012         	goto	u4091
  7758  00259E  EFD3  F012         	goto	u4090
  7759  0025A2                     u4091:
  7760  0025A2  EFD7  F012         	goto	l1050
  7761  0025A6                     u4090:
  7762  0025A6                     l3978:
  7763  0025A6  0E01               	movlw	1
  7764  0025A8  6E0E               	movwf	___fladd@aexp^0,c
  7765  0025AA  EFE0  F012         	goto	l1049
  7766  0025AE                     l1050:
  7767  0025AE  A001               	btfss	___fladd@b^0,0,c
  7768  0025B0  EFDC  F012         	goto	u4101
  7769  0025B4  EFDE  F012         	goto	u4100
  7770  0025B8                     u4101:
  7771  0025B8  EFE0  F012         	goto	l1049
  7772  0025BC                     u4100:
  7773  0025BC  EFD3  F012         	goto	l3978
  7774  0025C0                     l1049:
  7775  0025C0  500E               	movf	___fladd@aexp^0,w,c
  7776  0025C2  B4D8               	btfsc	status,2,c
  7777  0025C4  EFE6  F012         	goto	u4111
  7778  0025C8  EFE8  F012         	goto	u4110
  7779  0025CC                     u4111:
  7780  0025CC  EF13  F013         	goto	l3990
  7781  0025D0                     u4110:
  7782  0025D0  0E01               	movlw	1
  7783  0025D2  2601               	addwf	___fladd@b^0,f,c
  7784  0025D4  0E00               	movlw	0
  7785  0025D6  2202               	addwfc	(___fladd@b+1)^0,f,c
  7786  0025D8  2203               	addwfc	(___fladd@b+2)^0,f,c
  7787  0025DA  2204               	addwfc	(___fladd@b+3)^0,f,c
  7788  0025DC  A004               	btfss	(___fladd@b+3)^0,0,c
  7789  0025DE  EFF3  F012         	goto	u4121
  7790  0025E2  EFF5  F012         	goto	u4120
  7791  0025E6                     u4121:
  7792  0025E6  EF13  F013         	goto	l3990
  7793  0025EA                     u4120:
  7794  0025EA  C001  F009         	movff	___fladd@b,??___fladd
  7795  0025EE  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7796  0025F2  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7797  0025F6  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7798  0025FA  340C               	rlcf	(??___fladd+3)^0,w,c
  7799  0025FC  320C               	rrcf	(??___fladd+3)^0,f,c
  7800  0025FE  320B               	rrcf	(??___fladd+2)^0,f,c
  7801  002600  320A               	rrcf	(??___fladd+1)^0,f,c
  7802  002602  3209               	rrcf	??___fladd^0,f,c
  7803  002604  C009  F001         	movff	??___fladd,___fladd@b
  7804  002608  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  7805  00260C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  7806  002610  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  7807  002614  280F               	incf	___fladd@bexp^0,w,c
  7808  002616  B4D8               	btfsc	status,2,c
  7809  002618  EF10  F013         	goto	u4131
  7810  00261C  EF12  F013         	goto	u4130
  7811  002620                     u4131:
  7812  002620  EF13  F013         	goto	l3990
  7813  002624                     u4130:
  7814  002624  2A0F               	incf	___fladd@bexp^0,f,c
  7815  002626                     l3990:
  7816  002626  280F               	incf	___fladd@bexp^0,w,c
  7817  002628  B4D8               	btfsc	status,2,c
  7818  00262A  EF19  F013         	goto	u4141
  7819  00262E  EF1B  F013         	goto	u4140
  7820  002632                     u4141:
  7821  002632  EF23  F013         	goto	l3994
  7822  002636                     u4140:
  7823  002636  500F               	movf	___fladd@bexp^0,w,c
  7824  002638  A4D8               	btfss	status,2,c
  7825  00263A  EF21  F013         	goto	u4151
  7826  00263E  EF23  F013         	goto	u4150
  7827  002642                     u4151:
  7828  002642  EF35  F013         	goto	l3998
  7829  002646                     u4150:
  7830  002646                     l3994:
  7831  002646  0E00               	movlw	0
  7832  002648  6E01               	movwf	___fladd@b^0,c
  7833  00264A  0E00               	movlw	0
  7834  00264C  6E02               	movwf	(___fladd@b+1)^0,c
  7835  00264E  0E00               	movlw	0
  7836  002650  6E03               	movwf	(___fladd@b+2)^0,c
  7837  002652  0E00               	movlw	0
  7838  002654  6E04               	movwf	(___fladd@b+3)^0,c
  7839  002656  500F               	movf	___fladd@bexp^0,w,c
  7840  002658  A4D8               	btfss	status,2,c
  7841  00265A  EF31  F013         	goto	u4161
  7842  00265E  EF33  F013         	goto	u4160
  7843  002662                     u4161:
  7844  002662  EF35  F013         	goto	l3998
  7845  002666                     u4160:
  7846  002666  0E00               	movlw	0
  7847  002668  6E0D               	movwf	___fladd@signs^0,c
  7848  00266A                     l3998:
  7849  00266A  A00F               	btfss	___fladd@bexp^0,0,c
  7850  00266C  EF3A  F013         	goto	u4171
  7851  002670  EF3C  F013         	goto	u4170
  7852  002674                     u4171:
  7853  002674  EF3F  F013         	goto	l4002
  7854  002678                     u4170:
  7855  002678  8E03               	bsf	(___fladd@b+2)^0,7,c
  7856  00267A  EF40  F013         	goto	l4004
  7857  00267E                     l4002:
  7858  00267E  9E03               	bcf	(___fladd@b+2)^0,7,c
  7859  002680                     l4004:
  7860  002680  90D8               	bcf	status,0,c
  7861  002682  300F               	rrcf	___fladd@bexp^0,w,c
  7862  002684  6E04               	movwf	(___fladd@b+3)^0,c
  7863  002686  AE0D               	btfss	___fladd@signs^0,7,c
  7864  002688  EF48  F013         	goto	u4181
  7865  00268C  EF4A  F013         	goto	u4180
  7866  002690                     u4181:
  7867  002690  EF4B  F013         	goto	l4010
  7868  002694                     u4180:
  7869  002694  8E04               	bsf	(___fladd@b+3)^0,7,c
  7870  002696                     l4010:
  7871  002696  C001  F001         	movff	___fladd@b,?___fladd
  7872  00269A  C002  F002         	movff	___fladd@b+1,?___fladd+1
  7873  00269E  C003  F003         	movff	___fladd@b+2,?___fladd+2
  7874  0026A2  C004  F004         	movff	___fladd@b+3,?___fladd+3
  7875  0026A6                     l1032:
  7876  0026A6  0012               	return		;funcret
  7877  0026A8                     __end_of___fladd:
  7878                           	callstack 0
  7879                           
  7880 ;; *************** function ___flneg *****************
  7881 ;; Defined at:
  7882 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;  f1              4    0[COMRAM] unsigned char 
  7885 ;; Auto vars:     Size  Location     Type
  7886 ;;		None
  7887 ;; Return value:  Size  Location     Type
  7888 ;;                  4    0[COMRAM] unsigned char 
  7889 ;; Registers used:
  7890 ;;		wreg, status,2, status,0
  7891 ;; Tracked objects:
  7892 ;;		On entry : 0/0
  7893 ;;		On exit  : 0/0
  7894 ;;		Unchanged: 0/0
  7895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7896 ;;      Params:         4       0       0       0       0       0       0
  7897 ;;      Locals:         0       0       0       0       0       0       0
  7898 ;;      Temps:          0       0       0       0       0       0       0
  7899 ;;      Totals:         4       0       0       0       0       0       0
  7900 ;;Total ram usage:        4 bytes
  7901 ;; Hardware stack levels used:    1
  7902 ;; Hardware stack levels required when called:    1
  7903 ;; This function calls:
  7904 ;;		Nothing
  7905 ;; This function is called by:
  7906 ;;		_efgtoa
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           	psect	text20
  7911  004844                     __ptext20:
  7912                           	callstack 0
  7913  004844                     ___flneg:
  7914                           	callstack 23
  7915  004844  5001               	movf	___flneg@f1^0,w,c
  7916  004846  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7917  004848  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7918  00484A  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7919  00484C  B4D8               	btfsc	status,2,c
  7920  00484E  EF2B  F024         	goto	u4981
  7921  004852  EF2D  F024         	goto	u4980
  7922  004856                     u4981:
  7923  004856  EF35  F024         	goto	l4518
  7924  00485A                     u4980:
  7925  00485A  0E00               	movlw	0
  7926  00485C  1A01               	xorwf	___flneg@f1^0,f,c
  7927  00485E  0E00               	movlw	0
  7928  004860  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7929  004862  0E00               	movlw	0
  7930  004864  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7931  004866  0E80               	movlw	128
  7932  004868  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7933  00486A                     l4518:
  7934  00486A  C001  F001         	movff	___flneg@f1,?___flneg
  7935  00486E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7936  004872  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7937  004876  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7938  00487A  0012               	return		;funcret
  7939  00487C                     __end_of___flneg:
  7940                           	callstack 0
  7941                           
  7942 ;; *************** function ___flmul *****************
  7943 ;; Defined at:
  7944 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  7945 ;; Parameters:    Size  Location     Type
  7946 ;;  b               4    0[COMRAM] unsigned char 
  7947 ;;  a               4    4[COMRAM] unsigned char 
  7948 ;; Auto vars:     Size  Location     Type
  7949 ;;  prod            4   19[COMRAM] struct .
  7950 ;;  grs             4   13[COMRAM] unsigned long 
  7951 ;;  temp            2   23[COMRAM] struct .
  7952 ;;  bexp            1   18[COMRAM] unsigned char 
  7953 ;;  aexp            1   17[COMRAM] unsigned char 
  7954 ;;  sign            1   12[COMRAM] unsigned char 
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  4    0[COMRAM] unsigned char 
  7957 ;; Registers used:
  7958 ;;		wreg, status,2, status,0, prodl, prodh
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7964 ;;      Params:         8       0       0       0       0       0       0
  7965 ;;      Locals:        13       0       0       0       0       0       0
  7966 ;;      Temps:          4       0       0       0       0       0       0
  7967 ;;      Totals:        25       0       0       0       0       0       0
  7968 ;;Total ram usage:       25 bytes
  7969 ;; Hardware stack levels used:    1
  7970 ;; Hardware stack levels required when called:    1
  7971 ;; This function calls:
  7972 ;;		Nothing
  7973 ;; This function is called by:
  7974 ;;		_efgtoa
  7975 ;;		_scanAdcConversion
  7976 ;;		_speedControl
  7977 ;; This function uses a non-reentrant model
  7978 ;;
  7979                           
  7980                           	psect	text21
  7981  0026A8                     __ptext21:
  7982                           	callstack 0
  7983  0026A8                     ___flmul:
  7984                           	callstack 23
  7985  0026A8  5004               	movf	(___flmul@b+3)^0,w,c
  7986  0026AA  0B80               	andlw	128
  7987  0026AC  6E0D               	movwf	___flmul@sign^0,c
  7988  0026AE  5004               	movf	(___flmul@b+3)^0,w,c
  7989  0026B0  2404               	addwf	(___flmul@b+3)^0,w,c
  7990  0026B2  6E13               	movwf	___flmul@bexp^0,c
  7991  0026B4  AE03               	btfss	(___flmul@b+2)^0,7,c
  7992  0026B6  EF5F  F013         	goto	u4591
  7993  0026BA  EF61  F013         	goto	u4590
  7994  0026BE                     u4591:
  7995  0026BE  EF62  F013         	goto	l4266
  7996  0026C2                     u4590:
  7997  0026C2  8013               	bsf	___flmul@bexp^0,0,c
  7998  0026C4                     l4266:
  7999  0026C4  5013               	movf	___flmul@bexp^0,w,c
  8000  0026C6  B4D8               	btfsc	status,2,c
  8001  0026C8  EF68  F013         	goto	u4601
  8002  0026CC  EF6A  F013         	goto	u4600
  8003  0026D0                     u4601:
  8004  0026D0  EF7D  F013         	goto	l4274
  8005  0026D4                     u4600:
  8006  0026D4  2813               	incf	___flmul@bexp^0,w,c
  8007  0026D6  A4D8               	btfss	status,2,c
  8008  0026D8  EF70  F013         	goto	u4611
  8009  0026DC  EF72  F013         	goto	u4610
  8010  0026E0                     u4611:
  8011  0026E0  EF7A  F013         	goto	l4272
  8012  0026E4                     u4610:
  8013  0026E4  0E00               	movlw	0
  8014  0026E6  6E01               	movwf	___flmul@b^0,c
  8015  0026E8  0E00               	movlw	0
  8016  0026EA  6E02               	movwf	(___flmul@b+1)^0,c
  8017  0026EC  0E00               	movlw	0
  8018  0026EE  6E03               	movwf	(___flmul@b+2)^0,c
  8019  0026F0  0E00               	movlw	0
  8020  0026F2  6E04               	movwf	(___flmul@b+3)^0,c
  8021  0026F4                     l4272:
  8022  0026F4  8E03               	bsf	(___flmul@b+2)^0,7,c
  8023  0026F6  EF85  F013         	goto	l4276
  8024  0026FA                     l4274:
  8025  0026FA  0E00               	movlw	0
  8026  0026FC  6E01               	movwf	___flmul@b^0,c
  8027  0026FE  0E00               	movlw	0
  8028  002700  6E02               	movwf	(___flmul@b+1)^0,c
  8029  002702  0E00               	movlw	0
  8030  002704  6E03               	movwf	(___flmul@b+2)^0,c
  8031  002706  0E00               	movlw	0
  8032  002708  6E04               	movwf	(___flmul@b+3)^0,c
  8033  00270A                     l4276:
  8034  00270A  5008               	movf	(___flmul@a+3)^0,w,c
  8035  00270C  0B80               	andlw	128
  8036  00270E  1A0D               	xorwf	___flmul@sign^0,f,c
  8037  002710  5008               	movf	(___flmul@a+3)^0,w,c
  8038  002712  2408               	addwf	(___flmul@a+3)^0,w,c
  8039  002714  6E12               	movwf	___flmul@aexp^0,c
  8040  002716  AE07               	btfss	(___flmul@a+2)^0,7,c
  8041  002718  EF90  F013         	goto	u4621
  8042  00271C  EF92  F013         	goto	u4620
  8043  002720                     u4621:
  8044  002720  EF93  F013         	goto	l4284
  8045  002724                     u4620:
  8046  002724  8012               	bsf	___flmul@aexp^0,0,c
  8047  002726                     l4284:
  8048  002726  5012               	movf	___flmul@aexp^0,w,c
  8049  002728  B4D8               	btfsc	status,2,c
  8050  00272A  EF99  F013         	goto	u4631
  8051  00272E  EF9B  F013         	goto	u4630
  8052  002732                     u4631:
  8053  002732  EFAE  F013         	goto	l4292
  8054  002736                     u4630:
  8055  002736  2812               	incf	___flmul@aexp^0,w,c
  8056  002738  A4D8               	btfss	status,2,c
  8057  00273A  EFA1  F013         	goto	u4641
  8058  00273E  EFA3  F013         	goto	u4640
  8059  002742                     u4641:
  8060  002742  EFAB  F013         	goto	l4290
  8061  002746                     u4640:
  8062  002746  0E00               	movlw	0
  8063  002748  6E05               	movwf	___flmul@a^0,c
  8064  00274A  0E00               	movlw	0
  8065  00274C  6E06               	movwf	(___flmul@a+1)^0,c
  8066  00274E  0E00               	movlw	0
  8067  002750  6E07               	movwf	(___flmul@a+2)^0,c
  8068  002752  0E00               	movlw	0
  8069  002754  6E08               	movwf	(___flmul@a+3)^0,c
  8070  002756                     l4290:
  8071  002756  8E07               	bsf	(___flmul@a+2)^0,7,c
  8072  002758  EFB6  F013         	goto	l1109
  8073  00275C                     l4292:
  8074  00275C  0E00               	movlw	0
  8075  00275E  6E05               	movwf	___flmul@a^0,c
  8076  002760  0E00               	movlw	0
  8077  002762  6E06               	movwf	(___flmul@a+1)^0,c
  8078  002764  0E00               	movlw	0
  8079  002766  6E07               	movwf	(___flmul@a+2)^0,c
  8080  002768  0E00               	movlw	0
  8081  00276A  6E08               	movwf	(___flmul@a+3)^0,c
  8082  00276C                     l1109:
  8083  00276C  5012               	movf	___flmul@aexp^0,w,c
  8084  00276E  B4D8               	btfsc	status,2,c
  8085  002770  EFBC  F013         	goto	u4651
  8086  002774  EFBE  F013         	goto	u4650
  8087  002778                     u4651:
  8088  002778  EFC6  F013         	goto	l4296
  8089  00277C                     u4650:
  8090  00277C  5013               	movf	___flmul@bexp^0,w,c
  8091  00277E  A4D8               	btfss	status,2,c
  8092  002780  EFC4  F013         	goto	u4661
  8093  002784  EFC6  F013         	goto	u4660
  8094  002788                     u4661:
  8095  002788  EFD0  F013         	goto	l4300
  8096  00278C                     u4660:
  8097  00278C                     l4296:
  8098  00278C  0E00               	movlw	0
  8099  00278E  6E01               	movwf	?___flmul^0,c
  8100  002790  0E00               	movlw	0
  8101  002792  6E02               	movwf	(?___flmul+1)^0,c
  8102  002794  0E00               	movlw	0
  8103  002796  6E03               	movwf	(?___flmul+2)^0,c
  8104  002798  0E00               	movlw	0
  8105  00279A  6E04               	movwf	(?___flmul+3)^0,c
  8106  00279C  EF68  F015         	goto	l1113
  8107  0027A0                     l4300:
  8108  0027A0  5007               	movf	(___flmul@a+2)^0,w,c
  8109  0027A2  0201               	mulwf	___flmul@b^0,c
  8110  0027A4  CFF3 F018          	movff	prodl,___flmul@temp
  8111  0027A8  CFF4 F019          	movff	prodh,___flmul@temp+1
  8112  0027AC  5018               	movf	___flmul@temp^0,w,c
  8113  0027AE  6E0E               	movwf	___flmul@grs^0,c
  8114  0027B0  6A0F               	clrf	(___flmul@grs+1)^0,c
  8115  0027B2  6A10               	clrf	(___flmul@grs+2)^0,c
  8116  0027B4  6A11               	clrf	(___flmul@grs+3)^0,c
  8117  0027B6  5019               	movf	(___flmul@temp+1)^0,w,c
  8118  0027B8  6E14               	movwf	___flmul@prod^0,c
  8119  0027BA  6A15               	clrf	(___flmul@prod+1)^0,c
  8120  0027BC  6A16               	clrf	(___flmul@prod+2)^0,c
  8121  0027BE  6A17               	clrf	(___flmul@prod+3)^0,c
  8122  0027C0  5006               	movf	(___flmul@a+1)^0,w,c
  8123  0027C2  0202               	mulwf	(___flmul@b+1)^0,c
  8124  0027C4  CFF3 F018          	movff	prodl,___flmul@temp
  8125  0027C8  CFF4 F019          	movff	prodh,___flmul@temp+1
  8126  0027CC  5018               	movf	___flmul@temp^0,w,c
  8127  0027CE  260E               	addwf	___flmul@grs^0,f,c
  8128  0027D0  0E00               	movlw	0
  8129  0027D2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8130  0027D4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8131  0027D6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8132  0027D8  5019               	movf	(___flmul@temp+1)^0,w,c
  8133  0027DA  2614               	addwf	___flmul@prod^0,f,c
  8134  0027DC  0E00               	movlw	0
  8135  0027DE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8136  0027E0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8137  0027E2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8138  0027E4  5005               	movf	___flmul@a^0,w,c
  8139  0027E6  0203               	mulwf	(___flmul@b+2)^0,c
  8140  0027E8  CFF3 F018          	movff	prodl,___flmul@temp
  8141  0027EC  CFF4 F019          	movff	prodh,___flmul@temp+1
  8142  0027F0  5018               	movf	___flmul@temp^0,w,c
  8143  0027F2  260E               	addwf	___flmul@grs^0,f,c
  8144  0027F4  0E00               	movlw	0
  8145  0027F6  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8146  0027F8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8147  0027FA  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8148  0027FC  5019               	movf	(___flmul@temp+1)^0,w,c
  8149  0027FE  2614               	addwf	___flmul@prod^0,f,c
  8150  002800  0E00               	movlw	0
  8151  002802  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8152  002804  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8153  002806  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8154  002808  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8155  00280C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8156  002810  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8157  002814  6A0E               	clrf	___flmul@grs^0,c
  8158  002816  5005               	movf	___flmul@a^0,w,c
  8159  002818  0202               	mulwf	(___flmul@b+1)^0,c
  8160  00281A  CFF3 F018          	movff	prodl,___flmul@temp
  8161  00281E  CFF4 F019          	movff	prodh,___flmul@temp+1
  8162  002822  5018               	movf	___flmul@temp^0,w,c
  8163  002824  260E               	addwf	___flmul@grs^0,f,c
  8164  002826  5019               	movf	(___flmul@temp+1)^0,w,c
  8165  002828  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8166  00282A  0E00               	movlw	0
  8167  00282C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8168  00282E  0E00               	movlw	0
  8169  002830  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8170  002832  5006               	movf	(___flmul@a+1)^0,w,c
  8171  002834  0201               	mulwf	___flmul@b^0,c
  8172  002836  CFF3 F018          	movff	prodl,___flmul@temp
  8173  00283A  CFF4 F019          	movff	prodh,___flmul@temp+1
  8174  00283E  5018               	movf	___flmul@temp^0,w,c
  8175  002840  260E               	addwf	___flmul@grs^0,f,c
  8176  002842  5019               	movf	(___flmul@temp+1)^0,w,c
  8177  002844  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8178  002846  0E00               	movlw	0
  8179  002848  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8180  00284A  0E00               	movlw	0
  8181  00284C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8182  00284E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8183  002852  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8184  002856  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8185  00285A  6A0E               	clrf	___flmul@grs^0,c
  8186  00285C  5005               	movf	___flmul@a^0,w,c
  8187  00285E  0201               	mulwf	___flmul@b^0,c
  8188  002860  CFF3 F018          	movff	prodl,___flmul@temp
  8189  002864  CFF4 F019          	movff	prodh,___flmul@temp+1
  8190  002868  5018               	movf	___flmul@temp^0,w,c
  8191  00286A  260E               	addwf	___flmul@grs^0,f,c
  8192  00286C  5019               	movf	(___flmul@temp+1)^0,w,c
  8193  00286E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8194  002870  0E00               	movlw	0
  8195  002872  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8196  002874  0E00               	movlw	0
  8197  002876  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8198  002878  5007               	movf	(___flmul@a+2)^0,w,c
  8199  00287A  0202               	mulwf	(___flmul@b+1)^0,c
  8200  00287C  CFF3 F018          	movff	prodl,___flmul@temp
  8201  002880  CFF4 F019          	movff	prodh,___flmul@temp+1
  8202  002884  5018               	movf	___flmul@temp^0,w,c
  8203  002886  2614               	addwf	___flmul@prod^0,f,c
  8204  002888  5019               	movf	(___flmul@temp+1)^0,w,c
  8205  00288A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8206  00288C  0E00               	movlw	0
  8207  00288E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8208  002890  0E00               	movlw	0
  8209  002892  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8210  002894  5006               	movf	(___flmul@a+1)^0,w,c
  8211  002896  0203               	mulwf	(___flmul@b+2)^0,c
  8212  002898  CFF3 F018          	movff	prodl,___flmul@temp
  8213  00289C  CFF4 F019          	movff	prodh,___flmul@temp+1
  8214  0028A0  5018               	movf	___flmul@temp^0,w,c
  8215  0028A2  2614               	addwf	___flmul@prod^0,f,c
  8216  0028A4  5019               	movf	(___flmul@temp+1)^0,w,c
  8217  0028A6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8218  0028A8  0E00               	movlw	0
  8219  0028AA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8220  0028AC  0E00               	movlw	0
  8221  0028AE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8222  0028B0  5007               	movf	(___flmul@a+2)^0,w,c
  8223  0028B2  0203               	mulwf	(___flmul@b+2)^0,c
  8224  0028B4  CFF3 F018          	movff	prodl,___flmul@temp
  8225  0028B8  CFF4 F019          	movff	prodh,___flmul@temp+1
  8226  0028BC  5018               	movf	___flmul@temp^0,w,c
  8227  0028BE  6E09               	movwf	??___flmul^0,c
  8228  0028C0  5019               	movf	(___flmul@temp+1)^0,w,c
  8229  0028C2  6E0A               	movwf	(??___flmul+1)^0,c
  8230  0028C4  6A0B               	clrf	(??___flmul+2)^0,c
  8231  0028C6  6A0C               	clrf	(??___flmul+3)^0,c
  8232  0028C8  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  8233  0028CC  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  8234  0028D0  C009  F00A         	movff	??___flmul,??___flmul+1
  8235  0028D4  6A09               	clrf	??___flmul^0,c
  8236  0028D6  5009               	movf	??___flmul^0,w,c
  8237  0028D8  2614               	addwf	___flmul@prod^0,f,c
  8238  0028DA  500A               	movf	(??___flmul+1)^0,w,c
  8239  0028DC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8240  0028DE  500B               	movf	(??___flmul+2)^0,w,c
  8241  0028E0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8242  0028E2  500C               	movf	(??___flmul+3)^0,w,c
  8243  0028E4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8244  0028E6  C00E  F009         	movff	___flmul@grs,??___flmul
  8245  0028EA  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  8246  0028EE  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  8247  0028F2  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  8248  0028F6  0E19               	movlw	25
  8249  0028F8  EF83  F014         	goto	u4670
  8250  0028FC                     u4675:
  8251  0028FC  90D8               	bcf	status,0,c
  8252  0028FE  320C               	rrcf	(??___flmul+3)^0,f,c
  8253  002900  320B               	rrcf	(??___flmul+2)^0,f,c
  8254  002902  320A               	rrcf	(??___flmul+1)^0,f,c
  8255  002904  3209               	rrcf	??___flmul^0,f,c
  8256  002906                     u4670:
  8257  002906  2EE8               	decfsz	wreg,f,c
  8258  002908  EF7E  F014         	goto	u4675
  8259  00290C  5009               	movf	??___flmul^0,w,c
  8260  00290E  2614               	addwf	___flmul@prod^0,f,c
  8261  002910  500A               	movf	(??___flmul+1)^0,w,c
  8262  002912  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8263  002914  500B               	movf	(??___flmul+2)^0,w,c
  8264  002916  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8265  002918  500C               	movf	(??___flmul+3)^0,w,c
  8266  00291A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8267  00291C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8268  002920  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8269  002924  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8270  002928  6A0E               	clrf	___flmul@grs^0,c
  8271  00292A  5012               	movf	___flmul@aexp^0,w,c
  8272  00292C  C013  F009         	movff	___flmul@bexp,??___flmul
  8273  002930  6A0A               	clrf	(??___flmul+1)^0,c
  8274  002932  2609               	addwf	??___flmul^0,f,c
  8275  002934  0E00               	movlw	0
  8276  002936  220A               	addwfc	(??___flmul+1)^0,f,c
  8277  002938  0E82               	movlw	130
  8278  00293A  2409               	addwf	??___flmul^0,w,c
  8279  00293C  6E18               	movwf	___flmul@temp^0,c
  8280  00293E  0EFF               	movlw	255
  8281  002940  200A               	addwfc	(??___flmul+1)^0,w,c
  8282  002942  6E19               	movwf	(___flmul@temp+1)^0,c
  8283  002944  EFB9  F014         	goto	l4348
  8284  002948                     l4342:
  8285  002948  90D8               	bcf	status,0,c
  8286  00294A  3614               	rlcf	___flmul@prod^0,f,c
  8287  00294C  3615               	rlcf	(___flmul@prod+1)^0,f,c
  8288  00294E  3616               	rlcf	(___flmul@prod+2)^0,f,c
  8289  002950  3617               	rlcf	(___flmul@prod+3)^0,f,c
  8290  002952  AE11               	btfss	(___flmul@grs+3)^0,7,c
  8291  002954  EFAE  F014         	goto	u4681
  8292  002958  EFB0  F014         	goto	u4680
  8293  00295C                     u4681:
  8294  00295C  EFB1  F014         	goto	l1116
  8295  002960                     u4680:
  8296  002960  8014               	bsf	___flmul@prod^0,0,c
  8297  002962                     l1116:
  8298  002962  90D8               	bcf	status,0,c
  8299  002964  360E               	rlcf	___flmul@grs^0,f,c
  8300  002966  360F               	rlcf	(___flmul@grs+1)^0,f,c
  8301  002968  3610               	rlcf	(___flmul@grs+2)^0,f,c
  8302  00296A  3611               	rlcf	(___flmul@grs+3)^0,f,c
  8303  00296C  0618               	decf	___flmul@temp^0,f,c
  8304  00296E  A0D8               	btfss	status,0,c
  8305  002970  0619               	decf	(___flmul@temp+1)^0,f,c
  8306  002972                     l4348:
  8307  002972  AE16               	btfss	(___flmul@prod+2)^0,7,c
  8308  002974  EFBE  F014         	goto	u4691
  8309  002978  EFC0  F014         	goto	u4690
  8310  00297C                     u4691:
  8311  00297C  EFA4  F014         	goto	l4342
  8312  002980                     u4690:
  8313  002980  0E00               	movlw	0
  8314  002982  6E12               	movwf	___flmul@aexp^0,c
  8315  002984  AE11               	btfss	(___flmul@grs+3)^0,7,c
  8316  002986  EFC7  F014         	goto	u4701
  8317  00298A  EFC9  F014         	goto	u4700
  8318  00298E                     u4701:
  8319  00298E  EFED  F014         	goto	l1118
  8320  002992                     u4700:
  8321  002992  0EFF               	movlw	255
  8322  002994  140E               	andwf	___flmul@grs^0,w,c
  8323  002996  6E09               	movwf	??___flmul^0,c
  8324  002998  0EFF               	movlw	255
  8325  00299A  140F               	andwf	(___flmul@grs+1)^0,w,c
  8326  00299C  6E0A               	movwf	(??___flmul+1)^0,c
  8327  00299E  0EFF               	movlw	255
  8328  0029A0  1410               	andwf	(___flmul@grs+2)^0,w,c
  8329  0029A2  6E0B               	movwf	(??___flmul+2)^0,c
  8330  0029A4  0E7F               	movlw	127
  8331  0029A6  1411               	andwf	(___flmul@grs+3)^0,w,c
  8332  0029A8  6E0C               	movwf	(??___flmul+3)^0,c
  8333  0029AA  5009               	movf	??___flmul^0,w,c
  8334  0029AC  100A               	iorwf	(??___flmul+1)^0,w,c
  8335  0029AE  100B               	iorwf	(??___flmul+2)^0,w,c
  8336  0029B0  100C               	iorwf	(??___flmul+3)^0,w,c
  8337  0029B2  B4D8               	btfsc	status,2,c
  8338  0029B4  EFDE  F014         	goto	u4711
  8339  0029B8  EFE0  F014         	goto	u4710
  8340  0029BC                     u4711:
  8341  0029BC  EFE4  F014         	goto	l1119
  8342  0029C0                     u4710:
  8343  0029C0                     l4356:
  8344  0029C0  0E01               	movlw	1
  8345  0029C2  6E12               	movwf	___flmul@aexp^0,c
  8346  0029C4  EFED  F014         	goto	l1118
  8347  0029C8                     l1119:
  8348  0029C8  A014               	btfss	___flmul@prod^0,0,c
  8349  0029CA  EFE9  F014         	goto	u4721
  8350  0029CE  EFEB  F014         	goto	u4720
  8351  0029D2                     u4721:
  8352  0029D2  EFED  F014         	goto	l1118
  8353  0029D6                     u4720:
  8354  0029D6  EFE0  F014         	goto	l4356
  8355  0029DA                     l1118:
  8356  0029DA  5012               	movf	___flmul@aexp^0,w,c
  8357  0029DC  B4D8               	btfsc	status,2,c
  8358  0029DE  EFF3  F014         	goto	u4731
  8359  0029E2  EFF5  F014         	goto	u4730
  8360  0029E6                     u4731:
  8361  0029E6  EF19  F015         	goto	l4368
  8362  0029EA                     u4730:
  8363  0029EA  0E01               	movlw	1
  8364  0029EC  2614               	addwf	___flmul@prod^0,f,c
  8365  0029EE  0E00               	movlw	0
  8366  0029F0  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8367  0029F2  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8368  0029F4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8369  0029F6  A017               	btfss	(___flmul@prod+3)^0,0,c
  8370  0029F8  EF00  F015         	goto	u4741
  8371  0029FC  EF02  F015         	goto	u4740
  8372  002A00                     u4741:
  8373  002A00  EF19  F015         	goto	l4368
  8374  002A04                     u4740:
  8375  002A04  C014  F009         	movff	___flmul@prod,??___flmul
  8376  002A08  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  8377  002A0C  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  8378  002A10  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  8379  002A14  340C               	rlcf	(??___flmul+3)^0,w,c
  8380  002A16  320C               	rrcf	(??___flmul+3)^0,f,c
  8381  002A18  320B               	rrcf	(??___flmul+2)^0,f,c
  8382  002A1A  320A               	rrcf	(??___flmul+1)^0,f,c
  8383  002A1C  3209               	rrcf	??___flmul^0,f,c
  8384  002A1E  C009  F014         	movff	??___flmul,___flmul@prod
  8385  002A22  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  8386  002A26  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  8387  002A2A  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  8388  002A2E  4A18               	infsnz	___flmul@temp^0,f,c
  8389  002A30  2A19               	incf	(___flmul@temp+1)^0,f,c
  8390  002A32                     l4368:
  8391  002A32  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8392  002A34  EF24  F015         	goto	u4751
  8393  002A38  5019               	movf	(___flmul@temp+1)^0,w,c
  8394  002A3A  E108               	bnz	u4750
  8395  002A3C  2818               	incf	___flmul@temp^0,w,c
  8396  002A3E  A0D8               	btfss	status,0,c
  8397  002A40  EF24  F015         	goto	u4751
  8398  002A44  EF26  F015         	goto	u4750
  8399  002A48                     u4751:
  8400  002A48  EF30  F015         	goto	l4372
  8401  002A4C                     u4750:
  8402  002A4C  0E00               	movlw	0
  8403  002A4E  6E14               	movwf	___flmul@prod^0,c
  8404  002A50  0E00               	movlw	0
  8405  002A52  6E15               	movwf	(___flmul@prod+1)^0,c
  8406  002A54  0E80               	movlw	128
  8407  002A56  6E16               	movwf	(___flmul@prod+2)^0,c
  8408  002A58  0E7F               	movlw	127
  8409  002A5A  6E17               	movwf	(___flmul@prod+3)^0,c
  8410  002A5C  EF5E  F015         	goto	l4384
  8411  002A60                     l4372:
  8412  002A60  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8413  002A62  EF3D  F015         	goto	u4760
  8414  002A66  5019               	movf	(___flmul@temp+1)^0,w,c
  8415  002A68  E106               	bnz	u4761
  8416  002A6A  0418               	decf	___flmul@temp^0,w,c
  8417  002A6C  B0D8               	btfsc	status,0,c
  8418  002A6E  EF3B  F015         	goto	u4761
  8419  002A72  EF3D  F015         	goto	u4760
  8420  002A76                     u4761:
  8421  002A76  EF49  F015         	goto	l1126
  8422  002A7A                     u4760:
  8423  002A7A  0E00               	movlw	0
  8424  002A7C  6E14               	movwf	___flmul@prod^0,c
  8425  002A7E  0E00               	movlw	0
  8426  002A80  6E15               	movwf	(___flmul@prod+1)^0,c
  8427  002A82  0E00               	movlw	0
  8428  002A84  6E16               	movwf	(___flmul@prod+2)^0,c
  8429  002A86  0E00               	movlw	0
  8430  002A88  6E17               	movwf	(___flmul@prod+3)^0,c
  8431  002A8A  0E00               	movlw	0
  8432  002A8C  6E0D               	movwf	___flmul@sign^0,c
  8433  002A8E  EF5E  F015         	goto	l4384
  8434  002A92                     l1126:
  8435  002A92  C018  F013         	movff	___flmul@temp,___flmul@bexp
  8436  002A96  0EFF               	movlw	255
  8437  002A98  1614               	andwf	___flmul@prod^0,f,c
  8438  002A9A  0EFF               	movlw	255
  8439  002A9C  1615               	andwf	(___flmul@prod+1)^0,f,c
  8440  002A9E  0E7F               	movlw	127
  8441  002AA0  1616               	andwf	(___flmul@prod+2)^0,f,c
  8442  002AA2  0E00               	movlw	0
  8443  002AA4  1617               	andwf	(___flmul@prod+3)^0,f,c
  8444  002AA6  A013               	btfss	___flmul@bexp^0,0,c
  8445  002AA8  EF58  F015         	goto	u4771
  8446  002AAC  EF5A  F015         	goto	u4770
  8447  002AB0                     u4771:
  8448  002AB0  EF5B  F015         	goto	l4382
  8449  002AB4                     u4770:
  8450  002AB4  8E16               	bsf	(___flmul@prod+2)^0,7,c
  8451  002AB6                     l4382:
  8452  002AB6  90D8               	bcf	status,0,c
  8453  002AB8  3013               	rrcf	___flmul@bexp^0,w,c
  8454  002ABA  6E17               	movwf	(___flmul@prod+3)^0,c
  8455  002ABC                     l4384:
  8456  002ABC  500D               	movf	___flmul@sign^0,w,c
  8457  002ABE  1217               	iorwf	(___flmul@prod+3)^0,f,c
  8458  002AC0  C014  F001         	movff	___flmul@prod,?___flmul
  8459  002AC4  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  8460  002AC8  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  8461  002ACC  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  8462  002AD0                     l1113:
  8463  002AD0  0012               	return		;funcret
  8464  002AD2                     __end_of___flmul:
  8465                           	callstack 0
  8466                           
  8467 ;; *************** function ___flge *****************
  8468 ;; Defined at:
  8469 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  8470 ;; Parameters:    Size  Location     Type
  8471 ;;  ff1             4   25[COMRAM] unsigned char 
  8472 ;;  ff2             4   29[COMRAM] unsigned char 
  8473 ;; Auto vars:     Size  Location     Type
  8474 ;;		None
  8475 ;; Return value:  Size  Location     Type
  8476 ;;		None               void
  8477 ;; Registers used:
  8478 ;;		wreg, status,2, status,0
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8484 ;;      Params:         8       0       0       0       0       0       0
  8485 ;;      Locals:         0       0       0       0       0       0       0
  8486 ;;      Temps:          4       0       0       0       0       0       0
  8487 ;;      Totals:        12       0       0       0       0       0       0
  8488 ;;Total ram usage:       12 bytes
  8489 ;; Hardware stack levels used:    1
  8490 ;; Hardware stack levels required when called:    1
  8491 ;; This function calls:
  8492 ;;		Nothing
  8493 ;; This function is called by:
  8494 ;;		_stateMachine
  8495 ;;		_efgtoa
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           
  8499                           	psect	text22
  8500  003BAE                     __ptext22:
  8501                           	callstack 0
  8502  003BAE                     ___flge:
  8503                           	callstack 23
  8504  003BAE  0E00               	movlw	0
  8505  003BB0  141A               	andwf	___flge@ff1^0,w,c
  8506  003BB2  6E22               	movwf	??___flge^0,c
  8507  003BB4  0E00               	movlw	0
  8508  003BB6  141B               	andwf	(___flge@ff1+1)^0,w,c
  8509  003BB8  6E23               	movwf	(??___flge+1)^0,c
  8510  003BBA  0E80               	movlw	128
  8511  003BBC  141C               	andwf	(___flge@ff1+2)^0,w,c
  8512  003BBE  6E24               	movwf	(??___flge+2)^0,c
  8513  003BC0  0E7F               	movlw	127
  8514  003BC2  141D               	andwf	(___flge@ff1+3)^0,w,c
  8515  003BC4  6E25               	movwf	(??___flge+3)^0,c
  8516  003BC6  5022               	movf	??___flge^0,w,c
  8517  003BC8  1023               	iorwf	(??___flge+1)^0,w,c
  8518  003BCA  1024               	iorwf	(??___flge+2)^0,w,c
  8519  003BCC  1025               	iorwf	(??___flge+3)^0,w,c
  8520  003BCE  A4D8               	btfss	status,2,c
  8521  003BD0  EFEC  F01D         	goto	u4931
  8522  003BD4  EFEE  F01D         	goto	u4930
  8523  003BD8                     u4931:
  8524  003BD8  EFF6  F01D         	goto	l4496
  8525  003BDC                     u4930:
  8526  003BDC  0E00               	movlw	0
  8527  003BDE  6E1A               	movwf	___flge@ff1^0,c
  8528  003BE0  0E00               	movlw	0
  8529  003BE2  6E1B               	movwf	(___flge@ff1+1)^0,c
  8530  003BE4  0E00               	movlw	0
  8531  003BE6  6E1C               	movwf	(___flge@ff1+2)^0,c
  8532  003BE8  0E00               	movlw	0
  8533  003BEA  6E1D               	movwf	(___flge@ff1+3)^0,c
  8534  003BEC                     l4496:
  8535  003BEC  0E00               	movlw	0
  8536  003BEE  141E               	andwf	___flge@ff2^0,w,c
  8537  003BF0  6E22               	movwf	??___flge^0,c
  8538  003BF2  0E00               	movlw	0
  8539  003BF4  141F               	andwf	(___flge@ff2+1)^0,w,c
  8540  003BF6  6E23               	movwf	(??___flge+1)^0,c
  8541  003BF8  0E80               	movlw	128
  8542  003BFA  1420               	andwf	(___flge@ff2+2)^0,w,c
  8543  003BFC  6E24               	movwf	(??___flge+2)^0,c
  8544  003BFE  0E7F               	movlw	127
  8545  003C00  1421               	andwf	(___flge@ff2+3)^0,w,c
  8546  003C02  6E25               	movwf	(??___flge+3)^0,c
  8547  003C04  5022               	movf	??___flge^0,w,c
  8548  003C06  1023               	iorwf	(??___flge+1)^0,w,c
  8549  003C08  1024               	iorwf	(??___flge+2)^0,w,c
  8550  003C0A  1025               	iorwf	(??___flge+3)^0,w,c
  8551  003C0C  A4D8               	btfss	status,2,c
  8552  003C0E  EF0B  F01E         	goto	u4941
  8553  003C12  EF0D  F01E         	goto	u4940
  8554  003C16                     u4941:
  8555  003C16  EF15  F01E         	goto	l4500
  8556  003C1A                     u4940:
  8557  003C1A  0E00               	movlw	0
  8558  003C1C  6E1E               	movwf	___flge@ff2^0,c
  8559  003C1E  0E00               	movlw	0
  8560  003C20  6E1F               	movwf	(___flge@ff2+1)^0,c
  8561  003C22  0E00               	movlw	0
  8562  003C24  6E20               	movwf	(___flge@ff2+2)^0,c
  8563  003C26  0E00               	movlw	0
  8564  003C28  6E21               	movwf	(___flge@ff2+3)^0,c
  8565  003C2A                     l4500:
  8566  003C2A  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  8567  003C2C  EF1A  F01E         	goto	u4951
  8568  003C30  EF1C  F01E         	goto	u4950
  8569  003C34                     u4951:
  8570  003C34  EF25  F01E         	goto	l4504
  8571  003C38                     u4950:
  8572  003C38  6C1A               	negf	___flge@ff1^0,c
  8573  003C3A  1E1B               	comf	(___flge@ff1+1)^0,f,c
  8574  003C3C  B0D8               	btfsc	status,0,c
  8575  003C3E  2A1B               	incf	(___flge@ff1+1)^0,f,c
  8576  003C40  1E1C               	comf	(___flge@ff1+2)^0,f,c
  8577  003C42  B0D8               	btfsc	status,0,c
  8578  003C44  2A1C               	incf	(___flge@ff1+2)^0,f,c
  8579  003C46  0E80               	movlw	128
  8580  003C48  561D               	subfwb	(___flge@ff1+3)^0,f,c
  8581  003C4A                     l4504:
  8582  003C4A  AE21               	btfss	(___flge@ff2+3)^0,7,c
  8583  003C4C  EF2A  F01E         	goto	u4961
  8584  003C50  EF2C  F01E         	goto	u4960
  8585  003C54                     u4961:
  8586  003C54  EF35  F01E         	goto	l760
  8587  003C58                     u4960:
  8588  003C58  6C1E               	negf	___flge@ff2^0,c
  8589  003C5A  1E1F               	comf	(___flge@ff2+1)^0,f,c
  8590  003C5C  B0D8               	btfsc	status,0,c
  8591  003C5E  2A1F               	incf	(___flge@ff2+1)^0,f,c
  8592  003C60  1E20               	comf	(___flge@ff2+2)^0,f,c
  8593  003C62  B0D8               	btfsc	status,0,c
  8594  003C64  2A20               	incf	(___flge@ff2+2)^0,f,c
  8595  003C66  0E80               	movlw	128
  8596  003C68  5621               	subfwb	(___flge@ff2+3)^0,f,c
  8597  003C6A                     l760:
  8598  003C6A  0E00               	movlw	0
  8599  003C6C  1A1A               	xorwf	___flge@ff1^0,f,c
  8600  003C6E  0E00               	movlw	0
  8601  003C70  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  8602  003C72  0E00               	movlw	0
  8603  003C74  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  8604  003C76  0E80               	movlw	128
  8605  003C78  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  8606  003C7A  0E00               	movlw	0
  8607  003C7C  1A1E               	xorwf	___flge@ff2^0,f,c
  8608  003C7E  0E00               	movlw	0
  8609  003C80  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  8610  003C82  0E00               	movlw	0
  8611  003C84  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  8612  003C86  0E80               	movlw	128
  8613  003C88  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  8614  003C8A  501E               	movf	___flge@ff2^0,w,c
  8615  003C8C  5C1A               	subwf	___flge@ff1^0,w,c
  8616  003C8E  501F               	movf	(___flge@ff2+1)^0,w,c
  8617  003C90  581B               	subwfb	(___flge@ff1+1)^0,w,c
  8618  003C92  5020               	movf	(___flge@ff2+2)^0,w,c
  8619  003C94  581C               	subwfb	(___flge@ff1+2)^0,w,c
  8620  003C96  5021               	movf	(___flge@ff2+3)^0,w,c
  8621  003C98  581D               	subwfb	(___flge@ff1+3)^0,w,c
  8622  003C9A  B0D8               	btfsc	status,0,c
  8623  003C9C  EF52  F01E         	goto	u4971
  8624  003CA0  EF54  F01E         	goto	u4970
  8625  003CA4                     u4971:
  8626  003CA4  EF57  F01E         	goto	l4510
  8627  003CA8                     u4970:
  8628  003CA8  90D8               	bcf	status,0,c
  8629  003CAA  EF58  F01E         	goto	l765
  8630  003CAE                     l4510:
  8631  003CAE  80D8               	bsf	status,0,c
  8632  003CB0                     l765:
  8633  003CB0  0012               	return		;funcret
  8634  003CB2                     __end_of___flge:
  8635                           	callstack 0
  8636                           
  8637 ;; *************** function ___fleq *****************
  8638 ;; Defined at:
  8639 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;  ff1             4    0[COMRAM] unsigned char 
  8642 ;;  ff2             4    4[COMRAM] unsigned char 
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;		None
  8645 ;; Return value:  Size  Location     Type
  8646 ;;		None               void
  8647 ;; Registers used:
  8648 ;;		wreg, status,2, status,0
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8654 ;;      Params:         8       0       0       0       0       0       0
  8655 ;;      Locals:         0       0       0       0       0       0       0
  8656 ;;      Temps:          4       0       0       0       0       0       0
  8657 ;;      Totals:        12       0       0       0       0       0       0
  8658 ;;Total ram usage:       12 bytes
  8659 ;; Hardware stack levels used:    1
  8660 ;; Hardware stack levels required when called:    1
  8661 ;; This function calls:
  8662 ;;		Nothing
  8663 ;; This function is called by:
  8664 ;;		_efgtoa
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668                           	psect	text23
  8669  00425A                     __ptext23:
  8670                           	callstack 0
  8671  00425A                     ___fleq:
  8672                           	callstack 23
  8673  00425A  0E00               	movlw	0
  8674  00425C  1401               	andwf	___fleq@ff1^0,w,c
  8675  00425E  6E09               	movwf	??___fleq^0,c
  8676  004260  0E00               	movlw	0
  8677  004262  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8678  004264  6E0A               	movwf	(??___fleq+1)^0,c
  8679  004266  0E80               	movlw	128
  8680  004268  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8681  00426A  6E0B               	movwf	(??___fleq+2)^0,c
  8682  00426C  0E7F               	movlw	127
  8683  00426E  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8684  004270  6E0C               	movwf	(??___fleq+3)^0,c
  8685  004272  5009               	movf	??___fleq^0,w,c
  8686  004274  100A               	iorwf	(??___fleq+1)^0,w,c
  8687  004276  100B               	iorwf	(??___fleq+2)^0,w,c
  8688  004278  100C               	iorwf	(??___fleq+3)^0,w,c
  8689  00427A  A4D8               	btfss	status,2,c
  8690  00427C  EF42  F021         	goto	u4901
  8691  004280  EF44  F021         	goto	u4900
  8692  004284                     u4901:
  8693  004284  EF4C  F021         	goto	l4480
  8694  004288                     u4900:
  8695  004288  0E00               	movlw	0
  8696  00428A  6E01               	movwf	___fleq@ff1^0,c
  8697  00428C  0E00               	movlw	0
  8698  00428E  6E02               	movwf	(___fleq@ff1+1)^0,c
  8699  004290  0E00               	movlw	0
  8700  004292  6E03               	movwf	(___fleq@ff1+2)^0,c
  8701  004294  0E00               	movlw	0
  8702  004296  6E04               	movwf	(___fleq@ff1+3)^0,c
  8703  004298                     l4480:
  8704  004298  0E00               	movlw	0
  8705  00429A  1405               	andwf	___fleq@ff2^0,w,c
  8706  00429C  6E09               	movwf	??___fleq^0,c
  8707  00429E  0E00               	movlw	0
  8708  0042A0  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8709  0042A2  6E0A               	movwf	(??___fleq+1)^0,c
  8710  0042A4  0E80               	movlw	128
  8711  0042A6  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8712  0042A8  6E0B               	movwf	(??___fleq+2)^0,c
  8713  0042AA  0E7F               	movlw	127
  8714  0042AC  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8715  0042AE  6E0C               	movwf	(??___fleq+3)^0,c
  8716  0042B0  5009               	movf	??___fleq^0,w,c
  8717  0042B2  100A               	iorwf	(??___fleq+1)^0,w,c
  8718  0042B4  100B               	iorwf	(??___fleq+2)^0,w,c
  8719  0042B6  100C               	iorwf	(??___fleq+3)^0,w,c
  8720  0042B8  A4D8               	btfss	status,2,c
  8721  0042BA  EF61  F021         	goto	u4911
  8722  0042BE  EF63  F021         	goto	u4910
  8723  0042C2                     u4911:
  8724  0042C2  EF6B  F021         	goto	l4484
  8725  0042C6                     u4910:
  8726  0042C6  0E00               	movlw	0
  8727  0042C8  6E05               	movwf	___fleq@ff2^0,c
  8728  0042CA  0E00               	movlw	0
  8729  0042CC  6E06               	movwf	(___fleq@ff2+1)^0,c
  8730  0042CE  0E00               	movlw	0
  8731  0042D0  6E07               	movwf	(___fleq@ff2+2)^0,c
  8732  0042D2  0E00               	movlw	0
  8733  0042D4  6E08               	movwf	(___fleq@ff2+3)^0,c
  8734  0042D6                     l4484:
  8735  0042D6  5005               	movf	___fleq@ff2^0,w,c
  8736  0042D8  1801               	xorwf	___fleq@ff1^0,w,c
  8737  0042DA  E10F               	bnz	u4920
  8738  0042DC  5006               	movf	(___fleq@ff2+1)^0,w,c
  8739  0042DE  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8740  0042E0  E10C               	bnz	u4920
  8741  0042E2  5007               	movf	(___fleq@ff2+2)^0,w,c
  8742  0042E4  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8743  0042E6  E109               	bnz	u4920
  8744  0042E8  5008               	movf	(___fleq@ff2+3)^0,w,c
  8745  0042EA  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8746  0042EC  B4D8               	btfsc	status,2,c
  8747  0042EE  EF7B  F021         	goto	u4921
  8748  0042F2  EF7D  F021         	goto	u4920
  8749  0042F6                     u4921:
  8750  0042F6  EF80  F021         	goto	l4488
  8751  0042FA                     u4920:
  8752  0042FA  90D8               	bcf	status,0,c
  8753  0042FC  EF81  F021         	goto	l754
  8754  004300                     l4488:
  8755  004300  80D8               	bsf	status,0,c
  8756  004302                     l754:
  8757  004302  0012               	return		;funcret
  8758  004304                     __end_of___fleq:
  8759                           	callstack 0
  8760                           
  8761 ;; *************** function ___fldiv *****************
  8762 ;; Defined at:
  8763 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  8764 ;; Parameters:    Size  Location     Type
  8765 ;;  b               4    0[COMRAM] unsigned char 
  8766 ;;  a               4    4[COMRAM] unsigned char 
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;  grs             4   19[COMRAM] unsigned long 
  8769 ;;  rem             4   12[COMRAM] unsigned long 
  8770 ;;  new_exp         2   17[COMRAM] short 
  8771 ;;  aexp            1   24[COMRAM] unsigned char 
  8772 ;;  bexp            1   23[COMRAM] unsigned char 
  8773 ;;  sign            1   16[COMRAM] unsigned char 
  8774 ;; Return value:  Size  Location     Type
  8775 ;;                  4    0[COMRAM] unsigned char 
  8776 ;; Registers used:
  8777 ;;		wreg, status,2, status,0
  8778 ;; Tracked objects:
  8779 ;;		On entry : 0/0
  8780 ;;		On exit  : 0/0
  8781 ;;		Unchanged: 0/0
  8782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8783 ;;      Params:         8       0       0       0       0       0       0
  8784 ;;      Locals:        13       0       0       0       0       0       0
  8785 ;;      Temps:          4       0       0       0       0       0       0
  8786 ;;      Totals:        25       0       0       0       0       0       0
  8787 ;;Total ram usage:       25 bytes
  8788 ;; Hardware stack levels used:    1
  8789 ;; Hardware stack levels required when called:    1
  8790 ;; This function calls:
  8791 ;;		Nothing
  8792 ;; This function is called by:
  8793 ;;		_efgtoa
  8794 ;;		_scanAdcConversion
  8795 ;; This function uses a non-reentrant model
  8796 ;;
  8797                           
  8798                           	psect	text24
  8799  002AD2                     __ptext24:
  8800                           	callstack 0
  8801  002AD2                     ___fldiv:
  8802                           	callstack 23
  8803  002AD2  5004               	movf	(___fldiv@b+3)^0,w,c
  8804  002AD4  0B80               	andlw	128
  8805  002AD6  6E11               	movwf	___fldiv@sign^0,c
  8806  002AD8  5004               	movf	(___fldiv@b+3)^0,w,c
  8807  002ADA  2404               	addwf	(___fldiv@b+3)^0,w,c
  8808  002ADC  6E18               	movwf	___fldiv@bexp^0,c
  8809  002ADE  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8810  002AE0  EF74  F015         	goto	u4361
  8811  002AE4  EF76  F015         	goto	u4360
  8812  002AE8                     u4361:
  8813  002AE8  EF77  F015         	goto	l4128
  8814  002AEC                     u4360:
  8815  002AEC  8018               	bsf	___fldiv@bexp^0,0,c
  8816  002AEE                     l4128:
  8817  002AEE  5018               	movf	___fldiv@bexp^0,w,c
  8818  002AF0  B4D8               	btfsc	status,2,c
  8819  002AF2  EF7D  F015         	goto	u4371
  8820  002AF6  EF7F  F015         	goto	u4370
  8821  002AFA                     u4371:
  8822  002AFA  EF94  F015         	goto	l4138
  8823  002AFE                     u4370:
  8824  002AFE  2818               	incf	___fldiv@bexp^0,w,c
  8825  002B00  A4D8               	btfss	status,2,c
  8826  002B02  EF85  F015         	goto	u4381
  8827  002B06  EF87  F015         	goto	u4380
  8828  002B0A                     u4381:
  8829  002B0A  EF8F  F015         	goto	l4134
  8830  002B0E                     u4380:
  8831  002B0E  0E00               	movlw	0
  8832  002B10  6E01               	movwf	___fldiv@b^0,c
  8833  002B12  0E00               	movlw	0
  8834  002B14  6E02               	movwf	(___fldiv@b+1)^0,c
  8835  002B16  0E00               	movlw	0
  8836  002B18  6E03               	movwf	(___fldiv@b+2)^0,c
  8837  002B1A  0E00               	movlw	0
  8838  002B1C  6E04               	movwf	(___fldiv@b+3)^0,c
  8839  002B1E                     l4134:
  8840  002B1E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8841  002B20  0E00               	movlw	0
  8842  002B22  6E04               	movwf	(___fldiv@b+3)^0,c
  8843  002B24  EF9C  F015         	goto	l4140
  8844  002B28                     l4138:
  8845  002B28  0E00               	movlw	0
  8846  002B2A  6E01               	movwf	___fldiv@b^0,c
  8847  002B2C  0E00               	movlw	0
  8848  002B2E  6E02               	movwf	(___fldiv@b+1)^0,c
  8849  002B30  0E00               	movlw	0
  8850  002B32  6E03               	movwf	(___fldiv@b+2)^0,c
  8851  002B34  0E00               	movlw	0
  8852  002B36  6E04               	movwf	(___fldiv@b+3)^0,c
  8853  002B38                     l4140:
  8854  002B38  5008               	movf	(___fldiv@a+3)^0,w,c
  8855  002B3A  0B80               	andlw	128
  8856  002B3C  1A11               	xorwf	___fldiv@sign^0,f,c
  8857  002B3E  5008               	movf	(___fldiv@a+3)^0,w,c
  8858  002B40  2408               	addwf	(___fldiv@a+3)^0,w,c
  8859  002B42  6E19               	movwf	___fldiv@aexp^0,c
  8860  002B44  AE07               	btfss	(___fldiv@a+2)^0,7,c
  8861  002B46  EFA7  F015         	goto	u4391
  8862  002B4A  EFA9  F015         	goto	u4390
  8863  002B4E                     u4391:
  8864  002B4E  EFAA  F015         	goto	l4148
  8865  002B52                     u4390:
  8866  002B52  8019               	bsf	___fldiv@aexp^0,0,c
  8867  002B54                     l4148:
  8868  002B54  5019               	movf	___fldiv@aexp^0,w,c
  8869  002B56  B4D8               	btfsc	status,2,c
  8870  002B58  EFB0  F015         	goto	u4401
  8871  002B5C  EFB2  F015         	goto	u4400
  8872  002B60                     u4401:
  8873  002B60  EFC7  F015         	goto	l4158
  8874  002B64                     u4400:
  8875  002B64  2819               	incf	___fldiv@aexp^0,w,c
  8876  002B66  A4D8               	btfss	status,2,c
  8877  002B68  EFB8  F015         	goto	u4411
  8878  002B6C  EFBA  F015         	goto	u4410
  8879  002B70                     u4411:
  8880  002B70  EFC2  F015         	goto	l4154
  8881  002B74                     u4410:
  8882  002B74  0E00               	movlw	0
  8883  002B76  6E05               	movwf	___fldiv@a^0,c
  8884  002B78  0E00               	movlw	0
  8885  002B7A  6E06               	movwf	(___fldiv@a+1)^0,c
  8886  002B7C  0E00               	movlw	0
  8887  002B7E  6E07               	movwf	(___fldiv@a+2)^0,c
  8888  002B80  0E00               	movlw	0
  8889  002B82  6E08               	movwf	(___fldiv@a+3)^0,c
  8890  002B84                     l4154:
  8891  002B84  8E07               	bsf	(___fldiv@a+2)^0,7,c
  8892  002B86  0E00               	movlw	0
  8893  002B88  6E08               	movwf	(___fldiv@a+3)^0,c
  8894  002B8A  EFCF  F015         	goto	l4160
  8895  002B8E                     l4158:
  8896  002B8E  0E00               	movlw	0
  8897  002B90  6E05               	movwf	___fldiv@a^0,c
  8898  002B92  0E00               	movlw	0
  8899  002B94  6E06               	movwf	(___fldiv@a+1)^0,c
  8900  002B96  0E00               	movlw	0
  8901  002B98  6E07               	movwf	(___fldiv@a+2)^0,c
  8902  002B9A  0E00               	movlw	0
  8903  002B9C  6E08               	movwf	(___fldiv@a+3)^0,c
  8904  002B9E                     l4160:
  8905  002B9E  5005               	movf	___fldiv@a^0,w,c
  8906  002BA0  1006               	iorwf	(___fldiv@a+1)^0,w,c
  8907  002BA2  1007               	iorwf	(___fldiv@a+2)^0,w,c
  8908  002BA4  1008               	iorwf	(___fldiv@a+3)^0,w,c
  8909  002BA6  A4D8               	btfss	status,2,c
  8910  002BA8  EFD8  F015         	goto	u4421
  8911  002BAC  EFDA  F015         	goto	u4420
  8912  002BB0                     u4421:
  8913  002BB0  EFF2  F015         	goto	l4172
  8914  002BB4                     u4420:
  8915  002BB4  0E00               	movlw	0
  8916  002BB6  6E01               	movwf	___fldiv@b^0,c
  8917  002BB8  0E00               	movlw	0
  8918  002BBA  6E02               	movwf	(___fldiv@b+1)^0,c
  8919  002BBC  0E00               	movlw	0
  8920  002BBE  6E03               	movwf	(___fldiv@b+2)^0,c
  8921  002BC0  0E00               	movlw	0
  8922  002BC2  6E04               	movwf	(___fldiv@b+3)^0,c
  8923  002BC4  0E80               	movlw	128
  8924  002BC6  1203               	iorwf	(___fldiv@b+2)^0,f,c
  8925  002BC8  0E7F               	movlw	127
  8926  002BCA  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8927  002BCC                     l4166:
  8928  002BCC  5011               	movf	___fldiv@sign^0,w,c
  8929  002BCE  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8930  002BD0  C001  F001         	movff	___fldiv@b,?___fldiv
  8931  002BD4  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  8932  002BD8  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  8933  002BDC  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  8934  002BE0  EF35  F017         	goto	l1077
  8935  002BE4                     l4172:
  8936  002BE4  5018               	movf	___fldiv@bexp^0,w,c
  8937  002BE6  A4D8               	btfss	status,2,c
  8938  002BE8  EFF8  F015         	goto	u4431
  8939  002BEC  EFFA  F015         	goto	u4430
  8940  002BF0                     u4431:
  8941  002BF0  EF04  F016         	goto	l4180
  8942  002BF4                     u4430:
  8943  002BF4  0E00               	movlw	0
  8944  002BF6  6E01               	movwf	?___fldiv^0,c
  8945  002BF8  0E00               	movlw	0
  8946  002BFA  6E02               	movwf	(?___fldiv+1)^0,c
  8947  002BFC  0E00               	movlw	0
  8948  002BFE  6E03               	movwf	(?___fldiv+2)^0,c
  8949  002C00  0E00               	movlw	0
  8950  002C02  6E04               	movwf	(?___fldiv+3)^0,c
  8951  002C04  EF35  F017         	goto	l1077
  8952  002C08                     l4180:
  8953  002C08  5019               	movf	___fldiv@aexp^0,w,c
  8954  002C0A  C018  F009         	movff	___fldiv@bexp,??___fldiv
  8955  002C0E  6A0A               	clrf	(??___fldiv+1)^0,c
  8956  002C10  5E09               	subwf	??___fldiv^0,f,c
  8957  002C12  0E00               	movlw	0
  8958  002C14  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  8959  002C16  0E7F               	movlw	127
  8960  002C18  2409               	addwf	??___fldiv^0,w,c
  8961  002C1A  6E12               	movwf	___fldiv@new_exp^0,c
  8962  002C1C  0E00               	movlw	0
  8963  002C1E  200A               	addwfc	(??___fldiv+1)^0,w,c
  8964  002C20  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8965  002C22  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  8966  002C26  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  8967  002C2A  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  8968  002C2E  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  8969  002C32  0E00               	movlw	0
  8970  002C34  6E01               	movwf	___fldiv@b^0,c
  8971  002C36  0E00               	movlw	0
  8972  002C38  6E02               	movwf	(___fldiv@b+1)^0,c
  8973  002C3A  0E00               	movlw	0
  8974  002C3C  6E03               	movwf	(___fldiv@b+2)^0,c
  8975  002C3E  0E00               	movlw	0
  8976  002C40  6E04               	movwf	(___fldiv@b+3)^0,c
  8977  002C42  0E00               	movlw	0
  8978  002C44  6E14               	movwf	___fldiv@grs^0,c
  8979  002C46  0E00               	movlw	0
  8980  002C48  6E15               	movwf	(___fldiv@grs+1)^0,c
  8981  002C4A  0E00               	movlw	0
  8982  002C4C  6E16               	movwf	(___fldiv@grs+2)^0,c
  8983  002C4E  0E00               	movlw	0
  8984  002C50  6E17               	movwf	(___fldiv@grs+3)^0,c
  8985  002C52  0E00               	movlw	0
  8986  002C54  6E19               	movwf	___fldiv@aexp^0,c
  8987  002C56  EF65  F016         	goto	l1079
  8988  002C5A                     l4190:
  8989  002C5A  5019               	movf	___fldiv@aexp^0,w,c
  8990  002C5C  B4D8               	btfsc	status,2,c
  8991  002C5E  EF33  F016         	goto	u4441
  8992  002C62  EF35  F016         	goto	u4440
  8993  002C66                     u4441:
  8994  002C66  EF4C  F016         	goto	l4198
  8995  002C6A                     u4440:
  8996  002C6A  90D8               	bcf	status,0,c
  8997  002C6C  360D               	rlcf	___fldiv@rem^0,f,c
  8998  002C6E  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  8999  002C70  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  9000  002C72  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  9001  002C74  90D8               	bcf	status,0,c
  9002  002C76  3601               	rlcf	___fldiv@b^0,f,c
  9003  002C78  3602               	rlcf	(___fldiv@b+1)^0,f,c
  9004  002C7A  3603               	rlcf	(___fldiv@b+2)^0,f,c
  9005  002C7C  3604               	rlcf	(___fldiv@b+3)^0,f,c
  9006  002C7E  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9007  002C80  EF44  F016         	goto	u4451
  9008  002C84  EF46  F016         	goto	u4450
  9009  002C88                     u4451:
  9010  002C88  EF47  F016         	goto	l1082
  9011  002C8C                     u4450:
  9012  002C8C  8001               	bsf	___fldiv@b^0,0,c
  9013  002C8E                     l1082:
  9014  002C8E  90D8               	bcf	status,0,c
  9015  002C90  3614               	rlcf	___fldiv@grs^0,f,c
  9016  002C92  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  9017  002C94  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  9018  002C96  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  9019  002C98                     l4198:
  9020  002C98  5005               	movf	___fldiv@a^0,w,c
  9021  002C9A  5C0D               	subwf	___fldiv@rem^0,w,c
  9022  002C9C  5006               	movf	(___fldiv@a+1)^0,w,c
  9023  002C9E  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  9024  002CA0  5007               	movf	(___fldiv@a+2)^0,w,c
  9025  002CA2  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  9026  002CA4  5008               	movf	(___fldiv@a+3)^0,w,c
  9027  002CA6  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  9028  002CA8  A0D8               	btfss	status,0,c
  9029  002CAA  EF59  F016         	goto	u4461
  9030  002CAE  EF5B  F016         	goto	u4460
  9031  002CB2                     u4461:
  9032  002CB2  EF64  F016         	goto	l4204
  9033  002CB6                     u4460:
  9034  002CB6  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  9035  002CB8  5005               	movf	___fldiv@a^0,w,c
  9036  002CBA  5E0D               	subwf	___fldiv@rem^0,f,c
  9037  002CBC  5006               	movf	(___fldiv@a+1)^0,w,c
  9038  002CBE  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  9039  002CC0  5007               	movf	(___fldiv@a+2)^0,w,c
  9040  002CC2  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  9041  002CC4  5008               	movf	(___fldiv@a+3)^0,w,c
  9042  002CC6  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  9043  002CC8                     l4204:
  9044  002CC8  2A19               	incf	___fldiv@aexp^0,f,c
  9045  002CCA                     l1079:
  9046  002CCA  0E19               	movlw	25
  9047  002CCC  6419               	cpfsgt	___fldiv@aexp^0,c
  9048  002CCE  EF6B  F016         	goto	u4471
  9049  002CD2  EF6D  F016         	goto	u4470
  9050  002CD6                     u4471:
  9051  002CD6  EF2D  F016         	goto	l4190
  9052  002CDA                     u4470:
  9053  002CDA  500D               	movf	___fldiv@rem^0,w,c
  9054  002CDC  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  9055  002CDE  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  9056  002CE0  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  9057  002CE2  B4D8               	btfsc	status,2,c
  9058  002CE4  EF76  F016         	goto	u4481
  9059  002CE8  EF78  F016         	goto	u4480
  9060  002CEC                     u4481:
  9061  002CEC  EF90  F016         	goto	l4216
  9062  002CF0                     u4480:
  9063  002CF0  8014               	bsf	___fldiv@grs^0,0,c
  9064  002CF2  EF90  F016         	goto	l4216
  9065  002CF6                     l4210:
  9066  002CF6  90D8               	bcf	status,0,c
  9067  002CF8  3601               	rlcf	___fldiv@b^0,f,c
  9068  002CFA  3602               	rlcf	(___fldiv@b+1)^0,f,c
  9069  002CFC  3603               	rlcf	(___fldiv@b+2)^0,f,c
  9070  002CFE  3604               	rlcf	(___fldiv@b+3)^0,f,c
  9071  002D00  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9072  002D02  EF85  F016         	goto	u4491
  9073  002D06  EF87  F016         	goto	u4490
  9074  002D0A                     u4491:
  9075  002D0A  EF88  F016         	goto	l1088
  9076  002D0E                     u4490:
  9077  002D0E  8001               	bsf	___fldiv@b^0,0,c
  9078  002D10                     l1088:
  9079  002D10  90D8               	bcf	status,0,c
  9080  002D12  3614               	rlcf	___fldiv@grs^0,f,c
  9081  002D14  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  9082  002D16  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  9083  002D18  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  9084  002D1A  0612               	decf	___fldiv@new_exp^0,f,c
  9085  002D1C  A0D8               	btfss	status,0,c
  9086  002D1E  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  9087  002D20                     l4216:
  9088  002D20  AE03               	btfss	(___fldiv@b+2)^0,7,c
  9089  002D22  EF95  F016         	goto	u4501
  9090  002D26  EF97  F016         	goto	u4500
  9091  002D2A                     u4501:
  9092  002D2A  EF7B  F016         	goto	l4210
  9093  002D2E                     u4500:
  9094  002D2E  0E00               	movlw	0
  9095  002D30  6E19               	movwf	___fldiv@aexp^0,c
  9096  002D32  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9097  002D34  EF9E  F016         	goto	u4511
  9098  002D38  EFA0  F016         	goto	u4510
  9099  002D3C                     u4511:
  9100  002D3C  EFC4  F016         	goto	l1090
  9101  002D40                     u4510:
  9102  002D40  0EFF               	movlw	255
  9103  002D42  1414               	andwf	___fldiv@grs^0,w,c
  9104  002D44  6E09               	movwf	??___fldiv^0,c
  9105  002D46  0EFF               	movlw	255
  9106  002D48  1415               	andwf	(___fldiv@grs+1)^0,w,c
  9107  002D4A  6E0A               	movwf	(??___fldiv+1)^0,c
  9108  002D4C  0EFF               	movlw	255
  9109  002D4E  1416               	andwf	(___fldiv@grs+2)^0,w,c
  9110  002D50  6E0B               	movwf	(??___fldiv+2)^0,c
  9111  002D52  0E7F               	movlw	127
  9112  002D54  1417               	andwf	(___fldiv@grs+3)^0,w,c
  9113  002D56  6E0C               	movwf	(??___fldiv+3)^0,c
  9114  002D58  5009               	movf	??___fldiv^0,w,c
  9115  002D5A  100A               	iorwf	(??___fldiv+1)^0,w,c
  9116  002D5C  100B               	iorwf	(??___fldiv+2)^0,w,c
  9117  002D5E  100C               	iorwf	(??___fldiv+3)^0,w,c
  9118  002D60  B4D8               	btfsc	status,2,c
  9119  002D62  EFB5  F016         	goto	u4521
  9120  002D66  EFB7  F016         	goto	u4520
  9121  002D6A                     u4521:
  9122  002D6A  EFBB  F016         	goto	l1091
  9123  002D6E                     u4520:
  9124  002D6E                     l4224:
  9125  002D6E  0E01               	movlw	1
  9126  002D70  6E19               	movwf	___fldiv@aexp^0,c
  9127  002D72  EFC4  F016         	goto	l1090
  9128  002D76                     l1091:
  9129  002D76  A001               	btfss	___fldiv@b^0,0,c
  9130  002D78  EFC0  F016         	goto	u4531
  9131  002D7C  EFC2  F016         	goto	u4530
  9132  002D80                     u4531:
  9133  002D80  EFC4  F016         	goto	l1090
  9134  002D84                     u4530:
  9135  002D84  EFB7  F016         	goto	l4224
  9136  002D88                     l1090:
  9137  002D88  5019               	movf	___fldiv@aexp^0,w,c
  9138  002D8A  B4D8               	btfsc	status,2,c
  9139  002D8C  EFCA  F016         	goto	u4541
  9140  002D90  EFCC  F016         	goto	u4540
  9141  002D94                     u4541:
  9142  002D94  EFF0  F016         	goto	l4236
  9143  002D98                     u4540:
  9144  002D98  0E01               	movlw	1
  9145  002D9A  2601               	addwf	___fldiv@b^0,f,c
  9146  002D9C  0E00               	movlw	0
  9147  002D9E  2202               	addwfc	(___fldiv@b+1)^0,f,c
  9148  002DA0  2203               	addwfc	(___fldiv@b+2)^0,f,c
  9149  002DA2  2204               	addwfc	(___fldiv@b+3)^0,f,c
  9150  002DA4  A004               	btfss	(___fldiv@b+3)^0,0,c
  9151  002DA6  EFD7  F016         	goto	u4551
  9152  002DAA  EFD9  F016         	goto	u4550
  9153  002DAE                     u4551:
  9154  002DAE  EFF0  F016         	goto	l4236
  9155  002DB2                     u4550:
  9156  002DB2  C001  F009         	movff	___fldiv@b,??___fldiv
  9157  002DB6  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  9158  002DBA  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  9159  002DBE  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  9160  002DC2  340C               	rlcf	(??___fldiv+3)^0,w,c
  9161  002DC4  320C               	rrcf	(??___fldiv+3)^0,f,c
  9162  002DC6  320B               	rrcf	(??___fldiv+2)^0,f,c
  9163  002DC8  320A               	rrcf	(??___fldiv+1)^0,f,c
  9164  002DCA  3209               	rrcf	??___fldiv^0,f,c
  9165  002DCC  C009  F001         	movff	??___fldiv,___fldiv@b
  9166  002DD0  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  9167  002DD4  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  9168  002DD8  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  9169  002DDC  4A12               	infsnz	___fldiv@new_exp^0,f,c
  9170  002DDE  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  9171  002DE0                     l4236:
  9172  002DE0  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9173  002DE2  EFFB  F016         	goto	u4561
  9174  002DE6  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9175  002DE8  E108               	bnz	u4560
  9176  002DEA  2812               	incf	___fldiv@new_exp^0,w,c
  9177  002DEC  A0D8               	btfss	status,0,c
  9178  002DEE  EFFB  F016         	goto	u4561
  9179  002DF2  EFFD  F016         	goto	u4560
  9180  002DF6                     u4561:
  9181  002DF6  EF08  F017         	goto	l4240
  9182  002DFA                     u4560:
  9183  002DFA  0E00               	movlw	0
  9184  002DFC  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9185  002DFE  6812               	setf	___fldiv@new_exp^0,c
  9186  002E00  0E00               	movlw	0
  9187  002E02  6E01               	movwf	___fldiv@b^0,c
  9188  002E04  0E00               	movlw	0
  9189  002E06  6E02               	movwf	(___fldiv@b+1)^0,c
  9190  002E08  0E00               	movlw	0
  9191  002E0A  6E03               	movwf	(___fldiv@b+2)^0,c
  9192  002E0C  0E00               	movlw	0
  9193  002E0E  6E04               	movwf	(___fldiv@b+3)^0,c
  9194  002E10                     l4240:
  9195  002E10  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9196  002E12  EF15  F017         	goto	u4570
  9197  002E16  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9198  002E18  E106               	bnz	u4571
  9199  002E1A  0412               	decf	___fldiv@new_exp^0,w,c
  9200  002E1C  B0D8               	btfsc	status,0,c
  9201  002E1E  EF13  F017         	goto	u4571
  9202  002E22  EF15  F017         	goto	u4570
  9203  002E26                     u4571:
  9204  002E26  EF23  F017         	goto	l4244
  9205  002E2A                     u4570:
  9206  002E2A  0E00               	movlw	0
  9207  002E2C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9208  002E2E  0E00               	movlw	0
  9209  002E30  6E12               	movwf	___fldiv@new_exp^0,c
  9210  002E32  0E00               	movlw	0
  9211  002E34  6E01               	movwf	___fldiv@b^0,c
  9212  002E36  0E00               	movlw	0
  9213  002E38  6E02               	movwf	(___fldiv@b+1)^0,c
  9214  002E3A  0E00               	movlw	0
  9215  002E3C  6E03               	movwf	(___fldiv@b+2)^0,c
  9216  002E3E  0E00               	movlw	0
  9217  002E40  6E04               	movwf	(___fldiv@b+3)^0,c
  9218  002E42  0E00               	movlw	0
  9219  002E44  6E11               	movwf	___fldiv@sign^0,c
  9220  002E46                     l4244:
  9221  002E46  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  9222  002E4A  A018               	btfss	___fldiv@bexp^0,0,c
  9223  002E4C  EF2A  F017         	goto	u4581
  9224  002E50  EF2C  F017         	goto	u4580
  9225  002E54                     u4581:
  9226  002E54  EF2F  F017         	goto	l4250
  9227  002E58                     u4580:
  9228  002E58  8E03               	bsf	(___fldiv@b+2)^0,7,c
  9229  002E5A  EF30  F017         	goto	l4252
  9230  002E5E                     l4250:
  9231  002E5E  9E03               	bcf	(___fldiv@b+2)^0,7,c
  9232  002E60                     l4252:
  9233  002E60  90D8               	bcf	status,0,c
  9234  002E62  3018               	rrcf	___fldiv@bexp^0,w,c
  9235  002E64  6E04               	movwf	(___fldiv@b+3)^0,c
  9236  002E66  EFE6  F015         	goto	l4166
  9237  002E6A                     l1077:
  9238  002E6A  0012               	return		;funcret
  9239  002E6C                     __end_of___fldiv:
  9240                           	callstack 0
  9241                           
  9242 ;; *************** function ___awmod *****************
  9243 ;; Defined at:
  9244 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  9245 ;; Parameters:    Size  Location     Type
  9246 ;;  dividend        2    0[COMRAM] int 
  9247 ;;  divisor         2    2[COMRAM] int 
  9248 ;; Auto vars:     Size  Location     Type
  9249 ;;  sign            1    5[COMRAM] unsigned char 
  9250 ;;  counter         1    4[COMRAM] unsigned char 
  9251 ;; Return value:  Size  Location     Type
  9252 ;;                  2    0[COMRAM] int 
  9253 ;; Registers used:
  9254 ;;		wreg, status,2, status,0
  9255 ;; Tracked objects:
  9256 ;;		On entry : 0/0
  9257 ;;		On exit  : 0/0
  9258 ;;		Unchanged: 0/0
  9259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9260 ;;      Params:         4       0       0       0       0       0       0
  9261 ;;      Locals:         2       0       0       0       0       0       0
  9262 ;;      Temps:          0       0       0       0       0       0       0
  9263 ;;      Totals:         6       0       0       0       0       0       0
  9264 ;;Total ram usage:        6 bytes
  9265 ;; Hardware stack levels used:    1
  9266 ;; Hardware stack levels required when called:    1
  9267 ;; This function calls:
  9268 ;;		Nothing
  9269 ;; This function is called by:
  9270 ;;		_efgtoa
  9271 ;; This function uses a non-reentrant model
  9272 ;;
  9273                           
  9274                           	psect	text25
  9275  0041AA                     __ptext25:
  9276                           	callstack 0
  9277  0041AA                     ___awmod:
  9278                           	callstack 23
  9279  0041AA  0E00               	movlw	0
  9280  0041AC  6E06               	movwf	___awmod@sign^0,c
  9281  0041AE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9282  0041B0  EFDE  F020         	goto	u4840
  9283  0041B4  EFDC  F020         	goto	u4841
  9284  0041B8                     u4841:
  9285  0041B8  EFE4  F020         	goto	l4448
  9286  0041BC                     u4840:
  9287  0041BC  6C01               	negf	___awmod@dividend^0,c
  9288  0041BE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9289  0041C0  B0D8               	btfsc	status,0,c
  9290  0041C2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9291  0041C4  0E01               	movlw	1
  9292  0041C6  6E06               	movwf	___awmod@sign^0,c
  9293  0041C8                     l4448:
  9294  0041C8  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9295  0041CA  EFEB  F020         	goto	u4850
  9296  0041CE  EFE9  F020         	goto	u4851
  9297  0041D2                     u4851:
  9298  0041D2  EFEF  F020         	goto	l4452
  9299  0041D6                     u4850:
  9300  0041D6  6C03               	negf	___awmod@divisor^0,c
  9301  0041D8  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9302  0041DA  B0D8               	btfsc	status,0,c
  9303  0041DC  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9304  0041DE                     l4452:
  9305  0041DE  5003               	movf	___awmod@divisor^0,w,c
  9306  0041E0  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9307  0041E2  B4D8               	btfsc	status,2,c
  9308  0041E4  EFF6  F020         	goto	u4861
  9309  0041E8  EFF8  F020         	goto	u4860
  9310  0041EC                     u4861:
  9311  0041EC  EF1C  F021         	goto	l4468
  9312  0041F0                     u4860:
  9313  0041F0  0E01               	movlw	1
  9314  0041F2  6E05               	movwf	___awmod@counter^0,c
  9315  0041F4  EF00  F021         	goto	l4458
  9316  0041F8                     l4456:
  9317  0041F8  90D8               	bcf	status,0,c
  9318  0041FA  3603               	rlcf	___awmod@divisor^0,f,c
  9319  0041FC  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9320  0041FE  2A05               	incf	___awmod@counter^0,f,c
  9321  004200                     l4458:
  9322  004200  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9323  004202  EF05  F021         	goto	u4871
  9324  004206  EF07  F021         	goto	u4870
  9325  00420A                     u4871:
  9326  00420A  EFFC  F020         	goto	l4456
  9327  00420E                     u4870:
  9328  00420E                     l4460:
  9329  00420E  5003               	movf	___awmod@divisor^0,w,c
  9330  004210  5C01               	subwf	___awmod@dividend^0,w,c
  9331  004212  5004               	movf	(___awmod@divisor+1)^0,w,c
  9332  004214  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9333  004216  A0D8               	btfss	status,0,c
  9334  004218  EF10  F021         	goto	u4881
  9335  00421C  EF12  F021         	goto	u4880
  9336  004220                     u4881:
  9337  004220  EF16  F021         	goto	l4464
  9338  004224                     u4880:
  9339  004224  5003               	movf	___awmod@divisor^0,w,c
  9340  004226  5E01               	subwf	___awmod@dividend^0,f,c
  9341  004228  5004               	movf	(___awmod@divisor+1)^0,w,c
  9342  00422A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9343  00422C                     l4464:
  9344  00422C  90D8               	bcf	status,0,c
  9345  00422E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9346  004230  3203               	rrcf	___awmod@divisor^0,f,c
  9347  004232  2E05               	decfsz	___awmod@counter^0,f,c
  9348  004234  EF07  F021         	goto	l4460
  9349  004238                     l4468:
  9350  004238  5006               	movf	___awmod@sign^0,w,c
  9351  00423A  B4D8               	btfsc	status,2,c
  9352  00423C  EF22  F021         	goto	u4891
  9353  004240  EF24  F021         	goto	u4890
  9354  004244                     u4891:
  9355  004244  EF28  F021         	goto	l4472
  9356  004248                     u4890:
  9357  004248  6C01               	negf	___awmod@dividend^0,c
  9358  00424A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9359  00424C  B0D8               	btfsc	status,0,c
  9360  00424E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9361  004250                     l4472:
  9362  004250  C001  F001         	movff	___awmod@dividend,?___awmod
  9363  004254  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9364  004258  0012               	return		;funcret
  9365  00425A                     __end_of___awmod:
  9366                           	callstack 0
  9367                           
  9368 ;; *************** function ___awdiv *****************
  9369 ;; Defined at:
  9370 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  9371 ;; Parameters:    Size  Location     Type
  9372 ;;  dividend        2    0[COMRAM] int 
  9373 ;;  divisor         2    2[COMRAM] int 
  9374 ;; Auto vars:     Size  Location     Type
  9375 ;;  quotient        2    6[COMRAM] int 
  9376 ;;  sign            1    5[COMRAM] unsigned char 
  9377 ;;  counter         1    4[COMRAM] unsigned char 
  9378 ;; Return value:  Size  Location     Type
  9379 ;;                  2    0[COMRAM] int 
  9380 ;; Registers used:
  9381 ;;		wreg, status,2, status,0
  9382 ;; Tracked objects:
  9383 ;;		On entry : 0/0
  9384 ;;		On exit  : 0/0
  9385 ;;		Unchanged: 0/0
  9386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9387 ;;      Params:         4       0       0       0       0       0       0
  9388 ;;      Locals:         4       0       0       0       0       0       0
  9389 ;;      Temps:          0       0       0       0       0       0       0
  9390 ;;      Totals:         8       0       0       0       0       0       0
  9391 ;;Total ram usage:        8 bytes
  9392 ;; Hardware stack levels used:    1
  9393 ;; Hardware stack levels required when called:    1
  9394 ;; This function calls:
  9395 ;;		Nothing
  9396 ;; This function is called by:
  9397 ;;		_efgtoa
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           	psect	text26
  9402  0040E6                     __ptext26:
  9403                           	callstack 0
  9404  0040E6                     ___awdiv:
  9405                           	callstack 23
  9406  0040E6  0E00               	movlw	0
  9407  0040E8  6E06               	movwf	___awdiv@sign^0,c
  9408  0040EA  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  9409  0040EC  EF7C  F020         	goto	u4780
  9410  0040F0  EF7A  F020         	goto	u4781
  9411  0040F4                     u4781:
  9412  0040F4  EF82  F020         	goto	l4404
  9413  0040F8                     u4780:
  9414  0040F8  6C03               	negf	___awdiv@divisor^0,c
  9415  0040FA  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9416  0040FC  B0D8               	btfsc	status,0,c
  9417  0040FE  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9418  004100  0E01               	movlw	1
  9419  004102  6E06               	movwf	___awdiv@sign^0,c
  9420  004104                     l4404:
  9421  004104  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  9422  004106  EF89  F020         	goto	u4790
  9423  00410A  EF87  F020         	goto	u4791
  9424  00410E                     u4791:
  9425  00410E  EF8F  F020         	goto	l4410
  9426  004112                     u4790:
  9427  004112  6C01               	negf	___awdiv@dividend^0,c
  9428  004114  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9429  004116  B0D8               	btfsc	status,0,c
  9430  004118  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9431  00411A  0E01               	movlw	1
  9432  00411C  1A06               	xorwf	___awdiv@sign^0,f,c
  9433  00411E                     l4410:
  9434  00411E  0E00               	movlw	0
  9435  004120  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9436  004122  0E00               	movlw	0
  9437  004124  6E07               	movwf	___awdiv@quotient^0,c
  9438  004126  5003               	movf	___awdiv@divisor^0,w,c
  9439  004128  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9440  00412A  B4D8               	btfsc	status,2,c
  9441  00412C  EF9A  F020         	goto	u4801
  9442  004130  EF9C  F020         	goto	u4800
  9443  004134                     u4801:
  9444  004134  EFC4  F020         	goto	l4432
  9445  004138                     u4800:
  9446  004138  0E01               	movlw	1
  9447  00413A  6E05               	movwf	___awdiv@counter^0,c
  9448  00413C  EFA4  F020         	goto	l4418
  9449  004140                     l4416:
  9450  004140  90D8               	bcf	status,0,c
  9451  004142  3603               	rlcf	___awdiv@divisor^0,f,c
  9452  004144  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9453  004146  2A05               	incf	___awdiv@counter^0,f,c
  9454  004148                     l4418:
  9455  004148  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9456  00414A  EFA9  F020         	goto	u4811
  9457  00414E  EFAB  F020         	goto	u4810
  9458  004152                     u4811:
  9459  004152  EFA0  F020         	goto	l4416
  9460  004156                     u4810:
  9461  004156                     l4420:
  9462  004156  90D8               	bcf	status,0,c
  9463  004158  3607               	rlcf	___awdiv@quotient^0,f,c
  9464  00415A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9465  00415C  5003               	movf	___awdiv@divisor^0,w,c
  9466  00415E  5C01               	subwf	___awdiv@dividend^0,w,c
  9467  004160  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9468  004162  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9469  004164  A0D8               	btfss	status,0,c
  9470  004166  EFB7  F020         	goto	u4821
  9471  00416A  EFB9  F020         	goto	u4820
  9472  00416E                     u4821:
  9473  00416E  EFBE  F020         	goto	l4428
  9474  004172                     u4820:
  9475  004172  5003               	movf	___awdiv@divisor^0,w,c
  9476  004174  5E01               	subwf	___awdiv@dividend^0,f,c
  9477  004176  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9478  004178  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9479  00417A  8007               	bsf	___awdiv@quotient^0,0,c
  9480  00417C                     l4428:
  9481  00417C  90D8               	bcf	status,0,c
  9482  00417E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9483  004180  3203               	rrcf	___awdiv@divisor^0,f,c
  9484  004182  2E05               	decfsz	___awdiv@counter^0,f,c
  9485  004184  EFAB  F020         	goto	l4420
  9486  004188                     l4432:
  9487  004188  5006               	movf	___awdiv@sign^0,w,c
  9488  00418A  B4D8               	btfsc	status,2,c
  9489  00418C  EFCA  F020         	goto	u4831
  9490  004190  EFCC  F020         	goto	u4830
  9491  004194                     u4831:
  9492  004194  EFD0  F020         	goto	l4436
  9493  004198                     u4830:
  9494  004198  6C07               	negf	___awdiv@quotient^0,c
  9495  00419A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9496  00419C  B0D8               	btfsc	status,0,c
  9497  00419E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9498  0041A0                     l4436:
  9499  0041A0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9500  0041A4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9501  0041A8  0012               	return		;funcret
  9502  0041AA                     __end_of___awdiv:
  9503                           	callstack 0
  9504                           
  9505 ;; *************** function _dtoa *****************
  9506 ;; Defined at:
  9507 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9508 ;; Parameters:    Size  Location     Type
  9509 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9510 ;;		 -> sprintf@f(6), 
  9511 ;;  d               8   29[COMRAM] long long 
  9512 ;; Auto vars:     Size  Location     Type
  9513 ;;  n               8   53[COMRAM] long long 
  9514 ;;  i               2   61[COMRAM] int 
  9515 ;;  s               2   51[COMRAM] int 
  9516 ;;  w               2   49[COMRAM] int 
  9517 ;;  p               2   47[COMRAM] int 
  9518 ;; Return value:  Size  Location     Type
  9519 ;;                  2   27[COMRAM] int 
  9520 ;; Registers used:
  9521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9522 ;; Tracked objects:
  9523 ;;		On entry : 0/0
  9524 ;;		On exit  : 0/0
  9525 ;;		Unchanged: 0/0
  9526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9527 ;;      Params:        10       0       0       0       0       0       0
  9528 ;;      Locals:        18       0       0       0       0       0       0
  9529 ;;      Temps:          8       0       0       0       0       0       0
  9530 ;;      Totals:        36       0       0       0       0       0       0
  9531 ;;Total ram usage:       36 bytes
  9532 ;; Hardware stack levels used:    1
  9533 ;; Hardware stack levels required when called:    5
  9534 ;; This function calls:
  9535 ;;		___aodiv
  9536 ;;		___aomod
  9537 ;;		_abs
  9538 ;;		_pad
  9539 ;; This function is called by:
  9540 ;;		_vfpfcnvrt
  9541 ;; This function uses a non-reentrant model
  9542 ;;
  9543                           
  9544                           	psect	text27
  9545  002E6C                     __ptext27:
  9546                           	callstack 0
  9547  002E6C                     _dtoa:
  9548                           	callstack 20
  9549  002E6C                     
  9550                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  9551  002E6C  C01E  F036         	movff	dtoa@d,dtoa@n
  9552  002E70  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  9553  002E74  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  9554  002E78  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  9555  002E7C  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  9556  002E80  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  9557  002E84  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  9558  002E88  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  9559  002E8C                     
  9560                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  9561  002E8C  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  9562  002E8E  EF4B  F017         	goto	u5371
  9563  002E92  EF4E  F017         	goto	u5370
  9564  002E96                     u5371:
  9565  002E96  0E01               	movlw	1
  9566  002E98  EF4F  F017         	goto	u5380
  9567  002E9C                     u5370:
  9568  002E9C  0E00               	movlw	0
  9569  002E9E                     u5380:
  9570  002E9E  6E34               	movwf	dtoa@s^0,c
  9571  002EA0  6A35               	clrf	(dtoa@s+1)^0,c
  9572                           
  9573                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  9574  002EA2  5034               	movf	dtoa@s^0,w,c
  9575  002EA4  1035               	iorwf	(dtoa@s+1)^0,w,c
  9576  002EA6  B4D8               	btfsc	status,2,c
  9577  002EA8  EF58  F017         	goto	u5391
  9578  002EAC  EF5A  F017         	goto	u5390
  9579  002EB0                     u5391:
  9580  002EB0  EF6A  F017         	goto	l4678
  9581  002EB4                     u5390:
  9582  002EB4                     
  9583                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  9584  002EB4  1E3D               	comf	(dtoa@n+7)^0,f,c
  9585  002EB6  1E3C               	comf	(dtoa@n+6)^0,f,c
  9586  002EB8  1E3B               	comf	(dtoa@n+5)^0,f,c
  9587  002EBA  1E3A               	comf	(dtoa@n+4)^0,f,c
  9588  002EBC  1E39               	comf	(dtoa@n+3)^0,f,c
  9589  002EBE  1E38               	comf	(dtoa@n+2)^0,f,c
  9590  002EC0  1E37               	comf	(dtoa@n+1)^0,f,c
  9591  002EC2  6C36               	negf	dtoa@n^0,c
  9592  002EC4  0E00               	movlw	0
  9593  002EC6  2237               	addwfc	(dtoa@n+1)^0,f,c
  9594  002EC8  2238               	addwfc	(dtoa@n+2)^0,f,c
  9595  002ECA  2239               	addwfc	(dtoa@n+3)^0,f,c
  9596  002ECC  223A               	addwfc	(dtoa@n+4)^0,f,c
  9597  002ECE  223B               	addwfc	(dtoa@n+5)^0,f,c
  9598  002ED0  223C               	addwfc	(dtoa@n+6)^0,f,c
  9599  002ED2  223D               	addwfc	(dtoa@n+7)^0,f,c
  9600  002ED4                     l4678:
  9601                           
  9602                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  9603  002ED4  0100               	movlb	0	; () banked
  9604  002ED6  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  9605  002ED8  EF70  F017         	goto	u5401
  9606  002EDC  EF72  F017         	goto	u5400
  9607  002EE0                     u5401:
  9608  002EE0  EF73  F017         	goto	l4682
  9609  002EE4                     u5400:
  9610  002EE4                     
  9611                           ; BSR set to: 0
  9612                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  9613  002EE4  93ED               	bcf	_flags& (0+255),1,b
  9614  002EE6                     l4682:
  9615                           
  9616                           ; BSR set to: 0
  9617                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  9618  002EE6  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  9619  002EE8  EF80  F017         	goto	u5410
  9620  002EEC  51EC               	movf	(_prec+1)& (0+255),w,b
  9621  002EEE  E106               	bnz	u5411
  9622  002EF0  05EB               	decf	_prec& (0+255),w,b
  9623  002EF2  B0D8               	btfsc	status,0,c
  9624  002EF4  EF7E  F017         	goto	u5411
  9625  002EF8  EF80  F017         	goto	u5410
  9626  002EFC                     u5411:
  9627  002EFC  EF86  F017         	goto	l1232
  9628  002F00                     u5410:
  9629  002F00                     
  9630                           ; BSR set to: 0
  9631  002F00  0E00               	movlw	0
  9632  002F02  6E31               	movwf	(dtoa@p+1)^0,c
  9633  002F04  0E01               	movlw	1
  9634  002F06  6E30               	movwf	dtoa@p^0,c
  9635  002F08  EF8A  F017         	goto	l1234
  9636  002F0C                     l1232:
  9637                           
  9638                           ; BSR set to: 0
  9639  002F0C  C0EB  F030         	movff	_prec,dtoa@p
  9640  002F10  C0EC  F031         	movff	_prec+1,dtoa@p+1
  9641  002F14                     l1234:
  9642                           
  9643                           ; BSR set to: 0
  9644                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  9645  002F14  C0E9  F032         	movff	_width,dtoa@w
  9646  002F18  C0EA  F033         	movff	_width+1,dtoa@w+1
  9647  002F1C                     
  9648                           ; BSR set to: 0
  9649                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  9650  002F1C  5034               	movf	dtoa@s^0,w,c
  9651  002F1E  1035               	iorwf	(dtoa@s+1)^0,w,c
  9652  002F20  A4D8               	btfss	status,2,c
  9653  002F22  EF95  F017         	goto	u5421
  9654  002F26  EF97  F017         	goto	u5420
  9655  002F2A                     u5421:
  9656  002F2A  EF9E  F017         	goto	l4690
  9657  002F2E                     u5420:
  9658  002F2E                     
  9659                           ; BSR set to: 0
  9660  002F2E  A5ED               	btfss	_flags& (0+255),2,b
  9661  002F30  EF9C  F017         	goto	u5431
  9662  002F34  EF9E  F017         	goto	u5430
  9663  002F38                     u5431:
  9664  002F38  EFA1  F017         	goto	l4692
  9665  002F3C                     u5430:
  9666  002F3C                     l4690:
  9667                           
  9668                           ; BSR set to: 0
  9669                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  9670  002F3C  0632               	decf	dtoa@w^0,f,c
  9671  002F3E  A0D8               	btfss	status,0,c
  9672  002F40  0633               	decf	(dtoa@w+1)^0,f,c
  9673  002F42                     l4692:
  9674                           
  9675                           ; BSR set to: 0
  9676                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  9677  002F42  0E00               	movlw	0
  9678  002F44  6E3F               	movwf	(dtoa@i+1)^0,c
  9679  002F46  0E4F               	movlw	79
  9680  002F48  6E3E               	movwf	dtoa@i^0,c
  9681  002F4A                     
  9682                           ; BSR set to: 0
  9683                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  9684  002F4A  0E00               	movlw	0
  9685  002F4C  0101               	movlb	1	; () banked
  9686  002F4E  6FFA               	movwf	(_dbuf+79)& (0+255),b
  9687                           
  9688                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9689  002F50  EF26  F018         	goto	l4706
  9690  002F54                     l4696:
  9691                           
  9692                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  9693  002F54  063E               	decf	dtoa@i^0,f,c
  9694  002F56  A0D8               	btfss	status,0,c
  9695  002F58  063F               	decf	(dtoa@i+1)^0,f,c
  9696  002F5A                     
  9697                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  9698  002F5A  0EAB               	movlw	low _dbuf
  9699  002F5C  243E               	addwf	dtoa@i^0,w,c
  9700  002F5E  6ED9               	movwf	fsr2l,c
  9701  002F60  0E01               	movlw	high _dbuf
  9702  002F62  203F               	addwfc	(dtoa@i+1)^0,w,c
  9703  002F64  6EDA               	movwf	fsr2h,c
  9704  002F66  C036  F001         	movff	dtoa@n,___aomod@dividend
  9705  002F6A  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  9706  002F6E  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  9707  002F72  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  9708  002F76  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  9709  002F7A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  9710  002F7E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  9711  002F82  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  9712  002F86  0E0A               	movlw	10
  9713  002F88  6E09               	movwf	___aomod@divisor^0,c
  9714  002F8A  0E00               	movlw	0
  9715  002F8C  6E0A               	movwf	(___aomod@divisor+1)^0,c
  9716  002F8E  0E00               	movlw	0
  9717  002F90  6E0B               	movwf	(___aomod@divisor+2)^0,c
  9718  002F92  0E00               	movlw	0
  9719  002F94  6E0C               	movwf	(___aomod@divisor+3)^0,c
  9720  002F96  0E00               	movlw	0
  9721  002F98  6E0D               	movwf	(___aomod@divisor+4)^0,c
  9722  002F9A  0E00               	movlw	0
  9723  002F9C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  9724  002F9E  0E00               	movlw	0
  9725  002FA0  6E0F               	movwf	(___aomod@divisor+6)^0,c
  9726  002FA2  0E00               	movlw	0
  9727  002FA4  6E10               	movwf	(___aomod@divisor+7)^0,c
  9728  002FA6  EC10  F01C         	call	___aomod	;wreg free
  9729  002FAA  C001  F026         	movff	?___aomod,??_dtoa
  9730  002FAE  C002  F027         	movff	?___aomod+1,??_dtoa+1
  9731  002FB2  C003  F028         	movff	?___aomod+2,??_dtoa+2
  9732  002FB6  C004  F029         	movff	?___aomod+3,??_dtoa+3
  9733  002FBA  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  9734  002FBE  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  9735  002FC2  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  9736  002FC6  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  9737  002FCA  C026  F013         	movff	??_dtoa,abs@a
  9738  002FCE  C028  F014         	movff	??_dtoa+2,abs@a+1
  9739  002FD2  ECE6  F023         	call	_abs	;wreg free
  9740  002FD6  5013               	movf	?_abs^0,w,c
  9741  002FD8  0F30               	addlw	48
  9742  002FDA  6EDF               	movwf	indf2,c
  9743  002FDC                     
  9744                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  9745  002FDC  0630               	decf	dtoa@p^0,f,c
  9746  002FDE  A0D8               	btfss	status,0,c
  9747  002FE0  0631               	decf	(dtoa@p+1)^0,f,c
  9748  002FE2                     
  9749                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  9750  002FE2  0632               	decf	dtoa@w^0,f,c
  9751  002FE4  A0D8               	btfss	status,0,c
  9752  002FE6  0633               	decf	(dtoa@w+1)^0,f,c
  9753  002FE8                     
  9754                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  9755  002FE8  C036  F001         	movff	dtoa@n,___aodiv@dividend
  9756  002FEC  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  9757  002FF0  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  9758  002FF4  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  9759  002FF8  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  9760  002FFC  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  9761  003000  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  9762  003004  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  9763  003008  0E0A               	movlw	10
  9764  00300A  6E09               	movwf	___aodiv@divisor^0,c
  9765  00300C  0E00               	movlw	0
  9766  00300E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  9767  003010  0E00               	movlw	0
  9768  003012  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  9769  003014  0E00               	movlw	0
  9770  003016  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  9771  003018  0E00               	movlw	0
  9772  00301A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  9773  00301C  0E00               	movlw	0
  9774  00301E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  9775  003020  0E00               	movlw	0
  9776  003022  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  9777  003024  0E00               	movlw	0
  9778  003026  6E10               	movwf	(___aodiv@divisor+7)^0,c
  9779  003028  EC4C  F01B         	call	___aodiv	;wreg free
  9780  00302C  C001  F036         	movff	?___aodiv,dtoa@n
  9781  003030  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  9782  003034  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  9783  003038  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  9784  00303C  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  9785  003040  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  9786  003044  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  9787  003048  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  9788  00304C                     l4706:
  9789                           
  9790                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9791  00304C  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  9792  00304E  EF31  F018         	goto	u5441
  9793  003052  503F               	movf	(dtoa@i+1)^0,w,c
  9794  003054  E108               	bnz	u5440
  9795  003056  043E               	decf	dtoa@i^0,w,c
  9796  003058  A0D8               	btfss	status,0,c
  9797  00305A  EF31  F018         	goto	u5441
  9798  00305E  EF33  F018         	goto	u5440
  9799  003062                     u5441:
  9800  003062  EF64  F018         	goto	l4716
  9801  003066                     u5440:
  9802  003066  5036               	movf	dtoa@n^0,w,c
  9803  003068  1037               	iorwf	(dtoa@n+1)^0,w,c
  9804  00306A  1038               	iorwf	(dtoa@n+2)^0,w,c
  9805  00306C  1039               	iorwf	(dtoa@n+3)^0,w,c
  9806  00306E  103A               	iorwf	(dtoa@n+4)^0,w,c
  9807  003070  103B               	iorwf	(dtoa@n+5)^0,w,c
  9808  003072  103C               	iorwf	(dtoa@n+6)^0,w,c
  9809  003074  103D               	iorwf	(dtoa@n+7)^0,w,c
  9810  003076  A4D8               	btfss	status,2,c
  9811  003078  EF40  F018         	goto	u5451
  9812  00307C  EF42  F018         	goto	u5450
  9813  003080                     u5451:
  9814  003080  EFAA  F017         	goto	l4696
  9815  003084                     u5450:
  9816  003084  BE31               	btfsc	(dtoa@p+1)^0,7,c
  9817  003086  EF4F  F018         	goto	u5460
  9818  00308A  5031               	movf	(dtoa@p+1)^0,w,c
  9819  00308C  E106               	bnz	u5461
  9820  00308E  0430               	decf	dtoa@p^0,w,c
  9821  003090  B0D8               	btfsc	status,0,c
  9822  003092  EF4D  F018         	goto	u5461
  9823  003096  EF4F  F018         	goto	u5460
  9824  00309A                     u5461:
  9825  00309A  EFAA  F017         	goto	l4696
  9826  00309E                     u5460:
  9827  00309E  BE33               	btfsc	(dtoa@w+1)^0,7,c
  9828  0030A0  EF5A  F018         	goto	u5471
  9829  0030A4  5033               	movf	(dtoa@w+1)^0,w,c
  9830  0030A6  E108               	bnz	u5470
  9831  0030A8  0432               	decf	dtoa@w^0,w,c
  9832  0030AA  A0D8               	btfss	status,0,c
  9833  0030AC  EF5A  F018         	goto	u5471
  9834  0030B0  EF5C  F018         	goto	u5470
  9835  0030B4                     u5471:
  9836  0030B4  EF64  F018         	goto	l4716
  9837  0030B8                     u5470:
  9838  0030B8  0100               	movlb	0	; () banked
  9839  0030BA  B3ED               	btfsc	_flags& (0+255),1,b
  9840  0030BC  EF62  F018         	goto	u5481
  9841  0030C0  EF64  F018         	goto	u5480
  9842  0030C4                     u5481:
  9843  0030C4  EFAA  F017         	goto	l4696
  9844  0030C8                     u5480:
  9845  0030C8                     l4716:
  9846                           
  9847                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  9848  0030C8  5034               	movf	dtoa@s^0,w,c
  9849  0030CA  1035               	iorwf	(dtoa@s+1)^0,w,c
  9850  0030CC  A4D8               	btfss	status,2,c
  9851  0030CE  EF6B  F018         	goto	u5491
  9852  0030D2  EF6D  F018         	goto	u5490
  9853  0030D6                     u5491:
  9854  0030D6  EF75  F018         	goto	l4720
  9855  0030DA                     u5490:
  9856  0030DA  0100               	movlb	0	; () banked
  9857  0030DC  A5ED               	btfss	_flags& (0+255),2,b
  9858  0030DE  EF73  F018         	goto	u5501
  9859  0030E2  EF75  F018         	goto	u5500
  9860  0030E6                     u5501:
  9861  0030E6  EF93  F018         	goto	l4730
  9862  0030EA                     u5500:
  9863  0030EA                     l4720:
  9864                           
  9865                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  9866  0030EA  063E               	decf	dtoa@i^0,f,c
  9867  0030EC  A0D8               	btfss	status,0,c
  9868  0030EE  063F               	decf	(dtoa@i+1)^0,f,c
  9869  0030F0                     
  9870                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  9871  0030F0  5034               	movf	dtoa@s^0,w,c
  9872  0030F2  1035               	iorwf	(dtoa@s+1)^0,w,c
  9873  0030F4  A4D8               	btfss	status,2,c
  9874  0030F6  EF7F  F018         	goto	u5511
  9875  0030FA  EF81  F018         	goto	u5510
  9876  0030FE                     u5511:
  9877  0030FE  EF87  F018         	goto	l4726
  9878  003102                     u5510:
  9879  003102  0E00               	movlw	0
  9880  003104  6E2F               	movwf	(_dtoa$2845+1)^0,c
  9881  003106  0E2B               	movlw	43
  9882  003108  6E2E               	movwf	_dtoa$2845^0,c
  9883  00310A  EF8B  F018         	goto	l4728
  9884  00310E                     l4726:
  9885  00310E  0E00               	movlw	0
  9886  003110  6E2F               	movwf	(_dtoa$2845+1)^0,c
  9887  003112  0E2D               	movlw	45
  9888  003114  6E2E               	movwf	_dtoa$2845^0,c
  9889  003116                     l4728:
  9890  003116  0EAB               	movlw	low _dbuf
  9891  003118  243E               	addwf	dtoa@i^0,w,c
  9892  00311A  6ED9               	movwf	fsr2l,c
  9893  00311C  0E01               	movlw	high _dbuf
  9894  00311E  203F               	addwfc	(dtoa@i+1)^0,w,c
  9895  003120  6EDA               	movwf	fsr2h,c
  9896  003122  C02E  FFDF         	movff	_dtoa$2845,indf2
  9897  003126                     l4730:
  9898                           
  9899                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  9900  003126  C01C  F011         	movff	dtoa@fp,pad@fp
  9901  00312A  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  9902  00312E  0EAB               	movlw	low _dbuf
  9903  003130  243E               	addwf	dtoa@i^0,w,c
  9904  003132  6E13               	movwf	pad@buf^0,c
  9905  003134  0E01               	movlw	high _dbuf
  9906  003136  203F               	addwfc	(dtoa@i+1)^0,w,c
  9907  003138  6E14               	movwf	(pad@buf+1)^0,c
  9908  00313A  C032  F015         	movff	dtoa@w,pad@p
  9909  00313E  C033  F016         	movff	dtoa@w+1,pad@p+1
  9910  003142  EC10  F020         	call	_pad	;wreg free
  9911  003146  C011  F01C         	movff	?_pad,?_dtoa
  9912  00314A  C012  F01D         	movff	?_pad+1,?_dtoa+1
  9913  00314E  0012               	return		;funcret
  9914  003150                     __end_of_dtoa:
  9915                           	callstack 0
  9916                           
  9917 ;; *************** function _pad *****************
  9918 ;; Defined at:
  9919 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9920 ;; Parameters:    Size  Location     Type
  9921 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9922 ;;		 -> sprintf@f(6), 
  9923 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9924 ;;		 -> dbuf(80), 
  9925 ;;  p               2   20[COMRAM] int 
  9926 ;; Auto vars:     Size  Location     Type
  9927 ;;  w               2   25[COMRAM] int 
  9928 ;;  i               2   23[COMRAM] int 
  9929 ;; Return value:  Size  Location     Type
  9930 ;;                  2   16[COMRAM] int 
  9931 ;; Registers used:
  9932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9933 ;; Tracked objects:
  9934 ;;		On entry : 0/0
  9935 ;;		On exit  : 0/0
  9936 ;;		Unchanged: 0/0
  9937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9938 ;;      Params:         6       0       0       0       0       0       0
  9939 ;;      Locals:         4       0       0       0       0       0       0
  9940 ;;      Temps:          1       0       0       0       0       0       0
  9941 ;;      Totals:        11       0       0       0       0       0       0
  9942 ;;Total ram usage:       11 bytes
  9943 ;; Hardware stack levels used:    1
  9944 ;; Hardware stack levels required when called:    4
  9945 ;; This function calls:
  9946 ;;		_fputc
  9947 ;;		_fputs
  9948 ;;		_strlen
  9949 ;; This function is called by:
  9950 ;;		_dtoa
  9951 ;;		_efgtoa
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           	psect	text28
  9956  004020                     __ptext28:
  9957                           	callstack 0
  9958  004020                     _pad:
  9959                           	callstack 20
  9960  004020                     
  9961                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9962  004020  0100               	movlb	0	; () banked
  9963  004022  A1ED               	btfss	_flags& (0+255),0,b
  9964  004024  EF16  F020         	goto	u5061
  9965  004028  EF18  F020         	goto	u5060
  9966  00402C                     u5061:
  9967  00402C  EF22  F020         	goto	l4570
  9968  004030                     u5060:
  9969  004030                     
  9970                           ; BSR set to: 0
  9971                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9972  004030  C013  F00A         	movff	pad@buf,fputs@s
  9973  004034  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9974  004038  C011  F00C         	movff	pad@fp,fputs@fp
  9975  00403C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9976  004040  ECC4  F023         	call	_fputs	;wreg free
  9977  004044                     l4570:
  9978                           
  9979                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9980  004044  BE16               	btfsc	(pad@p+1)^0,7,c
  9981  004046  EF27  F020         	goto	u5071
  9982  00404A  EF29  F020         	goto	u5070
  9983  00404E                     u5071:
  9984  00404E  EF2F  F020         	goto	l4574
  9985  004052                     u5070:
  9986  004052  C015  F01A         	movff	pad@p,pad@w
  9987  004056  C016  F01B         	movff	pad@p+1,pad@w+1
  9988  00405A  EF33  F020         	goto	l1221
  9989  00405E                     l4574:
  9990  00405E  0E00               	movlw	0
  9991  004060  6E1B               	movwf	(pad@w+1)^0,c
  9992  004062  0E00               	movlw	0
  9993  004064  6E1A               	movwf	pad@w^0,c
  9994  004066                     l1221:
  9995                           
  9996                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9997  004066  0E00               	movlw	0
  9998  004068  6E19               	movwf	(pad@i+1)^0,c
  9999  00406A  0E00               	movlw	0
 10000  00406C  6E18               	movwf	pad@i^0,c
 10001                           
 10002                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 10003  00406E  EF45  F020         	goto	l4580
 10004  004072                     l4576:
 10005                           
 10006                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 10007  004072  0E00               	movlw	0
 10008  004074  6E02               	movwf	(fputc@c+1)^0,c
 10009  004076  0E20               	movlw	32
 10010  004078  6E01               	movwf	fputc@c^0,c
 10011  00407A  C011  F003         	movff	pad@fp,fputc@fp
 10012  00407E  C012  F004         	movff	pad@fp+1,fputc@fp+1
 10013  004082  ECAB  F01F         	call	_fputc	;wreg free
 10014  004086                     
 10015                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 10016  004086  4A18               	infsnz	pad@i^0,f,c
 10017  004088  2A19               	incf	(pad@i+1)^0,f,c
 10018  00408A                     l4580:
 10019                           
 10020                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 10021  00408A  501A               	movf	pad@w^0,w,c
 10022  00408C  5C18               	subwf	pad@i^0,w,c
 10023  00408E  5019               	movf	(pad@i+1)^0,w,c
 10024  004090  0A80               	xorlw	128
 10025  004092  6E17               	movwf	??_pad^0,c
 10026  004094  501B               	movf	(pad@w+1)^0,w,c
 10027  004096  0A80               	xorlw	128
 10028  004098  5817               	subwfb	??_pad^0,w,c
 10029  00409A  A0D8               	btfss	status,0,c
 10030  00409C  EF52  F020         	goto	u5081
 10031  0040A0  EF54  F020         	goto	u5080
 10032  0040A4                     u5081:
 10033  0040A4  EF39  F020         	goto	l4576
 10034  0040A8                     u5080:
 10035  0040A8                     
 10036                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 10037  0040A8  0100               	movlb	0	; () banked
 10038  0040AA  B1ED               	btfsc	_flags& (0+255),0,b
 10039  0040AC  EF5A  F020         	goto	u5091
 10040  0040B0  EF5C  F020         	goto	u5090
 10041  0040B4                     u5091:
 10042  0040B4  EF66  F020         	goto	l4584
 10043  0040B8                     u5090:
 10044  0040B8                     
 10045                           ; BSR set to: 0
 10046                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 10047  0040B8  C013  F00A         	movff	pad@buf,fputs@s
 10048  0040BC  C014  F00B         	movff	pad@buf+1,fputs@s+1
 10049  0040C0  C011  F00C         	movff	pad@fp,fputs@fp
 10050  0040C4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 10051  0040C8  ECC4  F023         	call	_fputs	;wreg free
 10052  0040CC                     l4584:
 10053                           
 10054                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 10055  0040CC  C013  F001         	movff	pad@buf,strlen@s
 10056  0040D0  C014  F002         	movff	pad@buf+1,strlen@s+1
 10057  0040D4  EC5A  F024         	call	_strlen	;wreg free
 10058  0040D8  501A               	movf	pad@w^0,w,c
 10059  0040DA  2401               	addwf	?_strlen^0,w,c
 10060  0040DC  6E11               	movwf	?_pad^0,c
 10061  0040DE  501B               	movf	(pad@w+1)^0,w,c
 10062  0040E0  2002               	addwfc	(?_strlen+1)^0,w,c
 10063  0040E2  6E12               	movwf	(?_pad+1)^0,c
 10064  0040E4  0012               	return		;funcret
 10065  0040E6                     __end_of_pad:
 10066                           	callstack 0
 10067                           
 10068 ;; *************** function _strlen *****************
 10069 ;; Defined at:
 10070 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 10071 ;; Parameters:    Size  Location     Type
 10072 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10073 ;;		 -> dbuf(80), 
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10076 ;;		 -> dbuf(80), 
 10077 ;; Return value:  Size  Location     Type
 10078 ;;                  2    0[COMRAM] unsigned int 
 10079 ;; Registers used:
 10080 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10081 ;; Tracked objects:
 10082 ;;		On entry : 0/0
 10083 ;;		On exit  : 0/0
 10084 ;;		Unchanged: 0/0
 10085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10086 ;;      Params:         2       0       0       0       0       0       0
 10087 ;;      Locals:         2       0       0       0       0       0       0
 10088 ;;      Temps:          0       0       0       0       0       0       0
 10089 ;;      Totals:         4       0       0       0       0       0       0
 10090 ;;Total ram usage:        4 bytes
 10091 ;; Hardware stack levels used:    1
 10092 ;; Hardware stack levels required when called:    1
 10093 ;; This function calls:
 10094 ;;		Nothing
 10095 ;; This function is called by:
 10096 ;;		_pad
 10097 ;; This function uses a non-reentrant model
 10098 ;;
 10099                           
 10100                           	psect	text29
 10101  0048B4                     __ptext29:
 10102                           	callstack 0
 10103  0048B4                     _strlen:
 10104                           	callstack 22
 10105  0048B4  C001  F003         	movff	strlen@s,strlen@a
 10106  0048B8  C002  F004         	movff	strlen@s+1,strlen@a+1
 10107  0048BC  EF62  F024         	goto	l4026
 10108  0048C0                     l4024:
 10109  0048C0  4A01               	infsnz	strlen@s^0,f,c
 10110  0048C2  2A02               	incf	(strlen@s+1)^0,f,c
 10111  0048C4                     l4026:
 10112  0048C4  C001  FFD9         	movff	strlen@s,fsr2l
 10113  0048C8  C002  FFDA         	movff	strlen@s+1,fsr2h
 10114  0048CC  50DF               	movf	indf2,w,c
 10115  0048CE  A4D8               	btfss	status,2,c
 10116  0048D0  EF6C  F024         	goto	u4201
 10117  0048D4  EF6E  F024         	goto	u4200
 10118  0048D8                     u4201:
 10119  0048D8  EF60  F024         	goto	l4024
 10120  0048DC                     u4200:
 10121  0048DC  5003               	movf	strlen@a^0,w,c
 10122  0048DE  5C01               	subwf	strlen@s^0,w,c
 10123  0048E0  6E01               	movwf	?_strlen^0,c
 10124  0048E2  5004               	movf	(strlen@a+1)^0,w,c
 10125  0048E4  5802               	subwfb	(strlen@s+1)^0,w,c
 10126  0048E6  6E02               	movwf	(?_strlen+1)^0,c
 10127  0048E8  0012               	return		;funcret
 10128  0048EA                     __end_of_strlen:
 10129                           	callstack 0
 10130                           
 10131 ;; *************** function _fputs *****************
 10132 ;; Defined at:
 10133 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 10134 ;; Parameters:    Size  Location     Type
 10135 ;;  s               2    9[COMRAM] PTR const unsigned char 
 10136 ;;		 -> dbuf(80), 
 10137 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 10138 ;;		 -> sprintf@f(6), 
 10139 ;; Auto vars:     Size  Location     Type
 10140 ;;  i               2   14[COMRAM] int 
 10141 ;;  c               1   13[COMRAM] unsigned char 
 10142 ;; Return value:  Size  Location     Type
 10143 ;;                  2    9[COMRAM] int 
 10144 ;; Registers used:
 10145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10146 ;; Tracked objects:
 10147 ;;		On entry : 0/0
 10148 ;;		On exit  : 0/0
 10149 ;;		Unchanged: 0/0
 10150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10151 ;;      Params:         4       0       0       0       0       0       0
 10152 ;;      Locals:         3       0       0       0       0       0       0
 10153 ;;      Temps:          0       0       0       0       0       0       0
 10154 ;;      Totals:         7       0       0       0       0       0       0
 10155 ;;Total ram usage:        7 bytes
 10156 ;; Hardware stack levels used:    1
 10157 ;; Hardware stack levels required when called:    3
 10158 ;; This function calls:
 10159 ;;		_fputc
 10160 ;; This function is called by:
 10161 ;;		_pad
 10162 ;; This function uses a non-reentrant model
 10163 ;;
 10164                           
 10165                           	psect	text30
 10166  004788                     __ptext30:
 10167                           	callstack 0
 10168  004788                     _fputs:
 10169                           	callstack 20
 10170  004788  0E00               	movlw	0
 10171  00478A  6E10               	movwf	(fputs@i+1)^0,c
 10172  00478C  0E00               	movlw	0
 10173  00478E  6E0F               	movwf	fputs@i^0,c
 10174  004790  EFD5  F023         	goto	l4020
 10175  004794                     l4016:
 10176  004794  C00E  F001         	movff	fputs@c,fputc@c
 10177  004798  6A02               	clrf	(fputc@c+1)^0,c
 10178  00479A  C00C  F003         	movff	fputs@fp,fputc@fp
 10179  00479E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 10180  0047A2  ECAB  F01F         	call	_fputc	;wreg free
 10181  0047A6  4A0F               	infsnz	fputs@i^0,f,c
 10182  0047A8  2A10               	incf	(fputs@i+1)^0,f,c
 10183  0047AA                     l4020:
 10184  0047AA  500F               	movf	fputs@i^0,w,c
 10185  0047AC  240A               	addwf	fputs@s^0,w,c
 10186  0047AE  6ED9               	movwf	fsr2l,c
 10187  0047B0  5010               	movf	(fputs@i+1)^0,w,c
 10188  0047B2  200B               	addwfc	(fputs@s+1)^0,w,c
 10189  0047B4  6EDA               	movwf	fsr2h,c
 10190  0047B6  50DF               	movf	indf2,w,c
 10191  0047B8  6E0E               	movwf	fputs@c^0,c
 10192  0047BA  500E               	movf	fputs@c^0,w,c
 10193  0047BC  A4D8               	btfss	status,2,c
 10194  0047BE  EFE3  F023         	goto	u4191
 10195  0047C2  EFE5  F023         	goto	u4190
 10196  0047C6                     u4191:
 10197  0047C6  EFCA  F023         	goto	l4016
 10198  0047CA                     u4190:
 10199  0047CA  0012               	return		;funcret
 10200  0047CC                     __end_of_fputs:
 10201                           	callstack 0
 10202                           
 10203 ;; *************** function _fputc *****************
 10204 ;; Defined at:
 10205 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 10206 ;; Parameters:    Size  Location     Type
 10207 ;;  c               2    0[COMRAM] int 
 10208 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10209 ;;		 -> sprintf@f(6), 
 10210 ;; Auto vars:     Size  Location     Type
 10211 ;;		None
 10212 ;; Return value:  Size  Location     Type
 10213 ;;                  2    0[COMRAM] int 
 10214 ;; Registers used:
 10215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10216 ;; Tracked objects:
 10217 ;;		On entry : 0/0
 10218 ;;		On exit  : 0/0
 10219 ;;		Unchanged: 0/0
 10220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10221 ;;      Params:         4       0       0       0       0       0       0
 10222 ;;      Locals:         0       0       0       0       0       0       0
 10223 ;;      Temps:          5       0       0       0       0       0       0
 10224 ;;      Totals:         9       0       0       0       0       0       0
 10225 ;;Total ram usage:        9 bytes
 10226 ;; Hardware stack levels used:    1
 10227 ;; Hardware stack levels required when called:    2
 10228 ;; This function calls:
 10229 ;;		_putch
 10230 ;; This function is called by:
 10231 ;;		_pad
 10232 ;;		_vfpfcnvrt
 10233 ;;		_fputs
 10234 ;; This function uses a non-reentrant model
 10235 ;;
 10236                           
 10237                           	psect	text31
 10238  003F56                     __ptext31:
 10239                           	callstack 0
 10240  003F56                     _fputc:
 10241                           	callstack 23
 10242  003F56  5003               	movf	fputc@fp^0,w,c
 10243  003F58  1004               	iorwf	(fputc@fp+1)^0,w,c
 10244  003F5A  B4D8               	btfsc	status,2,c
 10245  003F5C  EFB2  F01F         	goto	u3761
 10246  003F60  EFB4  F01F         	goto	u3760
 10247  003F64                     u3761:
 10248  003F64  EFBD  F01F         	goto	l3802
 10249  003F68                     u3760:
 10250  003F68  5003               	movf	fputc@fp^0,w,c
 10251  003F6A  1004               	iorwf	(fputc@fp+1)^0,w,c
 10252  003F6C  A4D8               	btfss	status,2,c
 10253  003F6E  EFBB  F01F         	goto	u3771
 10254  003F72  EFBD  F01F         	goto	u3770
 10255  003F76                     u3771:
 10256  003F76  EFC2  F01F         	goto	l3804
 10257  003F7A                     u3770:
 10258  003F7A                     l3802:
 10259  003F7A  5001               	movf	fputc@c^0,w,c
 10260  003F7C  EC09  F025         	call	_putch
 10261  003F80  EF0F  F020         	goto	l1481
 10262  003F84                     l3804:
 10263  003F84  EE20 F004          	lfsr	2,4
 10264  003F88  5003               	movf	fputc@fp^0,w,c
 10265  003F8A  26D9               	addwf	fsr2l,f,c
 10266  003F8C  5004               	movf	(fputc@fp+1)^0,w,c
 10267  003F8E  22DA               	addwfc	fsr2h,f,c
 10268  003F90  50DE               	movf	postinc2,w,c
 10269  003F92  10DE               	iorwf	postinc2,w,c
 10270  003F94  B4D8               	btfsc	status,2,c
 10271  003F96  EFCF  F01F         	goto	u3781
 10272  003F9A  EFD1  F01F         	goto	u3780
 10273  003F9E                     u3781:
 10274  003F9E  EFEC  F01F         	goto	l3808
 10275  003FA2                     u3780:
 10276  003FA2  EE20 F004          	lfsr	2,4
 10277  003FA6  5003               	movf	fputc@fp^0,w,c
 10278  003FA8  26D9               	addwf	fsr2l,f,c
 10279  003FAA  5004               	movf	(fputc@fp+1)^0,w,c
 10280  003FAC  22DA               	addwfc	fsr2h,f,c
 10281  003FAE  EE10 F002          	lfsr	1,2
 10282  003FB2  5003               	movf	fputc@fp^0,w,c
 10283  003FB4  26E1               	addwf	fsr1l,f,c
 10284  003FB6  5004               	movf	(fputc@fp+1)^0,w,c
 10285  003FB8  22E2               	addwfc	fsr1h,f,c
 10286  003FBA  50DE               	movf	postinc2,w,c
 10287  003FBC  5CE6               	subwf	postinc1,w,c
 10288  003FBE  50E6               	movf	postinc1,w,c
 10289  003FC0  0A80               	xorlw	128
 10290  003FC2  6E09               	movwf	(??_fputc+4)^0,c
 10291  003FC4  50DE               	movf	postinc2,w,c
 10292  003FC6  0A80               	xorlw	128
 10293  003FC8  5809               	subwfb	(??_fputc+4)^0,w,c
 10294  003FCA  B0D8               	btfsc	status,0,c
 10295  003FCC  EFEA  F01F         	goto	u3791
 10296  003FD0  EFEC  F01F         	goto	u3790
 10297  003FD4                     u3791:
 10298  003FD4  EF0F  F020         	goto	l1481
 10299  003FD8                     u3790:
 10300  003FD8                     l3808:
 10301  003FD8  EE20 F002          	lfsr	2,2
 10302  003FDC  5003               	movf	fputc@fp^0,w,c
 10303  003FDE  26D9               	addwf	fsr2l,f,c
 10304  003FE0  5004               	movf	(fputc@fp+1)^0,w,c
 10305  003FE2  22DA               	addwfc	fsr2h,f,c
 10306  003FE4  CFDE F005          	movff	postinc2,??_fputc
 10307  003FE8  CFDD F006          	movff	postdec2,??_fputc+1
 10308  003FEC  C003  FFD9         	movff	fputc@fp,fsr2l
 10309  003FF0  C004  FFDA         	movff	fputc@fp+1,fsr2h
 10310  003FF4  CFDE F007          	movff	postinc2,??_fputc+2
 10311  003FF8  CFDD F008          	movff	postdec2,??_fputc+3
 10312  003FFC  5005               	movf	??_fputc^0,w,c
 10313  003FFE  2407               	addwf	(??_fputc+2)^0,w,c
 10314  004000  6ED9               	movwf	fsr2l,c
 10315  004002  5006               	movf	(??_fputc+1)^0,w,c
 10316  004004  2008               	addwfc	(??_fputc+3)^0,w,c
 10317  004006  6EDA               	movwf	fsr2h,c
 10318  004008  C001  FFDF         	movff	fputc@c,indf2
 10319  00400C  EE20 F002          	lfsr	2,2
 10320  004010  5003               	movf	fputc@fp^0,w,c
 10321  004012  26D9               	addwf	fsr2l,f,c
 10322  004014  5004               	movf	(fputc@fp+1)^0,w,c
 10323  004016  22DA               	addwfc	fsr2h,f,c
 10324  004018  2ADE               	incf	postinc2,f,c
 10325  00401A  0E00               	movlw	0
 10326  00401C  22DD               	addwfc	postdec2,f,c
 10327  00401E                     l1481:
 10328  00401E  0012               	return		;funcret
 10329  004020                     __end_of_fputc:
 10330                           	callstack 0
 10331                           
 10332 ;; *************** function _putch *****************
 10333 ;; Defined at:
 10334 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 10335 ;; Parameters:    Size  Location     Type
 10336 ;;  c               1    wreg     unsigned char 
 10337 ;; Auto vars:     Size  Location     Type
 10338 ;;  c               1    0[COMRAM] unsigned char 
 10339 ;; Return value:  Size  Location     Type
 10340 ;;                  1    wreg      void 
 10341 ;; Registers used:
 10342 ;;		wreg
 10343 ;; Tracked objects:
 10344 ;;		On entry : 0/0
 10345 ;;		On exit  : 0/0
 10346 ;;		Unchanged: 0/0
 10347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10348 ;;      Params:         0       0       0       0       0       0       0
 10349 ;;      Locals:         0       0       0       0       0       0       0
 10350 ;;      Temps:          0       0       0       0       0       0       0
 10351 ;;      Totals:         0       0       0       0       0       0       0
 10352 ;;Total ram usage:        0 bytes
 10353 ;; Hardware stack levels used:    1
 10354 ;; Hardware stack levels required when called:    1
 10355 ;; This function calls:
 10356 ;;		Nothing
 10357 ;; This function is called by:
 10358 ;;		_fputc
 10359 ;; This function uses a non-reentrant model
 10360 ;;
 10361                           
 10362                           	psect	text32
 10363  004A12                     __ptext32:
 10364                           	callstack 0
 10365  004A12                     _putch:
 10366                           	callstack 23
 10367  004A12  0012               	return		;funcret
 10368  004A14                     __end_of_putch:
 10369                           	callstack 0
 10370                           
 10371 ;; *************** function _abs *****************
 10372 ;; Defined at:
 10373 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 10374 ;; Parameters:    Size  Location     Type
 10375 ;;  a               2   18[COMRAM] int 
 10376 ;; Auto vars:     Size  Location     Type
 10377 ;;		None
 10378 ;; Return value:  Size  Location     Type
 10379 ;;                  2   18[COMRAM] int 
 10380 ;; Registers used:
 10381 ;;		wreg, status,2, status,0
 10382 ;; Tracked objects:
 10383 ;;		On entry : 0/0
 10384 ;;		On exit  : 0/0
 10385 ;;		Unchanged: 0/0
 10386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10387 ;;      Params:         2       0       0       0       0       0       0
 10388 ;;      Locals:         0       0       0       0       0       0       0
 10389 ;;      Temps:          2       0       0       0       0       0       0
 10390 ;;      Totals:         4       0       0       0       0       0       0
 10391 ;;Total ram usage:        4 bytes
 10392 ;; Hardware stack levels used:    1
 10393 ;; Hardware stack levels required when called:    1
 10394 ;; This function calls:
 10395 ;;		Nothing
 10396 ;; This function is called by:
 10397 ;;		_dtoa
 10398 ;; This function uses a non-reentrant model
 10399 ;;
 10400                           
 10401                           	psect	text33
 10402  0047CC                     __ptext33:
 10403                           	callstack 0
 10404  0047CC                     _abs:
 10405                           	callstack 23
 10406  0047CC  BE14               	btfsc	(abs@a+1)^0,7,c
 10407  0047CE  EFF3  F023         	goto	u5100
 10408  0047D2  5014               	movf	(abs@a+1)^0,w,c
 10409  0047D4  E106               	bnz	u5101
 10410  0047D6  0413               	decf	abs@a^0,w,c
 10411  0047D8  B0D8               	btfsc	status,0,c
 10412  0047DA  EFF1  F023         	goto	u5101
 10413  0047DE  EFF3  F023         	goto	u5100
 10414  0047E2                     u5101:
 10415  0047E2  EF01  F024         	goto	l1402
 10416  0047E6                     u5100:
 10417  0047E6  C013  F015         	movff	abs@a,??_abs
 10418  0047EA  C014  F016         	movff	abs@a+1,??_abs+1
 10419  0047EE  1E15               	comf	??_abs^0,f,c
 10420  0047F0  1E16               	comf	(??_abs+1)^0,f,c
 10421  0047F2  4A15               	infsnz	??_abs^0,f,c
 10422  0047F4  2A16               	incf	(??_abs+1)^0,f,c
 10423  0047F6  C015  F013         	movff	??_abs,?_abs
 10424  0047FA  C016  F014         	movff	??_abs+1,?_abs+1
 10425  0047FE  EF05  F024         	goto	l1405
 10426  004802                     l1402:
 10427  004802  C013  F013         	movff	abs@a,?_abs
 10428  004806  C014  F014         	movff	abs@a+1,?_abs+1
 10429  00480A                     l1405:
 10430  00480A  0012               	return		;funcret
 10431  00480C                     __end_of_abs:
 10432                           	callstack 0
 10433                           
 10434 ;; *************** function ___aomod *****************
 10435 ;; Defined at:
 10436 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 10437 ;; Parameters:    Size  Location     Type
 10438 ;;  dividend        8    0[COMRAM] long long 
 10439 ;;  divisor         8    8[COMRAM] long long 
 10440 ;; Auto vars:     Size  Location     Type
 10441 ;;  sign            1   17[COMRAM] unsigned char 
 10442 ;;  counter         1   16[COMRAM] unsigned char 
 10443 ;; Return value:  Size  Location     Type
 10444 ;;                  8    0[COMRAM] long long 
 10445 ;; Registers used:
 10446 ;;		wreg, status,2, status,0
 10447 ;; Tracked objects:
 10448 ;;		On entry : 0/0
 10449 ;;		On exit  : 0/0
 10450 ;;		Unchanged: 0/0
 10451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10452 ;;      Params:        16       0       0       0       0       0       0
 10453 ;;      Locals:         2       0       0       0       0       0       0
 10454 ;;      Temps:          0       0       0       0       0       0       0
 10455 ;;      Totals:        18       0       0       0       0       0       0
 10456 ;;Total ram usage:       18 bytes
 10457 ;; Hardware stack levels used:    1
 10458 ;; Hardware stack levels required when called:    1
 10459 ;; This function calls:
 10460 ;;		Nothing
 10461 ;; This function is called by:
 10462 ;;		_dtoa
 10463 ;; This function uses a non-reentrant model
 10464 ;;
 10465                           
 10466                           	psect	text34
 10467  003820                     __ptext34:
 10468                           	callstack 0
 10469  003820                     ___aomod:
 10470                           	callstack 23
 10471  003820  0E00               	movlw	0
 10472  003822  6E12               	movwf	___aomod@sign^0,c
 10473  003824  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 10474  003826  EF19  F01C         	goto	u4300
 10475  00382A  EF17  F01C         	goto	u4301
 10476  00382E                     u4301:
 10477  00382E  EF2B  F01C         	goto	l4094
 10478  003832                     u4300:
 10479  003832  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10480  003834  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10481  003836  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10482  003838  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10483  00383A  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10484  00383C  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10485  00383E  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10486  003840  6C01               	negf	___aomod@dividend^0,c
 10487  003842  0E00               	movlw	0
 10488  003844  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10489  003846  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10490  003848  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10491  00384A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10492  00384C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10493  00384E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10494  003850  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10495  003852  0E01               	movlw	1
 10496  003854  6E12               	movwf	___aomod@sign^0,c
 10497  003856                     l4094:
 10498  003856  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 10499  003858  EF32  F01C         	goto	u4310
 10500  00385C  EF30  F01C         	goto	u4311
 10501  003860                     u4311:
 10502  003860  EF42  F01C         	goto	l4098
 10503  003864                     u4310:
 10504  003864  1E10               	comf	(___aomod@divisor+7)^0,f,c
 10505  003866  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 10506  003868  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 10507  00386A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 10508  00386C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 10509  00386E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 10510  003870  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 10511  003872  6C09               	negf	___aomod@divisor^0,c
 10512  003874  0E00               	movlw	0
 10513  003876  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 10514  003878  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 10515  00387A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 10516  00387C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 10517  00387E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 10518  003880  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 10519  003882  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 10520  003884                     l4098:
 10521  003884  5009               	movf	___aomod@divisor^0,w,c
 10522  003886  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 10523  003888  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 10524  00388A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 10525  00388C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 10526  00388E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 10527  003890  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 10528  003892  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 10529  003894  B4D8               	btfsc	status,2,c
 10530  003896  EF4F  F01C         	goto	u4321
 10531  00389A  EF51  F01C         	goto	u4320
 10532  00389E                     u4321:
 10533  00389E  EF99  F01C         	goto	l4114
 10534  0038A2                     u4320:
 10535  0038A2  0E01               	movlw	1
 10536  0038A4  6E11               	movwf	___aomod@counter^0,c
 10537  0038A6  EF5F  F01C         	goto	l4104
 10538  0038AA                     l4102:
 10539  0038AA  90D8               	bcf	status,0,c
 10540  0038AC  3609               	rlcf	___aomod@divisor^0,f,c
 10541  0038AE  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 10542  0038B0  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 10543  0038B2  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 10544  0038B4  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 10545  0038B6  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 10546  0038B8  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 10547  0038BA  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 10548  0038BC  2A11               	incf	___aomod@counter^0,f,c
 10549  0038BE                     l4104:
 10550  0038BE  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 10551  0038C0  EF64  F01C         	goto	u4331
 10552  0038C4  EF66  F01C         	goto	u4330
 10553  0038C8                     u4331:
 10554  0038C8  EF55  F01C         	goto	l4102
 10555  0038CC                     u4330:
 10556  0038CC                     l4106:
 10557  0038CC  5009               	movf	___aomod@divisor^0,w,c
 10558  0038CE  5C01               	subwf	___aomod@dividend^0,w,c
 10559  0038D0  500A               	movf	(___aomod@divisor+1)^0,w,c
 10560  0038D2  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 10561  0038D4  500B               	movf	(___aomod@divisor+2)^0,w,c
 10562  0038D6  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 10563  0038D8  500C               	movf	(___aomod@divisor+3)^0,w,c
 10564  0038DA  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 10565  0038DC  500D               	movf	(___aomod@divisor+4)^0,w,c
 10566  0038DE  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 10567  0038E0  500E               	movf	(___aomod@divisor+5)^0,w,c
 10568  0038E2  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 10569  0038E4  500F               	movf	(___aomod@divisor+6)^0,w,c
 10570  0038E6  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 10571  0038E8  5010               	movf	(___aomod@divisor+7)^0,w,c
 10572  0038EA  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 10573  0038EC  A0D8               	btfss	status,0,c
 10574  0038EE  EF7B  F01C         	goto	u4341
 10575  0038F2  EF7D  F01C         	goto	u4340
 10576  0038F6                     u4341:
 10577  0038F6  EF8D  F01C         	goto	l4110
 10578  0038FA                     u4340:
 10579  0038FA  5009               	movf	___aomod@divisor^0,w,c
 10580  0038FC  5E01               	subwf	___aomod@dividend^0,f,c
 10581  0038FE  500A               	movf	(___aomod@divisor+1)^0,w,c
 10582  003900  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 10583  003902  500B               	movf	(___aomod@divisor+2)^0,w,c
 10584  003904  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 10585  003906  500C               	movf	(___aomod@divisor+3)^0,w,c
 10586  003908  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 10587  00390A  500D               	movf	(___aomod@divisor+4)^0,w,c
 10588  00390C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 10589  00390E  500E               	movf	(___aomod@divisor+5)^0,w,c
 10590  003910  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 10591  003912  500F               	movf	(___aomod@divisor+6)^0,w,c
 10592  003914  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 10593  003916  5010               	movf	(___aomod@divisor+7)^0,w,c
 10594  003918  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 10595  00391A                     l4110:
 10596  00391A  90D8               	bcf	status,0,c
 10597  00391C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 10598  00391E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 10599  003920  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 10600  003922  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 10601  003924  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 10602  003926  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 10603  003928  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 10604  00392A  3209               	rrcf	___aomod@divisor^0,f,c
 10605  00392C  2E11               	decfsz	___aomod@counter^0,f,c
 10606  00392E  EF66  F01C         	goto	l4106
 10607  003932                     l4114:
 10608  003932  5012               	movf	___aomod@sign^0,w,c
 10609  003934  B4D8               	btfsc	status,2,c
 10610  003936  EF9F  F01C         	goto	u4351
 10611  00393A  EFA1  F01C         	goto	u4350
 10612  00393E                     u4351:
 10613  00393E  EFB1  F01C         	goto	l4118
 10614  003942                     u4350:
 10615  003942  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10616  003944  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10617  003946  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10618  003948  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10619  00394A  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10620  00394C  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10621  00394E  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10622  003950  6C01               	negf	___aomod@dividend^0,c
 10623  003952  0E00               	movlw	0
 10624  003954  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10625  003956  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10626  003958  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10627  00395A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10628  00395C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10629  00395E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10630  003960  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10631  003962                     l4118:
 10632  003962  C001  F001         	movff	___aomod@dividend,?___aomod
 10633  003966  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 10634  00396A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 10635  00396E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 10636  003972  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 10637  003976  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 10638  00397A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 10639  00397E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 10640  003982  0012               	return		;funcret
 10641  003984                     __end_of___aomod:
 10642                           	callstack 0
 10643                           
 10644 ;; *************** function ___aodiv *****************
 10645 ;; Defined at:
 10646 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 10647 ;; Parameters:    Size  Location     Type
 10648 ;;  dividend        8    0[COMRAM] long long 
 10649 ;;  divisor         8    8[COMRAM] long long 
 10650 ;; Auto vars:     Size  Location     Type
 10651 ;;  quotient        8   18[COMRAM] long long 
 10652 ;;  sign            1   17[COMRAM] unsigned char 
 10653 ;;  counter         1   16[COMRAM] unsigned char 
 10654 ;; Return value:  Size  Location     Type
 10655 ;;                  8    0[COMRAM] long long 
 10656 ;; Registers used:
 10657 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10658 ;; Tracked objects:
 10659 ;;		On entry : 0/0
 10660 ;;		On exit  : 0/0
 10661 ;;		Unchanged: 0/0
 10662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10663 ;;      Params:        16       0       0       0       0       0       0
 10664 ;;      Locals:        10       0       0       0       0       0       0
 10665 ;;      Temps:          0       0       0       0       0       0       0
 10666 ;;      Totals:        26       0       0       0       0       0       0
 10667 ;;Total ram usage:       26 bytes
 10668 ;; Hardware stack levels used:    1
 10669 ;; Hardware stack levels required when called:    1
 10670 ;; This function calls:
 10671 ;;		Nothing
 10672 ;; This function is called by:
 10673 ;;		_dtoa
 10674 ;; This function uses a non-reentrant model
 10675 ;;
 10676                           
 10677                           	psect	text35
 10678  003698                     __ptext35:
 10679                           	callstack 0
 10680  003698                     ___aodiv:
 10681                           	callstack 23
 10682  003698  0E00               	movlw	0
 10683  00369A  6E12               	movwf	___aodiv@sign^0,c
 10684  00369C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 10685  00369E  EF55  F01B         	goto	u4230
 10686  0036A2  EF53  F01B         	goto	u4231
 10687  0036A6                     u4231:
 10688  0036A6  EF67  F01B         	goto	l4050
 10689  0036AA                     u4230:
 10690  0036AA  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 10691  0036AC  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 10692  0036AE  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 10693  0036B0  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 10694  0036B2  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 10695  0036B4  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 10696  0036B6  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 10697  0036B8  6C09               	negf	___aodiv@divisor^0,c
 10698  0036BA  0E00               	movlw	0
 10699  0036BC  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 10700  0036BE  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 10701  0036C0  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 10702  0036C2  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 10703  0036C4  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 10704  0036C6  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 10705  0036C8  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 10706  0036CA  0E01               	movlw	1
 10707  0036CC  6E12               	movwf	___aodiv@sign^0,c
 10708  0036CE                     l4050:
 10709  0036CE  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 10710  0036D0  EF6E  F01B         	goto	u4240
 10711  0036D4  EF6C  F01B         	goto	u4241
 10712  0036D8                     u4241:
 10713  0036D8  EF80  F01B         	goto	l4056
 10714  0036DC                     u4240:
 10715  0036DC  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 10716  0036DE  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 10717  0036E0  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 10718  0036E2  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 10719  0036E4  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 10720  0036E6  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 10721  0036E8  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 10722  0036EA  6C01               	negf	___aodiv@dividend^0,c
 10723  0036EC  0E00               	movlw	0
 10724  0036EE  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 10725  0036F0  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 10726  0036F2  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 10727  0036F4  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 10728  0036F6  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 10729  0036F8  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 10730  0036FA  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 10731  0036FC  0E01               	movlw	1
 10732  0036FE  1A12               	xorwf	___aodiv@sign^0,f,c
 10733  003700                     l4056:
 10734  003700  EE20  F013         	lfsr	2,___aodiv@quotient
 10735  003704  0E07               	movlw	7
 10736  003706                     u4251:
 10737  003706  6ADE               	clrf	postinc2,c
 10738  003708  06E8               	decf	wreg,f,c
 10739  00370A  E2FD               	bc	u4251
 10740  00370C  5009               	movf	___aodiv@divisor^0,w,c
 10741  00370E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 10742  003710  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 10743  003712  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 10744  003714  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 10745  003716  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 10746  003718  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 10747  00371A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 10748  00371C  B4D8               	btfsc	status,2,c
 10749  00371E  EF93  F01B         	goto	u4261
 10750  003722  EF95  F01B         	goto	u4260
 10751  003726                     u4261:
 10752  003726  EFE7  F01B         	goto	l4078
 10753  00372A                     u4260:
 10754  00372A  0E01               	movlw	1
 10755  00372C  6E11               	movwf	___aodiv@counter^0,c
 10756  00372E  EFA3  F01B         	goto	l4064
 10757  003732                     l4062:
 10758  003732  90D8               	bcf	status,0,c
 10759  003734  3609               	rlcf	___aodiv@divisor^0,f,c
 10760  003736  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 10761  003738  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 10762  00373A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 10763  00373C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 10764  00373E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 10765  003740  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 10766  003742  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 10767  003744  2A11               	incf	___aodiv@counter^0,f,c
 10768  003746                     l4064:
 10769  003746  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 10770  003748  EFA8  F01B         	goto	u4271
 10771  00374C  EFAA  F01B         	goto	u4270
 10772  003750                     u4271:
 10773  003750  EF99  F01B         	goto	l4062
 10774  003754                     u4270:
 10775  003754                     l4066:
 10776  003754  90D8               	bcf	status,0,c
 10777  003756  3613               	rlcf	___aodiv@quotient^0,f,c
 10778  003758  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 10779  00375A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 10780  00375C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 10781  00375E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 10782  003760  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 10783  003762  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 10784  003764  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 10785  003766  5009               	movf	___aodiv@divisor^0,w,c
 10786  003768  5C01               	subwf	___aodiv@dividend^0,w,c
 10787  00376A  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10788  00376C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 10789  00376E  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10790  003770  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 10791  003772  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10792  003774  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 10793  003776  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10794  003778  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 10795  00377A  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10796  00377C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 10797  00377E  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10798  003780  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 10799  003782  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10800  003784  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 10801  003786  A0D8               	btfss	status,0,c
 10802  003788  EFC8  F01B         	goto	u4281
 10803  00378C  EFCA  F01B         	goto	u4280
 10804  003790                     u4281:
 10805  003790  EFDB  F01B         	goto	l4074
 10806  003794                     u4280:
 10807  003794  5009               	movf	___aodiv@divisor^0,w,c
 10808  003796  5E01               	subwf	___aodiv@dividend^0,f,c
 10809  003798  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10810  00379A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 10811  00379C  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10812  00379E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 10813  0037A0  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10814  0037A2  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 10815  0037A4  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10816  0037A6  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 10817  0037A8  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10818  0037AA  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 10819  0037AC  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10820  0037AE  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 10821  0037B0  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10822  0037B2  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 10823  0037B4  8013               	bsf	___aodiv@quotient^0,0,c
 10824  0037B6                     l4074:
 10825  0037B6  90D8               	bcf	status,0,c
 10826  0037B8  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 10827  0037BA  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 10828  0037BC  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 10829  0037BE  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 10830  0037C0  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 10831  0037C2  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 10832  0037C4  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 10833  0037C6  3209               	rrcf	___aodiv@divisor^0,f,c
 10834  0037C8  2E11               	decfsz	___aodiv@counter^0,f,c
 10835  0037CA  EFAA  F01B         	goto	l4066
 10836  0037CE                     l4078:
 10837  0037CE  5012               	movf	___aodiv@sign^0,w,c
 10838  0037D0  B4D8               	btfsc	status,2,c
 10839  0037D2  EFED  F01B         	goto	u4291
 10840  0037D6  EFEF  F01B         	goto	u4290
 10841  0037DA                     u4291:
 10842  0037DA  EFFF  F01B         	goto	l4082
 10843  0037DE                     u4290:
 10844  0037DE  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 10845  0037E0  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 10846  0037E2  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 10847  0037E4  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 10848  0037E6  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 10849  0037E8  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 10850  0037EA  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 10851  0037EC  6C13               	negf	___aodiv@quotient^0,c
 10852  0037EE  0E00               	movlw	0
 10853  0037F0  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 10854  0037F2  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 10855  0037F4  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 10856  0037F6  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 10857  0037F8  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 10858  0037FA  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 10859  0037FC  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 10860  0037FE                     l4082:
 10861  0037FE  C013  F001         	movff	___aodiv@quotient,?___aodiv
 10862  003802  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 10863  003806  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 10864  00380A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 10865  00380E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 10866  003812  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 10867  003816  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 10868  00381A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 10869  00381E  0012               	return		;funcret
 10870  003820                     __end_of___aodiv:
 10871                           	callstack 0
 10872                           
 10873 ;; *************** function _atoi *****************
 10874 ;; Defined at:
 10875 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 10876 ;; Parameters:    Size  Location     Type
 10877 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10878 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
 10879 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
 10880 ;; Auto vars:     Size  Location     Type
 10881 ;;  n               2   20[COMRAM] int 
 10882 ;;  neg             2   13[COMRAM] int 
 10883 ;; Return value:  Size  Location     Type
 10884 ;;                  2    7[COMRAM] int 
 10885 ;; Registers used:
 10886 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10887 ;; Tracked objects:
 10888 ;;		On entry : 0/0
 10889 ;;		On exit  : 0/0
 10890 ;;		Unchanged: 0/0
 10891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10892 ;;      Params:         2       0       0       0       0       0       0
 10893 ;;      Locals:         9       0       0       0       0       0       0
 10894 ;;      Temps:          4       0       0       0       0       0       0
 10895 ;;      Totals:        15       0       0       0       0       0       0
 10896 ;;Total ram usage:       15 bytes
 10897 ;; Hardware stack levels used:    1
 10898 ;; Hardware stack levels required when called:    2
 10899 ;; This function calls:
 10900 ;;		___wmul
 10901 ;;		_isdigit
 10902 ;;		_isspace
 10903 ;; This function is called by:
 10904 ;;		_vfpfcnvrt
 10905 ;; This function uses a non-reentrant model
 10906 ;;
 10907                           
 10908                           	psect	text36
 10909  003508                     __ptext36:
 10910                           	callstack 0
 10911  003508                     _atoi:
 10912                           	callstack 23
 10913  003508  0E00               	movlw	0
 10914  00350A  6E16               	movwf	(atoi@n+1)^0,c
 10915  00350C  0E00               	movlw	0
 10916  00350E  6E15               	movwf	atoi@n^0,c
 10917  003510  0E00               	movlw	0
 10918  003512  6E0F               	movwf	(atoi@neg+1)^0,c
 10919  003514  0E00               	movlw	0
 10920  003516  6E0E               	movwf	atoi@neg^0,c
 10921  003518  EF90  F01A         	goto	l5036
 10922  00351C                     l5034:
 10923  00351C  4A08               	infsnz	atoi@s^0,f,c
 10924  00351E  2A09               	incf	(atoi@s+1)^0,f,c
 10925  003520                     l5036:
 10926  003520  0E01               	movlw	1
 10927  003522  6E14               	movwf	_atoi$2937^0,c
 10928  003524  C008  FFF6         	movff	atoi@s,tblptrl
 10929  003528  C009  FFF7         	movff	atoi@s+1,tblptrh
 10930  00352C                     	if	0	;tblptru may be non-zero
 10931  00352C                     	endif
 10932  00352C                     	if	0	;tblptru may be non-zero
 10933  00352C                     	endif
 10934  00352C  0008               	tblrd		*
 10935  00352E  50F5               	movf	tablat,w,c
 10936  003530  0A20               	xorlw	32
 10937  003532  B4D8               	btfsc	status,2,c
 10938  003534  EF9E  F01A         	goto	u6041
 10939  003538  EFA0  F01A         	goto	u6040
 10940  00353C                     u6041:
 10941  00353C  EFBD  F01A         	goto	l5044
 10942  003540                     u6040:
 10943  003540  0EF7               	movlw	247
 10944  003542  6E0A               	movwf	??_atoi^0,c
 10945  003544  0EFF               	movlw	255
 10946  003546  6E0B               	movwf	(??_atoi+1)^0,c
 10947  003548  C008  FFF6         	movff	atoi@s,tblptrl
 10948  00354C  C009  FFF7         	movff	atoi@s+1,tblptrh
 10949  003550                     	if	0	;tblptru may be non-zero
 10950  003550                     	endif
 10951  003550                     	if	0	;tblptru may be non-zero
 10952  003550                     	endif
 10953  003550  0008               	tblrd		*
 10954  003552  50F5               	movf	tablat,w,c
 10955  003554  6E0C               	movwf	(??_atoi+2)^0,c
 10956  003556  6A0D               	clrf	(??_atoi+3)^0,c
 10957  003558  500A               	movf	??_atoi^0,w,c
 10958  00355A  260C               	addwf	(??_atoi+2)^0,f,c
 10959  00355C  500B               	movf	(??_atoi+1)^0,w,c
 10960  00355E  220D               	addwfc	(??_atoi+3)^0,f,c
 10961  003560  500D               	movf	(??_atoi+3)^0,w,c
 10962  003562  E109               	bnz	u6050
 10963  003564  0E05               	movlw	5
 10964  003566  5C0C               	subwf	(??_atoi+2)^0,w,c
 10965  003568  A0D8               	btfss	status,0,c
 10966  00356A  EFB9  F01A         	goto	u6051
 10967  00356E  EFBB  F01A         	goto	u6050
 10968  003572                     u6051:
 10969  003572  EFBD  F01A         	goto	l5044
 10970  003576                     u6050:
 10971  003576  0E00               	movlw	0
 10972  003578  6E14               	movwf	_atoi$2937^0,c
 10973  00357A                     l5044:
 10974  00357A  C014  F010         	movff	_atoi$2937,_atoi$2936
 10975  00357E  6A11               	clrf	(_atoi$2936+1)^0,c
 10976  003580  5010               	movf	_atoi$2936^0,w,c
 10977  003582  1011               	iorwf	(_atoi$2936+1)^0,w,c
 10978  003584  A4D8               	btfss	status,2,c
 10979  003586  EFC7  F01A         	goto	u6061
 10980  00358A  EFC9  F01A         	goto	u6060
 10981  00358E                     u6061:
 10982  00358E  EF8E  F01A         	goto	l5034
 10983  003592                     u6060:
 10984  003592  EFD3  F01A         	goto	l5054
 10985  003596                     l5050:
 10986  003596  0E00               	movlw	0
 10987  003598  6E0F               	movwf	(atoi@neg+1)^0,c
 10988  00359A  0E01               	movlw	1
 10989  00359C  6E0E               	movwf	atoi@neg^0,c
 10990  00359E                     l5052:
 10991  00359E  4A08               	infsnz	atoi@s^0,f,c
 10992  0035A0  2A09               	incf	(atoi@s+1)^0,f,c
 10993  0035A2  EF08  F01B         	goto	l5060
 10994  0035A6                     l5054:
 10995  0035A6  C008  FFF6         	movff	atoi@s,tblptrl
 10996  0035AA  C009  FFF7         	movff	atoi@s+1,tblptrh
 10997  0035AE                     	if	0	;tblptru may be non-zero
 10998  0035AE                     	endif
 10999  0035AE                     	if	0	;tblptru may be non-zero
 11000  0035AE                     	endif
 11001  0035AE  0008               	tblrd		*
 11002  0035B0  50F5               	movf	tablat,w,c
 11003  0035B2  6E0A               	movwf	??_atoi^0,c
 11004  0035B4  6A0B               	clrf	(??_atoi+1)^0,c
 11005                           
 11006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11007                           ; Switch size 1, requested type "simple"
 11008                           ; Number of cases is 1, Range of values is 0 to 0
 11009                           ; switch strategies available:
 11010                           ; Name         Instructions Cycles
 11011                           ; simple_byte            4     3 (average)
 11012                           ;	Chosen strategy is simple_byte
 11013  0035B6  500B               	movf	(??_atoi+1)^0,w,c
 11014  0035B8  0A00               	xorlw	0	; case 0
 11015  0035BA  B4D8               	btfsc	status,2,c
 11016  0035BC  EFE2  F01A         	goto	l6126
 11017  0035C0  EF08  F01B         	goto	l5060
 11018  0035C4                     l6126:
 11019                           
 11020                           ; Switch size 1, requested type "simple"
 11021                           ; Number of cases is 2, Range of values is 43 to 45
 11022                           ; switch strategies available:
 11023                           ; Name         Instructions Cycles
 11024                           ; simple_byte            7     4 (average)
 11025                           ;	Chosen strategy is simple_byte
 11026  0035C4  500A               	movf	??_atoi^0,w,c
 11027  0035C6  0A2B               	xorlw	43	; case 43
 11028  0035C8  B4D8               	btfsc	status,2,c
 11029  0035CA  EFCF  F01A         	goto	l5052
 11030  0035CE  0A06               	xorlw	6	; case 45
 11031  0035D0  B4D8               	btfsc	status,2,c
 11032  0035D2  EFCB  F01A         	goto	l5050
 11033  0035D6  EF08  F01B         	goto	l5060
 11034  0035DA                     l5056:
 11035  0035DA  C015  F001         	movff	atoi@n,___wmul@multiplier
 11036  0035DE  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 11037  0035E2  0E00               	movlw	0
 11038  0035E4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11039  0035E6  0E0A               	movlw	10
 11040  0035E8  6E03               	movwf	___wmul@multiplicand^0,c
 11041  0035EA  ECA7  F024         	call	___wmul	;wreg free
 11042  0035EE  C008  FFF6         	movff	atoi@s,tblptrl
 11043  0035F2  C009  FFF7         	movff	atoi@s+1,tblptrh
 11044  0035F6                     	if	0	;tblptru may be non-zero
 11045  0035F6                     	endif
 11046  0035F6                     	if	0	;tblptru may be non-zero
 11047  0035F6                     	endif
 11048  0035F6  0008               	tblrd		*
 11049  0035F8  50F5               	movf	tablat,w,c
 11050  0035FA  5E01               	subwf	?___wmul^0,f,c
 11051  0035FC  0E00               	movlw	0
 11052  0035FE  5A02               	subwfb	(?___wmul+1)^0,f,c
 11053  003600  0E30               	movlw	48
 11054  003602  2401               	addwf	?___wmul^0,w,c
 11055  003604  6E15               	movwf	atoi@n^0,c
 11056  003606  0E00               	movlw	0
 11057  003608  2002               	addwfc	(?___wmul+1)^0,w,c
 11058  00360A  6E16               	movwf	(atoi@n+1)^0,c
 11059  00360C  EFCF  F01A         	goto	l5052
 11060  003610                     l5060:
 11061  003610  0ED0               	movlw	208
 11062  003612  6E0A               	movwf	??_atoi^0,c
 11063  003614  0EFF               	movlw	255
 11064  003616  6E0B               	movwf	(??_atoi+1)^0,c
 11065  003618  C008  FFF6         	movff	atoi@s,tblptrl
 11066  00361C  C009  FFF7         	movff	atoi@s+1,tblptrh
 11067  003620                     	if	0	;tblptru may be non-zero
 11068  003620                     	endif
 11069  003620                     	if	0	;tblptru may be non-zero
 11070  003620                     	endif
 11071  003620  0008               	tblrd		*
 11072  003622  50F5               	movf	tablat,w,c
 11073  003624  6E0C               	movwf	(??_atoi+2)^0,c
 11074  003626  6A0D               	clrf	(??_atoi+3)^0,c
 11075  003628  500A               	movf	??_atoi^0,w,c
 11076  00362A  260C               	addwf	(??_atoi+2)^0,f,c
 11077  00362C  500B               	movf	(??_atoi+1)^0,w,c
 11078  00362E  220D               	addwfc	(??_atoi+3)^0,f,c
 11079  003630  500D               	movf	(??_atoi+3)^0,w,c
 11080  003632  E10A               	bnz	u6070
 11081  003634  0E0A               	movlw	10
 11082  003636  5C0C               	subwf	(??_atoi+2)^0,w,c
 11083  003638  A0D8               	btfss	status,0,c
 11084  00363A  EF21  F01B         	goto	u6071
 11085  00363E  EF24  F01B         	goto	u6070
 11086  003642                     u6071:
 11087  003642  0E01               	movlw	1
 11088  003644  EF25  F01B         	goto	u6080
 11089  003648                     u6070:
 11090  003648  0E00               	movlw	0
 11091  00364A                     u6080:
 11092  00364A  6E12               	movwf	_atoi$2938^0,c
 11093  00364C  6A13               	clrf	(_atoi$2938+1)^0,c
 11094  00364E  5012               	movf	_atoi$2938^0,w,c
 11095  003650  1013               	iorwf	(_atoi$2938+1)^0,w,c
 11096  003652  A4D8               	btfss	status,2,c
 11097  003654  EF2E  F01B         	goto	u6091
 11098  003658  EF30  F01B         	goto	u6090
 11099  00365C                     u6091:
 11100  00365C  EFED  F01A         	goto	l5056
 11101  003660                     u6090:
 11102  003660  500E               	movf	atoi@neg^0,w,c
 11103  003662  100F               	iorwf	(atoi@neg+1)^0,w,c
 11104  003664  A4D8               	btfss	status,2,c
 11105  003666  EF37  F01B         	goto	u6101
 11106  00366A  EF39  F01B         	goto	u6100
 11107  00366E                     u6101:
 11108  00366E  EF47  F01B         	goto	l1433
 11109  003672                     u6100:
 11110  003672  C015  F00A         	movff	atoi@n,??_atoi
 11111  003676  C016  F00B         	movff	atoi@n+1,??_atoi+1
 11112  00367A  1E0A               	comf	??_atoi^0,f,c
 11113  00367C  1E0B               	comf	(??_atoi+1)^0,f,c
 11114  00367E  4A0A               	infsnz	??_atoi^0,f,c
 11115  003680  2A0B               	incf	(??_atoi+1)^0,f,c
 11116  003682  C00A  F008         	movff	??_atoi,?_atoi
 11117  003686  C00B  F009         	movff	??_atoi+1,?_atoi+1
 11118  00368A  EF4B  F01B         	goto	l1436
 11119  00368E                     l1433:
 11120  00368E  C015  F008         	movff	atoi@n,?_atoi
 11121  003692  C016  F009         	movff	atoi@n+1,?_atoi+1
 11122  003696                     l1436:
 11123  003696  0012               	return		;funcret
 11124  003698                     __end_of_atoi:
 11125                           	callstack 0
 11126                           
 11127 ;; *************** function _isspace *****************
 11128 ;; Defined at:
 11129 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 11130 ;; Parameters:    Size  Location     Type
 11131 ;;  c               2    0[COMRAM] int 
 11132 ;; Auto vars:     Size  Location     Type
 11133 ;;		None
 11134 ;; Return value:  Size  Location     Type
 11135 ;;                  2    0[COMRAM] int 
 11136 ;; Registers used:
 11137 ;;		wreg, status,2, status,0
 11138 ;; Tracked objects:
 11139 ;;		On entry : 0/0
 11140 ;;		On exit  : 0/0
 11141 ;;		Unchanged: 0/0
 11142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11143 ;;      Params:         2       0       0       0       0       0       0
 11144 ;;      Locals:         1       0       0       0       0       0       0
 11145 ;;      Temps:          4       0       0       0       0       0       0
 11146 ;;      Totals:         7       0       0       0       0       0       0
 11147 ;;Total ram usage:        7 bytes
 11148 ;; Hardware stack levels used:    1
 11149 ;; Hardware stack levels required when called:    1
 11150 ;; This function calls:
 11151 ;;		Nothing
 11152 ;; This function is called by:
 11153 ;;		_atoi
 11154 ;; This function uses a non-reentrant model
 11155 ;;
 11156                           
 11157                           	psect	text37
 11158  004658                     __ptext37:
 11159                           	callstack 0
 11160  004658                     _isspace:
 11161                           	callstack 23
 11162  004658  0E01               	movlw	1
 11163  00465A  6E07               	movwf	_isspace$2967^0,c
 11164  00465C  0E20               	movlw	32
 11165  00465E  1801               	xorwf	isspace@c^0,w,c
 11166  004660  1002               	iorwf	(isspace@c+1)^0,w,c
 11167  004662  B4D8               	btfsc	status,2,c
 11168  004664  EF36  F023         	goto	u5351
 11169  004668  EF38  F023         	goto	u5350
 11170  00466C                     u5351:
 11171  00466C  EF51  F023         	goto	l4668
 11172  004670                     u5350:
 11173  004670  0EF7               	movlw	247
 11174  004672  6E03               	movwf	??_isspace^0,c
 11175  004674  0EFF               	movlw	255
 11176  004676  6E04               	movwf	(??_isspace+1)^0,c
 11177  004678  C001  F005         	movff	isspace@c,??_isspace+2
 11178  00467C  C002  F006         	movff	isspace@c+1,??_isspace+3
 11179  004680  5003               	movf	??_isspace^0,w,c
 11180  004682  2605               	addwf	(??_isspace+2)^0,f,c
 11181  004684  5004               	movf	(??_isspace+1)^0,w,c
 11182  004686  2206               	addwfc	(??_isspace+3)^0,f,c
 11183  004688  5006               	movf	(??_isspace+3)^0,w,c
 11184  00468A  E109               	bnz	u5360
 11185  00468C  0E05               	movlw	5
 11186  00468E  5C05               	subwf	(??_isspace+2)^0,w,c
 11187  004690  A0D8               	btfss	status,0,c
 11188  004692  EF4D  F023         	goto	u5361
 11189  004696  EF4F  F023         	goto	u5360
 11190  00469A                     u5361:
 11191  00469A  EF51  F023         	goto	l4668
 11192  00469E                     u5360:
 11193  00469E  0E00               	movlw	0
 11194  0046A0  6E07               	movwf	_isspace$2967^0,c
 11195  0046A2                     l4668:
 11196  0046A2  C007  F001         	movff	_isspace$2967,?_isspace
 11197  0046A6  6A02               	clrf	(?_isspace+1)^0,c
 11198  0046A8  0012               	return		;funcret
 11199  0046AA                     __end_of_isspace:
 11200                           	callstack 0
 11201                           
 11202 ;; *************** function _isdigit *****************
 11203 ;; Defined at:
 11204 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 11205 ;; Parameters:    Size  Location     Type
 11206 ;;  c               2    0[COMRAM] int 
 11207 ;; Auto vars:     Size  Location     Type
 11208 ;;		None
 11209 ;; Return value:  Size  Location     Type
 11210 ;;                  2    0[COMRAM] int 
 11211 ;; Registers used:
 11212 ;;		wreg, status,2, status,0
 11213 ;; Tracked objects:
 11214 ;;		On entry : 0/0
 11215 ;;		On exit  : 0/0
 11216 ;;		Unchanged: 0/0
 11217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11218 ;;      Params:         2       0       0       0       0       0       0
 11219 ;;      Locals:         0       0       0       0       0       0       0
 11220 ;;      Temps:          4       0       0       0       0       0       0
 11221 ;;      Totals:         6       0       0       0       0       0       0
 11222 ;;Total ram usage:        6 bytes
 11223 ;; Hardware stack levels used:    1
 11224 ;; Hardware stack levels required when called:    1
 11225 ;; This function calls:
 11226 ;;		Nothing
 11227 ;; This function is called by:
 11228 ;;		_vfpfcnvrt
 11229 ;;		_atoi
 11230 ;; This function uses a non-reentrant model
 11231 ;;
 11232                           
 11233                           	psect	text38
 11234  00487C                     __ptext38:
 11235                           	callstack 0
 11236  00487C                     _isdigit:
 11237                           	callstack 24
 11238  00487C  0ED0               	movlw	208
 11239  00487E  6E03               	movwf	??_isdigit^0,c
 11240  004880  0EFF               	movlw	255
 11241  004882  6E04               	movwf	(??_isdigit+1)^0,c
 11242  004884  C001  F005         	movff	isdigit@c,??_isdigit+2
 11243  004888  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 11244  00488C  5003               	movf	??_isdigit^0,w,c
 11245  00488E  2605               	addwf	(??_isdigit+2)^0,f,c
 11246  004890  5004               	movf	(??_isdigit+1)^0,w,c
 11247  004892  2206               	addwfc	(??_isdigit+3)^0,f,c
 11248  004894  5006               	movf	(??_isdigit+3)^0,w,c
 11249  004896  E10A               	bnz	u5330
 11250  004898  0E0A               	movlw	10
 11251  00489A  5C05               	subwf	(??_isdigit+2)^0,w,c
 11252  00489C  A0D8               	btfss	status,0,c
 11253  00489E  EF53  F024         	goto	u5331
 11254  0048A2  EF56  F024         	goto	u5330
 11255  0048A6                     u5331:
 11256  0048A6  0E01               	movlw	1
 11257  0048A8  EF57  F024         	goto	u5340
 11258  0048AC                     u5330:
 11259  0048AC  0E00               	movlw	0
 11260  0048AE                     u5340:
 11261  0048AE  6E01               	movwf	?_isdigit^0,c
 11262  0048B0  6A02               	clrf	(?_isdigit+1)^0,c
 11263  0048B2  0012               	return		;funcret
 11264  0048B4                     __end_of_isdigit:
 11265                           	callstack 0
 11266                           
 11267 ;; *************** function ___wmul *****************
 11268 ;; Defined at:
 11269 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 11270 ;; Parameters:    Size  Location     Type
 11271 ;;  multiplier      2    0[COMRAM] unsigned int 
 11272 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11273 ;; Auto vars:     Size  Location     Type
 11274 ;;  product         2    4[COMRAM] unsigned int 
 11275 ;; Return value:  Size  Location     Type
 11276 ;;                  2    0[COMRAM] unsigned int 
 11277 ;; Registers used:
 11278 ;;		wreg, status,2, status,0, prodl, prodh
 11279 ;; Tracked objects:
 11280 ;;		On entry : 0/0
 11281 ;;		On exit  : 0/0
 11282 ;;		Unchanged: 0/0
 11283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11284 ;;      Params:         4       0       0       0       0       0       0
 11285 ;;      Locals:         2       0       0       0       0       0       0
 11286 ;;      Temps:          0       0       0       0       0       0       0
 11287 ;;      Totals:         6       0       0       0       0       0       0
 11288 ;;Total ram usage:        6 bytes
 11289 ;; Hardware stack levels used:    1
 11290 ;; Hardware stack levels required when called:    1
 11291 ;; This function calls:
 11292 ;;		Nothing
 11293 ;; This function is called by:
 11294 ;;		_atoi
 11295 ;; This function uses a non-reentrant model
 11296 ;;
 11297                           
 11298                           	psect	text39
 11299  00494E                     __ptext39:
 11300                           	callstack 0
 11301  00494E                     ___wmul:
 11302                           	callstack 23
 11303  00494E  5001               	movf	___wmul@multiplier^0,w,c
 11304  004950  0203               	mulwf	___wmul@multiplicand^0,c
 11305  004952  CFF3 F005          	movff	prodl,___wmul@product
 11306  004956  CFF4 F006          	movff	prodh,___wmul@product+1
 11307  00495A  5001               	movf	___wmul@multiplier^0,w,c
 11308  00495C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11309  00495E  50F3               	movf	243,w,c
 11310  004960  2606               	addwf	(___wmul@product+1)^0,f,c
 11311  004962  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11312  004964  0203               	mulwf	___wmul@multiplicand^0,c
 11313  004966  50F3               	movf	243,w,c
 11314  004968  2606               	addwf	(___wmul@product+1)^0,f,c
 11315  00496A  C005  F001         	movff	___wmul@product,?___wmul
 11316  00496E  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11317  004972  0012               	return		;funcret
 11318  004974                     __end_of___wmul:
 11319                           	callstack 0
 11320                           
 11321 ;; *************** function _eepromWrite *****************
 11322 ;; Defined at:
 11323 ;;		line 62 in file "fs_eeprom.c"
 11324 ;; Parameters:    Size  Location     Type
 11325 ;;  address         1    wreg     unsigned char 
 11326 ;;  data            1    0[COMRAM] unsigned char 
 11327 ;; Auto vars:     Size  Location     Type
 11328 ;;  address         1    1[COMRAM] unsigned char 
 11329 ;; Return value:  Size  Location     Type
 11330 ;;                  1    wreg      void 
 11331 ;; Registers used:
 11332 ;;		wreg, status,2
 11333 ;; Tracked objects:
 11334 ;;		On entry : 0/0
 11335 ;;		On exit  : 0/0
 11336 ;;		Unchanged: 0/0
 11337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11338 ;;      Params:         1       0       0       0       0       0       0
 11339 ;;      Locals:         1       0       0       0       0       0       0
 11340 ;;      Temps:          0       0       0       0       0       0       0
 11341 ;;      Totals:         2       0       0       0       0       0       0
 11342 ;;Total ram usage:        2 bytes
 11343 ;; Hardware stack levels used:    1
 11344 ;; Hardware stack levels required when called:    1
 11345 ;; This function calls:
 11346 ;;		Nothing
 11347 ;; This function is called by:
 11348 ;;		_stateMachine
 11349 ;; This function uses a non-reentrant model
 11350 ;;
 11351                           
 11352                           	psect	text40
 11353  004920                     __ptext40:
 11354                           	callstack 0
 11355  004920                     _eepromWrite:
 11356                           	callstack 27
 11357                           
 11358                           ;incstack = 0
 11359                           ;eepromWrite@address stored from wreg
 11360  004920  6E02               	movwf	eepromWrite@address^0,c
 11361  004922                     
 11362                           ;fs_eeprom.c: 62: void eepromWrite(uint8_t address, uint8_t data);fs_eeprom.c: 63: {;fs_
      +                          eeprom.c: 66:     EEADR = (uint8_t)address;
 11363  004922  C002  FFA9         	movff	eepromWrite@address,4009	;volatile
 11364  004926                     
 11365                           ;fs_eeprom.c: 68:     EEDATA = data;
 11366  004926  C001  FFA8         	movff	eepromWrite@data,4008	;volatile
 11367  00492A                     
 11368                           ;fs_eeprom.c: 69:     EECON1bits.EEPGD = 0;
 11369  00492A  9EA6               	bcf	166,7,c	;volsfr
 11370  00492C                     
 11371                           ;fs_eeprom.c: 70:     EECON1bits.CFGS = 0;
 11372  00492C  9CA6               	bcf	166,6,c	;volsfr
 11373  00492E                     
 11374                           ;fs_eeprom.c: 71:     EECON1bits.WREN = 1;
 11375  00492E  84A6               	bsf	166,2,c	;volsfr
 11376  004930                     
 11377                           ;fs_eeprom.c: 75:     EECON2 = 0x55;
 11378  004930  0E55               	movlw	85
 11379  004932  6EA7               	movwf	167,c	;volsfr
 11380  004934                     
 11381                           ;fs_eeprom.c: 76:     EECON2 = 0xAA;
 11382  004934  0EAA               	movlw	170
 11383  004936  6EA7               	movwf	167,c	;volsfr
 11384  004938                     
 11385                           ;fs_eeprom.c: 77:     EECON1bits.WR = 1;
 11386  004938  82A6               	bsf	166,1,c	;volsfr
 11387  00493A                     l76:
 11388                           
 11389                           ;fs_eeprom.c: 80:     while(PIR2bits.EEIF == 0)
 11390  00493A  A8A1               	btfss	161,4,c	;volatile
 11391  00493C  EFA2  F024         	goto	u6421
 11392  004940  EFA4  F024         	goto	u6420
 11393  004944                     u6421:
 11394  004944  EF9D  F024         	goto	l76
 11395  004948                     u6420:
 11396  004948                     
 11397                           ;fs_eeprom.c: 85:     PIR2bits.EEIF = 0;
 11398  004948  98A1               	bcf	161,4,c	;volatile
 11399                           
 11400                           ;fs_eeprom.c: 86:     EECON1bits.WREN = 0;
 11401  00494A  94A6               	bcf	166,2,c	;volsfr
 11402  00494C  0012               	return		;funcret
 11403  00494E                     __end_of_eepromWrite:
 11404                           	callstack 0
 11405                           
 11406 ;; *************** function _Lcd_Write_String *****************
 11407 ;; Defined at:
 11408 ;;		line 146 in file "fs_lcd.c"
 11409 ;; Parameters:    Size  Location     Type
 11410 ;;  a               2    4[COMRAM] PTR unsigned char 
 11411 ;;		 -> STR_15(17), STR_13(17), STR_11(17), STR_9(17), 
 11412 ;;		 -> STR_7(17), STR_5(17), STR_3(17), STR_1(17), 
 11413 ;;		 -> stateMachine@textCursor2(16), 
 11414 ;; Auto vars:     Size  Location     Type
 11415 ;;  i               2    8[COMRAM] int 
 11416 ;; Return value:  Size  Location     Type
 11417 ;;                  1    wreg      void 
 11418 ;; Registers used:
 11419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11420 ;; Tracked objects:
 11421 ;;		On entry : 0/0
 11422 ;;		On exit  : 0/0
 11423 ;;		Unchanged: 0/0
 11424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11425 ;;      Params:         2       0       0       0       0       0       0
 11426 ;;      Locals:         2       0       0       0       0       0       0
 11427 ;;      Temps:          2       0       0       0       0       0       0
 11428 ;;      Totals:         6       0       0       0       0       0       0
 11429 ;;Total ram usage:        6 bytes
 11430 ;; Hardware stack levels used:    1
 11431 ;; Hardware stack levels required when called:    3
 11432 ;; This function calls:
 11433 ;;		_Lcd_Write_Char
 11434 ;; This function is called by:
 11435 ;;		_stateMachine
 11436 ;; This function uses a non-reentrant model
 11437 ;;
 11438                           
 11439                           	psect	text41
 11440  00439A                     __ptext41:
 11441                           	callstack 0
 11442  00439A                     _Lcd_Write_String:
 11443                           	callstack 25
 11444  00439A                     
 11445                           ;fs_lcd.c: 146: void Lcd_Write_String(char *a);fs_lcd.c: 147: {;fs_lcd.c: 148:    int i;
      +                          ;fs_lcd.c: 149:    for(i=0;a[i]!='\0';i++)
 11446  00439A  0E00               	movlw	0
 11447  00439C  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
 11448  00439E  0E00               	movlw	0
 11449  0043A0  6E09               	movwf	Lcd_Write_String@i^0,c
 11450  0043A2  EFED  F021         	goto	l5304
 11451  0043A6                     l5300:
 11452                           
 11453                           ;fs_lcd.c: 150:    Lcd_Write_Char(a[i]);
 11454  0043A6  5009               	movf	Lcd_Write_String@i^0,w,c
 11455  0043A8  2405               	addwf	Lcd_Write_String@a^0,w,c
 11456  0043AA  6E07               	movwf	??_Lcd_Write_String^0,c
 11457  0043AC  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 11458  0043AE  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 11459  0043B0  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 11460  0043B2  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 11461  0043B6  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 11462  0043BA  6AF8               	clrf	tblptru,c
 11463  0043BC  0E05               	movlw	(high __ramtop+-1)
 11464  0043BE  64F7               	cpfsgt	tblptrh,c
 11465  0043C0  D003               	bra	u6457
 11466  0043C2  0008               	tblrd		*
 11467  0043C4  50F5               	movf	tablat,w,c
 11468  0043C6  D005               	bra	u6450
 11469  0043C8                     u6457:
 11470  0043C8  CFF6 FFE9          	movff	tblptrl,fsr0l
 11471  0043CC  CFF7 FFEA          	movff	tblptrh,fsr0h
 11472  0043D0  50EF               	movf	indf0,w,c
 11473  0043D2                     u6450:
 11474  0043D2  EC75  F024         	call	_Lcd_Write_Char
 11475  0043D6  4A09               	infsnz	Lcd_Write_String@i^0,f,c
 11476  0043D8  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
 11477  0043DA                     l5304:
 11478  0043DA  5009               	movf	Lcd_Write_String@i^0,w,c
 11479  0043DC  2405               	addwf	Lcd_Write_String@a^0,w,c
 11480  0043DE  6E07               	movwf	??_Lcd_Write_String^0,c
 11481  0043E0  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 11482  0043E2  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 11483  0043E4  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 11484  0043E6  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 11485  0043EA  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 11486  0043EE  6AF8               	clrf	tblptru,c
 11487  0043F0  0E05               	movlw	(high __ramtop+-1)
 11488  0043F2  64F7               	cpfsgt	tblptrh,c
 11489  0043F4  D003               	bra	u6467
 11490  0043F6  0008               	tblrd		*
 11491  0043F8  50F5               	movf	tablat,w,c
 11492  0043FA  D005               	bra	u6460
 11493  0043FC                     u6467:
 11494  0043FC  CFF6 FFE9          	movff	tblptrl,fsr0l
 11495  004400  CFF7 FFEA          	movff	tblptrh,fsr0h
 11496  004404  50EF               	movf	indf0,w,c
 11497  004406                     u6460:
 11498  004406  0900               	iorlw	0
 11499  004408  A4D8               	btfss	status,2,c
 11500  00440A  EF09  F022         	goto	u6471
 11501  00440E  EF0B  F022         	goto	u6470
 11502  004412                     u6471:
 11503  004412  EFD3  F021         	goto	l5300
 11504  004416                     u6470:
 11505  004416  0012               	return		;funcret
 11506  004418                     __end_of_Lcd_Write_String:
 11507                           	callstack 0
 11508                           
 11509 ;; *************** function _Lcd_Write_Char *****************
 11510 ;; Defined at:
 11511 ;;		line 123 in file "fs_lcd.c"
 11512 ;; Parameters:    Size  Location     Type
 11513 ;;  a               1    wreg     unsigned char 
 11514 ;; Auto vars:     Size  Location     Type
 11515 ;;  a               1    3[COMRAM] unsigned char 
 11516 ;;  y               1    2[COMRAM] unsigned char 
 11517 ;;  temp            1    1[COMRAM] unsigned char 
 11518 ;; Return value:  Size  Location     Type
 11519 ;;                  1    wreg      void 
 11520 ;; Registers used:
 11521 ;;		wreg, status,2, status,0, cstack
 11522 ;; Tracked objects:
 11523 ;;		On entry : 0/0
 11524 ;;		On exit  : 0/0
 11525 ;;		Unchanged: 0/0
 11526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11527 ;;      Params:         0       0       0       0       0       0       0
 11528 ;;      Locals:         3       0       0       0       0       0       0
 11529 ;;      Temps:          0       0       0       0       0       0       0
 11530 ;;      Totals:         3       0       0       0       0       0       0
 11531 ;;Total ram usage:        3 bytes
 11532 ;; Hardware stack levels used:    1
 11533 ;; Hardware stack levels required when called:    2
 11534 ;; This function calls:
 11535 ;;		_Lcd_Port
 11536 ;; This function is called by:
 11537 ;;		_Lcd_Write_String
 11538 ;; This function uses a non-reentrant model
 11539 ;;
 11540                           
 11541                           	psect	text42
 11542  0048EA                     __ptext42:
 11543                           	callstack 0
 11544  0048EA                     _Lcd_Write_Char:
 11545                           	callstack 25
 11546                           
 11547                           ;incstack = 0
 11548                           ;Lcd_Write_Char@a stored from wreg
 11549  0048EA  6E04               	movwf	Lcd_Write_Char@a^0,c
 11550  0048EC                     
 11551                           ;fs_lcd.c: 123: void Lcd_Write_Char(char a);fs_lcd.c: 124: {;fs_lcd.c: 125:    char temp
      +                          ,y;;fs_lcd.c: 126:    temp = a&0x0F;
 11552  0048EC  5004               	movf	Lcd_Write_Char@a^0,w,c
 11553  0048EE  0B0F               	andlw	15
 11554  0048F0  6E02               	movwf	Lcd_Write_Char@temp^0,c
 11555                           
 11556                           ;fs_lcd.c: 127:    y = a&0xF0;
 11557  0048F2  5004               	movf	Lcd_Write_Char@a^0,w,c
 11558  0048F4  0BF0               	andlw	240
 11559  0048F6  6E03               	movwf	Lcd_Write_Char@y^0,c
 11560  0048F8                     
 11561                           ;fs_lcd.c: 128:    PORTEbits.RE0 = 1;
 11562  0048F8  8084               	bsf	132,0,c	;volatile
 11563  0048FA                     
 11564                           ;fs_lcd.c: 129:    Lcd_Port(y>>4);
 11565  0048FA  3803               	swapf	Lcd_Write_Char@y^0,w,c
 11566  0048FC  0B0F               	andlw	15
 11567  0048FE  ECFE  F022         	call	_Lcd_Port
 11568  004902                     
 11569                           ;fs_lcd.c: 130:    PORTAbits.RA3 = 1;
 11570  004902  8680               	bsf	128,3,c	;volatile
 11571  004904                     
 11572                           ;fs_lcd.c: 131:    _delay((unsigned long)((30)*(64000000UL/4000000.0)));
 11573  004904  0EA0               	movlw	160
 11574  004906                     u7677:
 11575  004906  2EE8               	decfsz	wreg,f,c
 11576  004908  D7FE               	bra	u7677
 11577  00490A                     
 11578                           ;fs_lcd.c: 132:    PORTAbits.RA3 = 0;
 11579  00490A  9680               	bcf	128,3,c	;volatile
 11580  00490C                     
 11581                           ;fs_lcd.c: 133:    Lcd_Port(temp);
 11582  00490C  5002               	movf	Lcd_Write_Char@temp^0,w,c
 11583  00490E  ECFE  F022         	call	_Lcd_Port
 11584  004912                     
 11585                           ;fs_lcd.c: 134:    PORTAbits.RA3 = 1;
 11586  004912  8680               	bsf	128,3,c	;volatile
 11587  004914                     
 11588                           ;fs_lcd.c: 135:    _delay((unsigned long)((25)*(64000000UL/4000000.0)));
 11589  004914  0E85               	movlw	133
 11590  004916                     u7687:
 11591  004916  2EE8               	decfsz	wreg,f,c
 11592  004918  D7FE               	bra	u7687
 11593  00491A  F000               	nop	
 11594  00491C                     
 11595                           ;fs_lcd.c: 136:    PORTAbits.RA3 = 0;
 11596  00491C  9680               	bcf	128,3,c	;volatile
 11597  00491E  0012               	return		;funcret
 11598  004920                     __end_of_Lcd_Write_Char:
 11599                           	callstack 0
 11600                           
 11601 ;; *************** function _Lcd_Set_Cursor *****************
 11602 ;; Defined at:
 11603 ;;		line 53 in file "fs_lcd.c"
 11604 ;; Parameters:    Size  Location     Type
 11605 ;;  a               1    wreg     unsigned char 
 11606 ;;  b               1    3[COMRAM] unsigned char 
 11607 ;; Auto vars:     Size  Location     Type
 11608 ;;  a               1    4[COMRAM] unsigned char 
 11609 ;;  temp            1    7[COMRAM] unsigned char 
 11610 ;;  y               1    6[COMRAM] unsigned char 
 11611 ;;  z               1    5[COMRAM] unsigned char 
 11612 ;; Return value:  Size  Location     Type
 11613 ;;                  1    wreg      void 
 11614 ;; Registers used:
 11615 ;;		wreg, status,2, status,0, cstack
 11616 ;; Tracked objects:
 11617 ;;		On entry : 0/0
 11618 ;;		On exit  : 0/0
 11619 ;;		Unchanged: 0/0
 11620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11621 ;;      Params:         1       0       0       0       0       0       0
 11622 ;;      Locals:         4       0       0       0       0       0       0
 11623 ;;      Temps:          0       0       0       0       0       0       0
 11624 ;;      Totals:         5       0       0       0       0       0       0
 11625 ;;Total ram usage:        5 bytes
 11626 ;; Hardware stack levels used:    1
 11627 ;; Hardware stack levels required when called:    3
 11628 ;; This function calls:
 11629 ;;		_Lcd_Cmd
 11630 ;; This function is called by:
 11631 ;;		_stateMachine
 11632 ;; This function uses a non-reentrant model
 11633 ;;
 11634                           
 11635                           	psect	text43
 11636  004418                     __ptext43:
 11637                           	callstack 0
 11638  004418                     _Lcd_Set_Cursor:
 11639                           	callstack 25
 11640                           
 11641                           ;incstack = 0
 11642                           ;Lcd_Set_Cursor@a stored from wreg
 11643  004418  6E05               	movwf	Lcd_Set_Cursor@a^0,c
 11644  00441A                     
 11645                           ;fs_lcd.c: 53: void Lcd_Set_Cursor(char a, char b);fs_lcd.c: 54: {;fs_lcd.c: 55:    char
      +                           temp,z,y;;fs_lcd.c: 56:    if(a == 1)
 11646  00441A  0405               	decf	Lcd_Set_Cursor@a^0,w,c
 11647  00441C  A4D8               	btfss	status,2,c
 11648  00441E  EF13  F022         	goto	u6431
 11649  004422  EF15  F022         	goto	u6430
 11650  004426                     u6431:
 11651  004426  EF26  F022         	goto	l5290
 11652  00442A                     u6430:
 11653  00442A                     
 11654                           ;fs_lcd.c: 57:    {;fs_lcd.c: 58:      temp = 0x80 + b - 1;
 11655  00442A  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 11656  00442C  0F7F               	addlw	127
 11657  00442E  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 11658                           
 11659                           ;fs_lcd.c: 59:       z = temp>>4;
 11660  004430  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 11661  004432  0B0F               	andlw	15
 11662  004434  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 11663                           
 11664                           ;fs_lcd.c: 60:       y = temp & 0x0F;
 11665  004436  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 11666  004438  0B0F               	andlw	15
 11667  00443A  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 11668  00443C                     
 11669                           ;fs_lcd.c: 61:       Lcd_Cmd(z);
 11670  00443C  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 11671  00443E  ECDB  F024         	call	_Lcd_Cmd
 11672  004442                     
 11673                           ;fs_lcd.c: 62:       Lcd_Cmd(y);
 11674  004442  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 11675  004444  ECDB  F024         	call	_Lcd_Cmd
 11676                           
 11677                           ;fs_lcd.c: 63:    }
 11678  004448  EF3E  F022         	goto	l122
 11679  00444C                     l5290:
 11680  00444C  0E02               	movlw	2
 11681  00444E  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
 11682  004450  A4D8               	btfss	status,2,c
 11683  004452  EF2D  F022         	goto	u6441
 11684  004456  EF2F  F022         	goto	u6440
 11685  00445A                     u6441:
 11686  00445A  EF3E  F022         	goto	l122
 11687  00445E                     u6440:
 11688  00445E                     
 11689                           ;fs_lcd.c: 65:    {;fs_lcd.c: 66:       temp = 0xC0 + b - 1;
 11690  00445E  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 11691  004460  0FBF               	addlw	191
 11692  004462  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 11693                           
 11694                           ;fs_lcd.c: 67:       z = temp>>4;
 11695  004464  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 11696  004466  0B0F               	andlw	15
 11697  004468  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 11698                           
 11699                           ;fs_lcd.c: 68:       y = temp & 0x0F;
 11700  00446A  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 11701  00446C  0B0F               	andlw	15
 11702  00446E  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 11703  004470                     
 11704                           ;fs_lcd.c: 69:       Lcd_Cmd(z);
 11705  004470  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 11706  004472  ECDB  F024         	call	_Lcd_Cmd
 11707  004476                     
 11708                           ;fs_lcd.c: 70:       Lcd_Cmd(y);
 11709  004476  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 11710  004478  ECDB  F024         	call	_Lcd_Cmd
 11711  00447C                     l122:
 11712  00447C  0012               	return		;funcret
 11713  00447E                     __end_of_Lcd_Set_Cursor:
 11714                           	callstack 0
 11715                           
 11716 ;; *************** function _buttonControlFlags *****************
 11717 ;; Defined at:
 11718 ;;		line 72 in file "fs_menu_controller.c"
 11719 ;; Parameters:    Size  Location     Type
 11720 ;;		None
 11721 ;; Auto vars:     Size  Location     Type
 11722 ;;  textCursor2    16    0[COMRAM] unsigned char [16]
 11723 ;; Return value:  Size  Location     Type
 11724 ;;                  1    wreg      void 
 11725 ;; Registers used:
 11726 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11727 ;; Tracked objects:
 11728 ;;		On entry : 0/0
 11729 ;;		On exit  : 0/0
 11730 ;;		Unchanged: 0/0
 11731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11732 ;;      Params:         0       0       0       0       0       0       0
 11733 ;;      Locals:        16       0       0       0       0       0       0
 11734 ;;      Temps:          0       0       0       0       0       0       0
 11735 ;;      Totals:        16       0       0       0       0       0       0
 11736 ;;Total ram usage:       16 bytes
 11737 ;; Hardware stack levels used:    1
 11738 ;; Hardware stack levels required when called:    1
 11739 ;; This function calls:
 11740 ;;		Nothing
 11741 ;; This function is called by:
 11742 ;;		_menuControl
 11743 ;; This function uses a non-reentrant model
 11744 ;;
 11745                           
 11746                           	psect	text44
 11747  003362                     __ptext44:
 11748                           	callstack 0
 11749  003362                     _buttonControlFlags:
 11750                           	callstack 28
 11751  003362                     
 11752                           ;fs_menu_controller.c: 74:     char textCursor2[16] = {0};
 11753  003362  EE20  F001         	lfsr	2,buttonControlFlags@textCursor2
 11754  003366  0E0F               	movlw	15
 11755  003368                     u6491:
 11756  003368  6ADE               	clrf	postinc2,c
 11757  00336A  06E8               	decf	wreg,f,c
 11758  00336C  E2FD               	bc	u6491
 11759  00336E                     
 11760                           ;fs_menu_controller.c: 76:     if ((button_bounce_controller.menu == 0) && (PORTBbits.RB
      +                          2 == 0))
 11761  00336E  B05E               	btfsc	_button_bounce_controller^0,0,c
 11762  003370  EFBC  F019         	goto	u6501
 11763  003374  EFBE  F019         	goto	u6500
 11764  003378                     u6501:
 11765  003378  EFC8  F019         	goto	l330
 11766  00337C                     u6500:
 11767  00337C  B481               	btfsc	129,2,c	;volatile
 11768  00337E  EFC3  F019         	goto	u6511
 11769  003382  EFC5  F019         	goto	u6510
 11770  003386                     u6511:
 11771  003386  EFC8  F019         	goto	l330
 11772  00338A                     u6510:
 11773  00338A                     
 11774                           ;fs_menu_controller.c: 77:     {;fs_menu_controller.c: 78:         button_bounce_control
      +                          ler.menu = 1;
 11775  00338A  805E               	bsf	_button_bounce_controller^0,0,c
 11776                           
 11777                           ;fs_menu_controller.c: 79:         menu_flags.menu_input_flag = 1;
 11778  00338C  0100               	movlb	0	; () banked
 11779  00338E  81F0               	bsf	_menu_flags& (0+255),0,b
 11780  003390                     l330:
 11781                           
 11782                           ;fs_menu_controller.c: 82:     if ((PORTBbits.RB2 == 1) && (button_bounce_controller.men
      +                          u == 1))
 11783  003390  A481               	btfss	129,2,c	;volatile
 11784  003392  EFCD  F019         	goto	u6521
 11785  003396  EFCF  F019         	goto	u6520
 11786  00339A                     u6521:
 11787  00339A  EFD9  F019         	goto	l331
 11788  00339E                     u6520:
 11789  00339E  A05E               	btfss	_button_bounce_controller^0,0,c
 11790  0033A0  EFD4  F019         	goto	u6531
 11791  0033A4  EFD6  F019         	goto	u6530
 11792  0033A8                     u6531:
 11793  0033A8  EFD9  F019         	goto	l331
 11794  0033AC                     u6530:
 11795  0033AC                     
 11796                           ;fs_menu_controller.c: 83:     {;fs_menu_controller.c: 84:         button_bounce_control
      +                          ler.menu = 0;
 11797  0033AC  905E               	bcf	_button_bounce_controller^0,0,c
 11798                           
 11799                           ;fs_menu_controller.c: 85:         menu_flags.menu_input_flag = 0;
 11800  0033AE  0100               	movlb	0	; () banked
 11801  0033B0  91F0               	bcf	_menu_flags& (0+255),0,b
 11802  0033B2                     l331:
 11803                           
 11804                           ;fs_menu_controller.c: 88:     if ((button_bounce_controller.pause == 0) && (PORTBbits.R
      +                          B3 == 0))
 11805  0033B2  B65E               	btfsc	_button_bounce_controller^0,3,c
 11806  0033B4  EFDE  F019         	goto	u6541
 11807  0033B8  EFE0  F019         	goto	u6540
 11808  0033BC                     u6541:
 11809  0033BC  EFEA  F019         	goto	l332
 11810  0033C0                     u6540:
 11811  0033C0  B681               	btfsc	129,3,c	;volatile
 11812  0033C2  EFE5  F019         	goto	u6551
 11813  0033C6  EFE7  F019         	goto	u6550
 11814  0033CA                     u6551:
 11815  0033CA  EFEA  F019         	goto	l332
 11816  0033CE                     u6550:
 11817  0033CE                     
 11818                           ;fs_menu_controller.c: 89:     {;fs_menu_controller.c: 90:         button_bounce_control
      +                          ler.pause = 1;
 11819  0033CE  865E               	bsf	_button_bounce_controller^0,3,c
 11820                           
 11821                           ;fs_menu_controller.c: 91:         menu_flags.menu_pause_flag = 1;
 11822  0033D0  0100               	movlb	0	; () banked
 11823  0033D2  87F0               	bsf	_menu_flags& (0+255),3,b
 11824  0033D4                     l332:
 11825                           
 11826                           ;fs_menu_controller.c: 93:     if ((PORTBbits.RB3 == 1) && (button_bounce_controller.pau
      +                          se == 1))
 11827  0033D4  A681               	btfss	129,3,c	;volatile
 11828  0033D6  EFEF  F019         	goto	u6561
 11829  0033DA  EFF1  F019         	goto	u6560
 11830  0033DE                     u6561:
 11831  0033DE  EFFB  F019         	goto	l333
 11832  0033E2                     u6560:
 11833  0033E2  A65E               	btfss	_button_bounce_controller^0,3,c
 11834  0033E4  EFF6  F019         	goto	u6571
 11835  0033E8  EFF8  F019         	goto	u6570
 11836  0033EC                     u6571:
 11837  0033EC  EFFB  F019         	goto	l333
 11838  0033F0                     u6570:
 11839  0033F0                     
 11840                           ;fs_menu_controller.c: 94:     {;fs_menu_controller.c: 95:         button_bounce_control
      +                          ler.pause = 0;
 11841  0033F0  965E               	bcf	_button_bounce_controller^0,3,c
 11842                           
 11843                           ;fs_menu_controller.c: 96:         menu_flags.menu_pause_flag = 0;
 11844  0033F2  0100               	movlb	0	; () banked
 11845  0033F4  97F0               	bcf	_menu_flags& (0+255),3,b
 11846  0033F6                     l333:
 11847                           
 11848                           ;fs_menu_controller.c: 100:     if ((button_bounce_controller.start == 0) && (PORTAbits.
      +                          RA0 == 0))
 11849  0033F6  B25E               	btfsc	_button_bounce_controller^0,1,c
 11850  0033F8  EF00  F01A         	goto	u6581
 11851  0033FC  EF02  F01A         	goto	u6580
 11852  003400                     u6581:
 11853  003400  EF0C  F01A         	goto	l334
 11854  003404                     u6580:
 11855  003404  B080               	btfsc	128,0,c	;volatile
 11856  003406  EF07  F01A         	goto	u6591
 11857  00340A  EF09  F01A         	goto	u6590
 11858  00340E                     u6591:
 11859  00340E  EF0C  F01A         	goto	l334
 11860  003412                     u6590:
 11861  003412                     
 11862                           ;fs_menu_controller.c: 101:     {;fs_menu_controller.c: 102:         button_bounce_contr
      +                          oller.start = 1;
 11863  003412  825E               	bsf	_button_bounce_controller^0,1,c
 11864                           
 11865                           ;fs_menu_controller.c: 103:         menu_flags.menu_start_flag = 1;
 11866  003414  0100               	movlb	0	; () banked
 11867  003416  83F0               	bsf	_menu_flags& (0+255),1,b
 11868  003418                     l334:
 11869                           
 11870                           ;fs_menu_controller.c: 105:     if ((PORTAbits.RA0 == 1) && (button_bounce_controller.st
      +                          art == 1))
 11871  003418  A080               	btfss	128,0,c	;volatile
 11872  00341A  EF11  F01A         	goto	u6601
 11873  00341E  EF13  F01A         	goto	u6600
 11874  003422                     u6601:
 11875  003422  EF1D  F01A         	goto	l335
 11876  003426                     u6600:
 11877  003426  A25E               	btfss	_button_bounce_controller^0,1,c
 11878  003428  EF18  F01A         	goto	u6611
 11879  00342C  EF1A  F01A         	goto	u6610
 11880  003430                     u6611:
 11881  003430  EF1D  F01A         	goto	l335
 11882  003434                     u6610:
 11883  003434                     
 11884                           ;fs_menu_controller.c: 106:     {;fs_menu_controller.c: 107:         button_bounce_contr
      +                          oller.start = 0;
 11885  003434  925E               	bcf	_button_bounce_controller^0,1,c
 11886                           
 11887                           ;fs_menu_controller.c: 108:         menu_flags.menu_start_flag = 0;
 11888  003436  0100               	movlb	0	; () banked
 11889  003438  93F0               	bcf	_menu_flags& (0+255),1,b
 11890  00343A                     l335:
 11891                           
 11892                           ;fs_menu_controller.c: 112:     if ((button_bounce_controller.stop == 0) && (PORTAbits.R
      +                          A5 == 0))
 11893  00343A  B45E               	btfsc	_button_bounce_controller^0,2,c
 11894  00343C  EF22  F01A         	goto	u6621
 11895  003440  EF24  F01A         	goto	u6620
 11896  003444                     u6621:
 11897  003444  EF2E  F01A         	goto	l336
 11898  003448                     u6620:
 11899  003448  BA80               	btfsc	128,5,c	;volatile
 11900  00344A  EF29  F01A         	goto	u6631
 11901  00344E  EF2B  F01A         	goto	u6630
 11902  003452                     u6631:
 11903  003452  EF2E  F01A         	goto	l336
 11904  003456                     u6630:
 11905  003456                     
 11906                           ;fs_menu_controller.c: 113:     {;fs_menu_controller.c: 114:         button_bounce_contr
      +                          oller.stop = 1;
 11907  003456  845E               	bsf	_button_bounce_controller^0,2,c
 11908                           
 11909                           ;fs_menu_controller.c: 115:         menu_flags.menu_stop_flag = 1;
 11910  003458  0100               	movlb	0	; () banked
 11911  00345A  85F0               	bsf	_menu_flags& (0+255),2,b
 11912  00345C                     l336:
 11913                           
 11914                           ;fs_menu_controller.c: 117:     if ((PORTAbits.RA5 == 1) && (button_bounce_controller.st
      +                          op == 1))
 11915  00345C  AA80               	btfss	128,5,c	;volatile
 11916  00345E  EF33  F01A         	goto	u6641
 11917  003462  EF35  F01A         	goto	u6640
 11918  003466                     u6641:
 11919  003466  EF3F  F01A         	goto	l337
 11920  00346A                     u6640:
 11921  00346A  A45E               	btfss	_button_bounce_controller^0,2,c
 11922  00346C  EF3A  F01A         	goto	u6651
 11923  003470  EF3C  F01A         	goto	u6650
 11924  003474                     u6651:
 11925  003474  EF3F  F01A         	goto	l337
 11926  003478                     u6650:
 11927  003478                     
 11928                           ;fs_menu_controller.c: 118:     {;fs_menu_controller.c: 119:         button_bounce_contr
      +                          oller.stop = 0;
 11929  003478  945E               	bcf	_button_bounce_controller^0,2,c
 11930                           
 11931                           ;fs_menu_controller.c: 120:         menu_flags.menu_stop_flag = 0;
 11932  00347A  0100               	movlb	0	; () banked
 11933  00347C  95F0               	bcf	_menu_flags& (0+255),2,b
 11934  00347E                     l337:
 11935                           
 11936                           ;fs_menu_controller.c: 124:     if ((button_bounce_controller.increase == 0) && (PORTBbi
      +                          ts.RB5 == 0))
 11937  00347E  BA5E               	btfsc	_button_bounce_controller^0,5,c
 11938  003480  EF44  F01A         	goto	u6661
 11939  003484  EF46  F01A         	goto	u6660
 11940  003488                     u6661:
 11941  003488  EF50  F01A         	goto	l338
 11942  00348C                     u6660:
 11943  00348C  BA81               	btfsc	129,5,c	;volatile
 11944  00348E  EF4B  F01A         	goto	u6671
 11945  003492  EF4D  F01A         	goto	u6670
 11946  003496                     u6671:
 11947  003496  EF50  F01A         	goto	l338
 11948  00349A                     u6670:
 11949  00349A                     
 11950                           ;fs_menu_controller.c: 125:     {;fs_menu_controller.c: 126:         button_bounce_contr
      +                          oller.increase = 1;
 11951  00349A  8A5E               	bsf	_button_bounce_controller^0,5,c
 11952                           
 11953                           ;fs_menu_controller.c: 127:         menu_flags.menu_increase_flag = 1;
 11954  00349C  0100               	movlb	0	; () banked
 11955  00349E  89F0               	bsf	_menu_flags& (0+255),4,b
 11956  0034A0                     l338:
 11957                           
 11958                           ;fs_menu_controller.c: 129:     if ((PORTBbits.RB5 == 1) && (button_bounce_controller.in
      +                          crease == 1))
 11959  0034A0  AA81               	btfss	129,5,c	;volatile
 11960  0034A2  EF55  F01A         	goto	u6681
 11961  0034A6  EF57  F01A         	goto	u6680
 11962  0034AA                     u6681:
 11963  0034AA  EF61  F01A         	goto	l339
 11964  0034AE                     u6680:
 11965  0034AE  AA5E               	btfss	_button_bounce_controller^0,5,c
 11966  0034B0  EF5C  F01A         	goto	u6691
 11967  0034B4  EF5E  F01A         	goto	u6690
 11968  0034B8                     u6691:
 11969  0034B8  EF61  F01A         	goto	l339
 11970  0034BC                     u6690:
 11971  0034BC                     
 11972                           ;fs_menu_controller.c: 130:     {;fs_menu_controller.c: 131:         button_bounce_contr
      +                          oller.increase = 0;
 11973  0034BC  9A5E               	bcf	_button_bounce_controller^0,5,c
 11974                           
 11975                           ;fs_menu_controller.c: 132:         menu_flags.menu_increase_flag = 0;
 11976  0034BE  0100               	movlb	0	; () banked
 11977  0034C0  99F0               	bcf	_menu_flags& (0+255),4,b
 11978  0034C2                     l339:
 11979                           
 11980                           ;fs_menu_controller.c: 136:     if ((button_bounce_controller.decrease == 0) && (PORTBbi
      +                          ts.RB4 == 0))
 11981  0034C2  B85E               	btfsc	_button_bounce_controller^0,4,c
 11982  0034C4  EF66  F01A         	goto	u6701
 11983  0034C8  EF68  F01A         	goto	u6700
 11984  0034CC                     u6701:
 11985  0034CC  EF72  F01A         	goto	l340
 11986  0034D0                     u6700:
 11987  0034D0  B881               	btfsc	129,4,c	;volatile
 11988  0034D2  EF6D  F01A         	goto	u6711
 11989  0034D6  EF6F  F01A         	goto	u6710
 11990  0034DA                     u6711:
 11991  0034DA  EF72  F01A         	goto	l340
 11992  0034DE                     u6710:
 11993  0034DE                     
 11994                           ;fs_menu_controller.c: 137:     {;fs_menu_controller.c: 138:         button_bounce_contr
      +                          oller.decrease = 1;
 11995  0034DE  885E               	bsf	_button_bounce_controller^0,4,c
 11996                           
 11997                           ;fs_menu_controller.c: 139:         menu_flags.menu_decrease_flag = 1;
 11998  0034E0  0100               	movlb	0	; () banked
 11999  0034E2  8BF0               	bsf	_menu_flags& (0+255),5,b
 12000  0034E4                     l340:
 12001                           
 12002                           ;fs_menu_controller.c: 141:     if ((PORTBbits.RB4 == 1) && (button_bounce_controller.de
      +                          crease == 1))
 12003  0034E4  A881               	btfss	129,4,c	;volatile
 12004  0034E6  EF77  F01A         	goto	u6721
 12005  0034EA  EF79  F01A         	goto	u6720
 12006  0034EE                     u6721:
 12007  0034EE  EF83  F01A         	goto	l342
 12008  0034F2                     u6720:
 12009  0034F2  A85E               	btfss	_button_bounce_controller^0,4,c
 12010  0034F4  EF7E  F01A         	goto	u6731
 12011  0034F8  EF80  F01A         	goto	u6730
 12012  0034FC                     u6731:
 12013  0034FC  EF83  F01A         	goto	l342
 12014  003500                     u6730:
 12015  003500                     
 12016                           ;fs_menu_controller.c: 142:     {;fs_menu_controller.c: 143:         button_bounce_contr
      +                          oller.decrease = 0;
 12017  003500  985E               	bcf	_button_bounce_controller^0,4,c
 12018                           
 12019                           ;fs_menu_controller.c: 144:         menu_flags.menu_decrease_flag = 0;
 12020  003502  0100               	movlb	0	; () banked
 12021  003504  9BF0               	bcf	_menu_flags& (0+255),5,b
 12022  003506                     l342:
 12023  003506  0012               	return		;funcret
 12024  003508                     __end_of_buttonControlFlags:
 12025                           	callstack 0
 12026                           
 12027 ;; *************** function _mcu_init *****************
 12028 ;; Defined at:
 12029 ;;		line 38 in file "fs_mcu.c"
 12030 ;; Parameters:    Size  Location     Type
 12031 ;;		None
 12032 ;; Auto vars:     Size  Location     Type
 12033 ;;		None
 12034 ;; Return value:  Size  Location     Type
 12035 ;;                  1    wreg      void 
 12036 ;; Registers used:
 12037 ;;		wreg, status,2
 12038 ;; Tracked objects:
 12039 ;;		On entry : 0/0
 12040 ;;		On exit  : 0/0
 12041 ;;		Unchanged: 0/0
 12042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12043 ;;      Params:         0       0       0       0       0       0       0
 12044 ;;      Locals:         0       0       0       0       0       0       0
 12045 ;;      Temps:          0       0       0       0       0       0       0
 12046 ;;      Totals:         0       0       0       0       0       0       0
 12047 ;;Total ram usage:        0 bytes
 12048 ;; Hardware stack levels used:    1
 12049 ;; Hardware stack levels required when called:    1
 12050 ;; This function calls:
 12051 ;;		Nothing
 12052 ;; This function is called by:
 12053 ;;		_main
 12054 ;; This function uses a non-reentrant model
 12055 ;;
 12056                           
 12057                           	psect	text45
 12058  0049D4                     __ptext45:
 12059                           	callstack 0
 12060  0049D4                     _mcu_init:
 12061                           	callstack 29
 12062  0049D4                     
 12063                           ;fs_mcu.c: 40:    OSCCONbits.IRCF = 0b111;
 12064  0049D4  0E70               	movlw	112
 12065  0049D6  12D3               	iorwf	211,f,c	;volatile
 12066  0049D8                     
 12067                           ;fs_mcu.c: 42:    OSCTUNEbits.PLLEN = 0b1;
 12068  0049D8  8C9B               	bsf	155,6,c	;volatile
 12069  0049DA                     l257:
 12070  0049DA  A4D3               	btfss	211,2,c	;volatile
 12071  0049DC  EFF2  F024         	goto	u7281
 12072  0049E0  EFF4  F024         	goto	u7280
 12073  0049E4                     u7281:
 12074  0049E4  EFED  F024         	goto	l257
 12075  0049E8                     u7280:
 12076  0049E8  0012               	return		;funcret
 12077  0049EA                     __end_of_mcu_init:
 12078                           	callstack 0
 12079                           
 12080 ;; *************** function _lcd_init *****************
 12081 ;; Defined at:
 12082 ;;		line 79 in file "fs_lcd.c"
 12083 ;; Parameters:    Size  Location     Type
 12084 ;;		None
 12085 ;; Auto vars:     Size  Location     Type
 12086 ;;		None
 12087 ;; Return value:  Size  Location     Type
 12088 ;;                  1    wreg      void 
 12089 ;; Registers used:
 12090 ;;		wreg, status,2, cstack
 12091 ;; Tracked objects:
 12092 ;;		On entry : 0/0
 12093 ;;		On exit  : 0/0
 12094 ;;		Unchanged: 0/0
 12095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12096 ;;      Params:         0       0       0       0       0       0       0
 12097 ;;      Locals:         0       0       0       0       0       0       0
 12098 ;;      Temps:          2       0       0       0       0       0       0
 12099 ;;      Totals:         2       0       0       0       0       0       0
 12100 ;;Total ram usage:        2 bytes
 12101 ;; Hardware stack levels used:    1
 12102 ;; Hardware stack levels required when called:    3
 12103 ;; This function calls:
 12104 ;;		_Lcd_Cmd
 12105 ;;		_Lcd_Port
 12106 ;; This function is called by:
 12107 ;;		_main
 12108 ;; This function uses a non-reentrant model
 12109 ;;
 12110                           
 12111                           	psect	text46
 12112  004304                     __ptext46:
 12113                           	callstack 0
 12114  004304                     _lcd_init:
 12115                           	callstack 27
 12116  004304                     
 12117                           ;fs_lcd.c: 81:     TRISEbits.RE0 = 0;
 12118  004304  9096               	bcf	150,0,c	;volatile
 12119                           
 12120                           ;fs_lcd.c: 82:     ANSELEbits.ANSE0 = 0;
 12121  004306  010F               	movlb	15	; () banked
 12122  004308  913C               	bcf	60,0,b	;volatile
 12123                           
 12124                           ;fs_lcd.c: 84:     TRISAbits.RA3 = 0;
 12125  00430A  9692               	bcf	146,3,c	;volatile
 12126                           
 12127                           ;fs_lcd.c: 85:     ANSELAbits.ANSA3 = 0;
 12128  00430C  9738               	bcf	56,3,b	;volatile
 12129                           
 12130                           ;fs_lcd.c: 87:     TRISDbits.RD0 = 0;
 12131  00430E  9095               	bcf	149,0,c	;volatile
 12132                           
 12133                           ;fs_lcd.c: 88:     ANSELDbits.ANSD0 = 0;
 12134  004310  913B               	bcf	59,0,b	;volatile
 12135                           
 12136                           ;fs_lcd.c: 90:     TRISDbits.RD1 = 0;
 12137  004312  9295               	bcf	149,1,c	;volatile
 12138                           
 12139                           ;fs_lcd.c: 91:     ANSELDbits.ANSD1 = 0;
 12140  004314  933B               	bcf	59,1,b	;volatile
 12141                           
 12142                           ;fs_lcd.c: 93:     TRISDbits.RD2 = 0;
 12143  004316  9495               	bcf	149,2,c	;volatile
 12144                           
 12145                           ;fs_lcd.c: 94:     ANSELDbits.ANSD2 = 0;
 12146  004318  953B               	bcf	59,2,b	;volatile
 12147                           
 12148                           ;fs_lcd.c: 96:     TRISDbits.RD3 = 0;
 12149  00431A  9695               	bcf	149,3,c	;volatile
 12150                           
 12151                           ;fs_lcd.c: 97:     ANSELDbits.ANSD3 = 0;
 12152  00431C  973B               	bcf	59,3,b	;volatile
 12153  00431E                     
 12154                           ; BSR set to: 15
 12155                           ;fs_lcd.c: 100:     Lcd_Port(0x00);
 12156  00431E  0E00               	movlw	0
 12157  004320  ECFE  F022         	call	_Lcd_Port
 12158  004324                     
 12159                           ;fs_lcd.c: 101:      _delay((unsigned long)((20)*(64000000UL/4000.0)));
 12160  004324  0E02               	movlw	2
 12161  004326  6E05               	movwf	(??_lcd_init+1)^0,c
 12162  004328  0EA0               	movlw	160
 12163  00432A  6E04               	movwf	??_lcd_init^0,c
 12164  00432C  0E92               	movlw	146
 12165  00432E                     u7697:
 12166  00432E  2EE8               	decfsz	wreg,f,c
 12167  004330  D7FE               	bra	u7697
 12168  004332  2E04               	decfsz	??_lcd_init^0,f,c
 12169  004334  D7FC               	bra	u7697
 12170  004336  2E05               	decfsz	(??_lcd_init+1)^0,f,c
 12171  004338  D7FA               	bra	u7697
 12172  00433A  D000               	nop2	
 12173  00433C                     
 12174                           ;fs_lcd.c: 102:     Lcd_Cmd(0x03);
 12175  00433C  0E03               	movlw	3
 12176  00433E  ECDB  F024         	call	_Lcd_Cmd
 12177  004342                     
 12178                           ;fs_lcd.c: 103:      _delay((unsigned long)((5)*(64000000UL/4000.0)));
 12179  004342  0E68               	movlw	104
 12180  004344  6E04               	movwf	??_lcd_init^0,c
 12181  004346  0EE4               	movlw	228
 12182  004348                     u7707:
 12183  004348  2EE8               	decfsz	wreg,f,c
 12184  00434A  D7FE               	bra	u7707
 12185  00434C  2E04               	decfsz	??_lcd_init^0,f,c
 12186  00434E  D7FC               	bra	u7707
 12187  004350  D000               	nop2	
 12188  004352                     
 12189                           ;fs_lcd.c: 104:     Lcd_Cmd(0x03);
 12190  004352  0E03               	movlw	3
 12191  004354  ECDB  F024         	call	_Lcd_Cmd
 12192  004358                     
 12193                           ;fs_lcd.c: 105:      _delay((unsigned long)((11)*(64000000UL/4000.0)));
 12194  004358  0EE5               	movlw	229
 12195  00435A  6E04               	movwf	??_lcd_init^0,c
 12196  00435C  0E91               	movlw	145
 12197  00435E                     u7717:
 12198  00435E  2EE8               	decfsz	wreg,f,c
 12199  004360  D7FE               	bra	u7717
 12200  004362  2E04               	decfsz	??_lcd_init^0,f,c
 12201  004364  D7FC               	bra	u7717
 12202  004366  F000               	nop	
 12203  004368                     
 12204                           ;fs_lcd.c: 106:     Lcd_Cmd(0x03);
 12205  004368  0E03               	movlw	3
 12206  00436A  ECDB  F024         	call	_Lcd_Cmd
 12207  00436E                     
 12208                           ;fs_lcd.c: 107:     Lcd_Cmd(0x02);
 12209  00436E  0E02               	movlw	2
 12210  004370  ECDB  F024         	call	_Lcd_Cmd
 12211  004374                     
 12212                           ;fs_lcd.c: 108:     Lcd_Cmd(0x02);
 12213  004374  0E02               	movlw	2
 12214  004376  ECDB  F024         	call	_Lcd_Cmd
 12215  00437A                     
 12216                           ;fs_lcd.c: 109:     Lcd_Cmd(0x08);
 12217  00437A  0E08               	movlw	8
 12218  00437C  ECDB  F024         	call	_Lcd_Cmd
 12219  004380                     
 12220                           ;fs_lcd.c: 110:     Lcd_Cmd(0x00);
 12221  004380  0E00               	movlw	0
 12222  004382  ECDB  F024         	call	_Lcd_Cmd
 12223  004386                     
 12224                           ;fs_lcd.c: 111:     Lcd_Cmd(0x0C);
 12225  004386  0E0C               	movlw	12
 12226  004388  ECDB  F024         	call	_Lcd_Cmd
 12227  00438C                     
 12228                           ;fs_lcd.c: 112:     Lcd_Cmd(0x00);
 12229  00438C  0E00               	movlw	0
 12230  00438E  ECDB  F024         	call	_Lcd_Cmd
 12231  004392                     
 12232                           ;fs_lcd.c: 113:     Lcd_Cmd(0x06);
 12233  004392  0E06               	movlw	6
 12234  004394  ECDB  F024         	call	_Lcd_Cmd
 12235  004398  0012               	return		;funcret
 12236  00439A                     __end_of_lcd_init:
 12237                           	callstack 0
 12238                           
 12239 ;; *************** function _Lcd_Clear *****************
 12240 ;; Defined at:
 12241 ;;		line 42 in file "fs_lcd.c"
 12242 ;; Parameters:    Size  Location     Type
 12243 ;;		None
 12244 ;; Auto vars:     Size  Location     Type
 12245 ;;		None
 12246 ;; Return value:  Size  Location     Type
 12247 ;;                  1    wreg      void 
 12248 ;; Registers used:
 12249 ;;		wreg, status,2, cstack
 12250 ;; Tracked objects:
 12251 ;;		On entry : 0/0
 12252 ;;		On exit  : 0/0
 12253 ;;		Unchanged: 0/0
 12254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12255 ;;      Params:         0       0       0       0       0       0       0
 12256 ;;      Locals:         0       0       0       0       0       0       0
 12257 ;;      Temps:          0       0       0       0       0       0       0
 12258 ;;      Totals:         0       0       0       0       0       0       0
 12259 ;;Total ram usage:        0 bytes
 12260 ;; Hardware stack levels used:    1
 12261 ;; Hardware stack levels required when called:    3
 12262 ;; This function calls:
 12263 ;;		_Lcd_Cmd
 12264 ;; This function is called by:
 12265 ;;		_main
 12266 ;; This function uses a non-reentrant model
 12267 ;;
 12268                           
 12269                           	psect	text47
 12270  0049FC                     __ptext47:
 12271                           	callstack 0
 12272  0049FC                     _Lcd_Clear:
 12273                           	callstack 27
 12274  0049FC                     
 12275                           ;fs_lcd.c: 44:    Lcd_Cmd(0);
 12276  0049FC  0E00               	movlw	0
 12277  0049FE  ECDB  F024         	call	_Lcd_Cmd
 12278                           
 12279                           ;fs_lcd.c: 45:    Lcd_Cmd(1);
 12280  004A02  0E01               	movlw	1
 12281  004A04  ECDB  F024         	call	_Lcd_Cmd
 12282  004A08  0012               	return		;funcret
 12283  004A0A                     __end_of_Lcd_Clear:
 12284                           	callstack 0
 12285                           
 12286 ;; *************** function _Lcd_Cmd *****************
 12287 ;; Defined at:
 12288 ;;		line 28 in file "fs_lcd.c"
 12289 ;; Parameters:    Size  Location     Type
 12290 ;;  a               1    wreg     unsigned char 
 12291 ;; Auto vars:     Size  Location     Type
 12292 ;;  a               1    2[COMRAM] unsigned char 
 12293 ;; Return value:  Size  Location     Type
 12294 ;;                  1    wreg      void 
 12295 ;; Registers used:
 12296 ;;		wreg, status,2, cstack
 12297 ;; Tracked objects:
 12298 ;;		On entry : 0/0
 12299 ;;		On exit  : 0/0
 12300 ;;		Unchanged: 0/0
 12301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12302 ;;      Params:         0       0       0       0       0       0       0
 12303 ;;      Locals:         1       0       0       0       0       0       0
 12304 ;;      Temps:          1       0       0       0       0       0       0
 12305 ;;      Totals:         2       0       0       0       0       0       0
 12306 ;;Total ram usage:        2 bytes
 12307 ;; Hardware stack levels used:    1
 12308 ;; Hardware stack levels required when called:    2
 12309 ;; This function calls:
 12310 ;;		_Lcd_Port
 12311 ;; This function is called by:
 12312 ;;		_Lcd_Clear
 12313 ;;		_Lcd_Set_Cursor
 12314 ;;		_lcd_init
 12315 ;;		_Lcd_Shift_Right
 12316 ;;		_Lcd_Shift_Left
 12317 ;; This function uses a non-reentrant model
 12318 ;;
 12319                           
 12320                           	psect	text48
 12321  0049B6                     __ptext48:
 12322                           	callstack 0
 12323  0049B6                     _Lcd_Cmd:
 12324                           	callstack 25
 12325                           
 12326                           ;incstack = 0
 12327                           ;Lcd_Cmd@a stored from wreg
 12328  0049B6  6E03               	movwf	Lcd_Cmd@a^0,c
 12329  0049B8                     
 12330                           ;fs_lcd.c: 28: void Lcd_Cmd(char a);fs_lcd.c: 29: {;fs_lcd.c: 30:    PORTEbits.RE0 = 0;
 12331  0049B8  9084               	bcf	132,0,c	;volatile
 12332  0049BA                     
 12333                           ;fs_lcd.c: 31:    Lcd_Port(a);
 12334  0049BA  5003               	movf	Lcd_Cmd@a^0,w,c
 12335  0049BC  ECFE  F022         	call	_Lcd_Port
 12336  0049C0                     
 12337                           ;fs_lcd.c: 32:    PORTAbits.RA3 = 1;
 12338  0049C0  8680               	bsf	128,3,c	;volatile
 12339  0049C2                     
 12340                           ;fs_lcd.c: 33:    _delay((unsigned long)((2)*(64000000UL/4000.0)));
 12341  0049C2  0E2A               	movlw	42
 12342  0049C4  6E02               	movwf	??_Lcd_Cmd^0,c
 12343  0049C6  0E8E               	movlw	142
 12344  0049C8                     u7727:
 12345  0049C8  2EE8               	decfsz	wreg,f,c
 12346  0049CA  D7FE               	bra	u7727
 12347  0049CC  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 12348  0049CE  D7FC               	bra	u7727
 12349  0049D0                     
 12350                           ;fs_lcd.c: 34:    PORTAbits.RA3 = 0;
 12351  0049D0  9680               	bcf	128,3,c	;volatile
 12352  0049D2  0012               	return		;funcret
 12353  0049D4                     __end_of_Lcd_Cmd:
 12354                           	callstack 0
 12355                           
 12356 ;; *************** function _Lcd_Port *****************
 12357 ;; Defined at:
 12358 ;;		line 12 in file "fs_lcd.c"
 12359 ;; Parameters:    Size  Location     Type
 12360 ;;  a               1    wreg     unsigned char 
 12361 ;; Auto vars:     Size  Location     Type
 12362 ;;  a               1    0[COMRAM] unsigned char 
 12363 ;; Return value:  Size  Location     Type
 12364 ;;                  1    wreg      void 
 12365 ;; Registers used:
 12366 ;;		wreg
 12367 ;; Tracked objects:
 12368 ;;		On entry : 0/0
 12369 ;;		On exit  : 0/0
 12370 ;;		Unchanged: 0/0
 12371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12372 ;;      Params:         0       0       0       0       0       0       0
 12373 ;;      Locals:         1       0       0       0       0       0       0
 12374 ;;      Temps:          0       0       0       0       0       0       0
 12375 ;;      Totals:         1       0       0       0       0       0       0
 12376 ;;Total ram usage:        1 bytes
 12377 ;; Hardware stack levels used:    1
 12378 ;; Hardware stack levels required when called:    1
 12379 ;; This function calls:
 12380 ;;		Nothing
 12381 ;; This function is called by:
 12382 ;;		_Lcd_Cmd
 12383 ;;		_lcd_init
 12384 ;;		_Lcd_Write_Char
 12385 ;; This function uses a non-reentrant model
 12386 ;;
 12387                           
 12388                           	psect	text49
 12389  0045FC                     __ptext49:
 12390                           	callstack 0
 12391  0045FC                     _Lcd_Port:
 12392                           	callstack 25
 12393                           
 12394                           ;incstack = 0
 12395                           ;Lcd_Port@a stored from wreg
 12396  0045FC  6E01               	movwf	Lcd_Port@a^0,c
 12397  0045FE                     
 12398                           ;fs_lcd.c: 12: void Lcd_Port(char a);fs_lcd.c: 13: {;fs_lcd.c: 14:    if(a & 1) { PORTDb
      +                          its.RD0 = 1;}
 12399  0045FE  A001               	btfss	Lcd_Port@a^0,0,c
 12400  004600  EF04  F023         	goto	u6161
 12401  004604  EF06  F023         	goto	u6160
 12402  004608                     u6161:
 12403  004608  EF09  F023         	goto	l102
 12404  00460C                     u6160:
 12405  00460C  8083               	bsf	131,0,c	;volatile
 12406  00460E  EF0A  F023         	goto	l5098
 12407  004612                     l102:
 12408  004612  9083               	bcf	131,0,c	;volatile
 12409  004614                     l5098:
 12410                           
 12411                           ;fs_lcd.c: 17:    if(a & 2) { PORTDbits.RD1 = 1;}
 12412  004614  A201               	btfss	Lcd_Port@a^0,1,c
 12413  004616  EF0F  F023         	goto	u6171
 12414  00461A  EF11  F023         	goto	u6170
 12415  00461E                     u6171:
 12416  00461E  EF14  F023         	goto	l104
 12417  004622                     u6170:
 12418  004622  8283               	bsf	131,1,c	;volatile
 12419  004624  EF15  F023         	goto	l5102
 12420  004628                     l104:
 12421  004628  9283               	bcf	131,1,c	;volatile
 12422  00462A                     l5102:
 12423                           
 12424                           ;fs_lcd.c: 20:    if(a & 4) {PORTDbits.RD2 = 1;}
 12425  00462A  A401               	btfss	Lcd_Port@a^0,2,c
 12426  00462C  EF1A  F023         	goto	u6181
 12427  004630  EF1C  F023         	goto	u6180
 12428  004634                     u6181:
 12429  004634  EF1F  F023         	goto	l106
 12430  004638                     u6180:
 12431  004638  8483               	bsf	131,2,c	;volatile
 12432  00463A  EF20  F023         	goto	l5106
 12433  00463E                     l106:
 12434  00463E  9483               	bcf	131,2,c	;volatile
 12435  004640                     l5106:
 12436                           
 12437                           ;fs_lcd.c: 23:    if(a & 8) {PORTDbits.RD3 = 1;}
 12438  004640  A601               	btfss	Lcd_Port@a^0,3,c
 12439  004642  EF25  F023         	goto	u6191
 12440  004646  EF27  F023         	goto	u6190
 12441  00464A                     u6191:
 12442  00464A  EF2A  F023         	goto	l108
 12443  00464E                     u6190:
 12444  00464E  8683               	bsf	131,3,c	;volatile
 12445  004650  EF2B  F023         	goto	l110
 12446  004654                     l108:
 12447  004654  9683               	bcf	131,3,c	;volatile
 12448  004656                     l110:
 12449  004656  0012               	return		;funcret
 12450  004658                     __end_of_Lcd_Port:
 12451                           	callstack 0
 12452                           
 12453 ;; *************** function _TIMER0 *****************
 12454 ;; Defined at:
 12455 ;;		line 33 in file "fs_timer.c"
 12456 ;; Parameters:    Size  Location     Type
 12457 ;;		None
 12458 ;; Auto vars:     Size  Location     Type
 12459 ;;		None
 12460 ;; Return value:  Size  Location     Type
 12461 ;;                  1    wreg      void 
 12462 ;; Registers used:
 12463 ;;		wreg, status,2, status,0
 12464 ;; Tracked objects:
 12465 ;;		On entry : 0/0
 12466 ;;		On exit  : 0/0
 12467 ;;		Unchanged: 0/0
 12468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12469 ;;      Params:         0       0       0       0       0       0       0
 12470 ;;      Locals:         0       0       0       0       0       0       0
 12471 ;;      Temps:          0       0       0       0       0       0       0
 12472 ;;      Totals:         0       0       0       0       0       0       0
 12473 ;;Total ram usage:        0 bytes
 12474 ;; Hardware stack levels used:    1
 12475 ;; This function calls:
 12476 ;;		Nothing
 12477 ;; This function is called by:
 12478 ;;		Interrupt level 2
 12479 ;; This function uses a non-reentrant model
 12480 ;;
 12481                           
 12482                           	psect	intcode
 12483  000008                     __pintcode:
 12484                           	callstack 0
 12485  000008                     _TIMER0:
 12486                           	callstack 20
 12487                           
 12488                           ;incstack = 0
 12489  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12490  00000A                     
 12491                           ;fs_timer.c: 35:     if ((INTCONbits.TMR0IF)&&(INTCONbits.TMR0IE))
 12492  00000A  A4F2               	btfss	242,2,c	;volatile
 12493  00000C  EF0A  F000         	goto	i2u749_41
 12494  000010  EF0C  F000         	goto	i2u749_40
 12495  000014                     i2u749_41:
 12496  000014  EF31  F000         	goto	i2l489
 12497  000018                     i2u749_40:
 12498  000018  AAF2               	btfss	242,5,c	;volatile
 12499  00001A  EF11  F000         	goto	i2u750_41
 12500  00001E  EF13  F000         	goto	i2u750_40
 12501  000022                     i2u750_41:
 12502  000022  EF31  F000         	goto	i2l489
 12503  000026                     i2u750_40:
 12504  000026                     
 12505                           ;fs_timer.c: 36:     {;fs_timer.c: 37:         INTCONbits.TMR0IF = 0;
 12506  000026  94F2               	bcf	242,2,c	;volatile
 12507  000028                     
 12508                           ;fs_timer.c: 38:         TMR0H = 0x63;
 12509  000028  0E63               	movlw	99
 12510  00002A  6ED7               	movwf	215,c	;volatile
 12511                           
 12512                           ;fs_timer.c: 39:         TMR0L = 0xC0;
 12513  00002C  0EC0               	movlw	192
 12514  00002E  6ED6               	movwf	214,c	;volatile
 12515  000030                     
 12516                           ;fs_timer.c: 41:         timer_value.timer_0_counter++;
 12517  000030  0100               	movlb	0	; () banked
 12518  000032  2BDB               	incf	(_timer_value+9)& (0+255),f,b
 12519  000034                     
 12520                           ; BSR set to: 0
 12521                           ;fs_timer.c: 43:         if(button_bounce_controller.menu == 1)
 12522  000034  A05E               	btfss	_button_bounce_controller^0,0,c
 12523  000036  EF1F  F000         	goto	i2u751_41
 12524  00003A  EF21  F000         	goto	i2u751_40
 12525  00003E                     i2u751_41:
 12526  00003E  EF24  F000         	goto	i2l5998
 12527  000042                     i2u751_40:
 12528  000042                     
 12529                           ; BSR set to: 0
 12530                           ;fs_timer.c: 44:         {;fs_timer.c: 45:              timer_value.menu_login_delay++;
 12531  000042  2BDA               	incf	(_timer_value+8)& (0+255),f,b
 12532                           
 12533                           ;fs_timer.c: 46:         }
 12534  000044  EF26  F000         	goto	i2l6000
 12535  000048                     i2l5998:
 12536                           
 12537                           ; BSR set to: 0
 12538                           ;fs_timer.c: 48:         {;fs_timer.c: 49:              timer_value.menu_login_delay = 0
      +                          ;
 12539  000048  0E00               	movlw	0
 12540  00004A  6FDA               	movwf	(_timer_value+8)& (0+255),b
 12541  00004C                     i2l6000:
 12542                           
 12543                           ; BSR set to: 0
 12544                           ;fs_timer.c: 52:         if (timer_value.timer_0_counter >= 100)
 12545  00004C  0E63               	movlw	99
 12546  00004E  65DB               	cpfsgt	(_timer_value+9)& (0+255),b
 12547  000050  EF2C  F000         	goto	i2u752_41
 12548  000054  EF2E  F000         	goto	i2u752_40
 12549  000058                     i2u752_41:
 12550  000058  EF31  F000         	goto	i2l489
 12551  00005C                     i2u752_40:
 12552  00005C                     
 12553                           ; BSR set to: 0
 12554                           ;fs_timer.c: 53:         {;fs_timer.c: 54:             timer_value.timer_0_counter = 0;
 12555  00005C  0E00               	movlw	0
 12556  00005E  6FDB               	movwf	(_timer_value+9)& (0+255),b
 12557  000060                     
 12558                           ; BSR set to: 0
 12559                           ;fs_timer.c: 55:             timer_counter_flag.one_second_flag = 1;
 12560  000060  81F5               	bsf	_timer_counter_flag& (0+255),0,b
 12561  000062                     i2l489:
 12562  000062  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12563  000064  0011               	retfie		f
 12564  000066                     __end_of_TIMER0:
 12565                           	callstack 0
 12566                           
 12567                           	psect	rparam
 12568  0000                     
 12569                           	psect	temp
 12570  00005F                     btemp:
 12571                           	callstack 0
 12572  00005F                     	ds	1
 12573  0000                     int$flags	set	btemp
 12574  0000                     wtemp8	set	btemp+1
 12575  0000                     ttemp5	set	btemp+1
 12576  0000                     ttemp6	set	btemp+4
 12577  0000                     ttemp7	set	btemp+8
 12578                           
 12579                           	psect	idloc
 12580                           
 12581                           ;Config register IDLOC0 @ 0x200000
 12582                           ;	unspecified, using default values
 12583  200000                     	org	2097152
 12584  200000  FF                 	db	255
 12585                           
 12586                           ;Config register IDLOC1 @ 0x200001
 12587                           ;	unspecified, using default values
 12588  200001                     	org	2097153
 12589  200001  FF                 	db	255
 12590                           
 12591                           ;Config register IDLOC2 @ 0x200002
 12592                           ;	unspecified, using default values
 12593  200002                     	org	2097154
 12594  200002  FF                 	db	255
 12595                           
 12596                           ;Config register IDLOC3 @ 0x200003
 12597                           ;	unspecified, using default values
 12598  200003                     	org	2097155
 12599  200003  FF                 	db	255
 12600                           
 12601                           ;Config register IDLOC4 @ 0x200004
 12602                           ;	unspecified, using default values
 12603  200004                     	org	2097156
 12604  200004  FF                 	db	255
 12605                           
 12606                           ;Config register IDLOC5 @ 0x200005
 12607                           ;	unspecified, using default values
 12608  200005                     	org	2097157
 12609  200005  FF                 	db	255
 12610                           
 12611                           ;Config register IDLOC6 @ 0x200006
 12612                           ;	unspecified, using default values
 12613  200006                     	org	2097158
 12614  200006  FF                 	db	255
 12615                           
 12616                           ;Config register IDLOC7 @ 0x200007
 12617                           ;	unspecified, using default values
 12618  200007                     	org	2097159
 12619  200007  FF                 	db	255
 12620                           
 12621                           	psect	config
 12622                           
 12623                           ; Padding undefined space
 12624  300000                     	org	3145728
 12625  300000  FF                 	db	255
 12626                           
 12627                           ;Config register CONFIG1H @ 0x300001
 12628                           ;	Oscillator Selection bits
 12629                           ;	FOSC = INTIO67, Internal oscillator block
 12630                           ;	4X PLL Enable
 12631                           ;	PLLCFG = ON, Oscillator multiplied by 4
 12632                           ;	Primary clock enable bit
 12633                           ;	PRICLKEN = ON, Primary clock is always enabled
 12634                           ;	Fail-Safe Clock Monitor Enable bit
 12635                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12636                           ;	Internal/External Oscillator Switchover bit
 12637                           ;	IESO = ON, Oscillator Switchover mode enabled
 12638  300001                     	org	3145729
 12639  300001  B8                 	db	184
 12640                           
 12641                           ;Config register CONFIG2L @ 0x300002
 12642                           ;	Power-up Timer Enable bit
 12643                           ;	PWRTEN = OFF, Power up timer disabled
 12644                           ;	Brown-out Reset Enable bits
 12645                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 12646                           ;	Brown Out Reset Voltage bits
 12647                           ;	BORV = 190, VBOR set to 1.90 V nominal
 12648  300002                     	org	3145730
 12649  300002  1F                 	db	31
 12650                           
 12651                           ;Config register CONFIG2H @ 0x300003
 12652                           ;	Watchdog Timer Enable bits
 12653                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 12654                           ;	Watchdog Timer Postscale Select bits
 12655                           ;	WDTPS = 32768, 1:32768
 12656  300003                     	org	3145731
 12657  300003  3C                 	db	60
 12658                           
 12659                           ; Padding undefined space
 12660  300004                     	org	3145732
 12661  300004  FF                 	db	255
 12662                           
 12663                           ;Config register CONFIG3H @ 0x300005
 12664                           ;	CCP2 MUX bit
 12665                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 12666                           ;	PORTB A/D Enable bit
 12667                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 12668                           ;	P3A/CCP3 Mux bit
 12669                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 12670                           ;	HFINTOSC Fast Start-up
 12671                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 12672                           ;	Timer3 Clock input mux bit
 12673                           ;	T3CMX = PORTC0, T3CKI is on RC0
 12674                           ;	ECCP2 B output mux bit
 12675                           ;	P2BMX = PORTD2, P2B is on RD2
 12676                           ;	MCLR Pin Enable bit
 12677                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 12678  300005                     	org	3145733
 12679  300005  BD                 	db	189
 12680                           
 12681                           ;Config register CONFIG4L @ 0x300006
 12682                           ;	Stack Full/Underflow Reset Enable bit
 12683                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 12684                           ;	Single-Supply ICSP Enable bit
 12685                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 12686                           ;	Extended Instruction Set Enable bit
 12687                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12688                           ;	Background Debug
 12689                           ;	DEBUG = 0x1, unprogrammed default
 12690  300006                     	org	3145734
 12691  300006  84                 	db	132
 12692                           
 12693                           ; Padding undefined space
 12694  300007                     	org	3145735
 12695  300007  FF                 	db	255
 12696                           
 12697                           ;Config register CONFIG5L @ 0x300008
 12698                           ;	Code Protection Block 0
 12699                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 12700                           ;	Code Protection Block 1
 12701                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 12702                           ;	Code Protection Block 2
 12703                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 12704                           ;	Code Protection Block 3
 12705                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 12706  300008                     	org	3145736
 12707  300008  0F                 	db	15
 12708                           
 12709                           ;Config register CONFIG5H @ 0x300009
 12710                           ;	Boot Block Code Protection bit
 12711                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 12712                           ;	Data EEPROM Code Protection bit
 12713                           ;	CPD = OFF, Data EEPROM not code-protected
 12714  300009                     	org	3145737
 12715  300009  C0                 	db	192
 12716                           
 12717                           ;Config register CONFIG6L @ 0x30000A
 12718                           ;	Write Protection Block 0
 12719                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 12720                           ;	Write Protection Block 1
 12721                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 12722                           ;	Write Protection Block 2
 12723                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 12724                           ;	Write Protection Block 3
 12725                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 12726  30000A                     	org	3145738
 12727  30000A  0F                 	db	15
 12728                           
 12729                           ;Config register CONFIG6H @ 0x30000B
 12730                           ;	Configuration Register Write Protection bit
 12731                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 12732                           ;	Boot Block Write Protection bit
 12733                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12734                           ;	Data EEPROM Write Protection bit
 12735                           ;	WRTD = OFF, Data EEPROM not write-protected
 12736  30000B                     	org	3145739
 12737  30000B  E0                 	db	224
 12738                           
 12739                           ;Config register CONFIG7L @ 0x30000C
 12740                           ;	Table Read Protection Block 0
 12741                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 12742                           ;	Table Read Protection Block 1
 12743                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 12744                           ;	Table Read Protection Block 2
 12745                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 12746                           ;	Table Read Protection Block 3
 12747                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12748  30000C                     	org	3145740
 12749  30000C  0F                 	db	15
 12750                           
 12751                           ;Config register CONFIG7H @ 0x30000D
 12752                           ;	Boot Block Table Read Protection bit
 12753                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12754  30000D                     	org	3145741
 12755  30000D  40                 	db	64
 12756                           tosu	equ	0xFFF
 12757                           tosh	equ	0xFFE
 12758                           tosl	equ	0xFFD
 12759                           stkptr	equ	0xFFC
 12760                           pclatu	equ	0xFFB
 12761                           pclath	equ	0xFFA
 12762                           pcl	equ	0xFF9
 12763                           tblptru	equ	0xFF8
 12764                           tblptrh	equ	0xFF7
 12765                           tblptrl	equ	0xFF6
 12766                           tablat	equ	0xFF5
 12767                           prodh	equ	0xFF4
 12768                           prodl	equ	0xFF3
 12769                           indf0	equ	0xFEF
 12770                           postinc0	equ	0xFEE
 12771                           postdec0	equ	0xFED
 12772                           preinc0	equ	0xFEC
 12773                           plusw0	equ	0xFEB
 12774                           fsr0h	equ	0xFEA
 12775                           fsr0l	equ	0xFE9
 12776                           wreg	equ	0xFE8
 12777                           indf1	equ	0xFE7
 12778                           postinc1	equ	0xFE6
 12779                           postdec1	equ	0xFE5
 12780                           preinc1	equ	0xFE4
 12781                           plusw1	equ	0xFE3
 12782                           fsr1h	equ	0xFE2
 12783                           fsr1l	equ	0xFE1
 12784                           bsr	equ	0xFE0
 12785                           indf2	equ	0xFDF
 12786                           postinc2	equ	0xFDE
 12787                           postdec2	equ	0xFDD
 12788                           preinc2	equ	0xFDC
 12789                           plusw2	equ	0xFDB
 12790                           fsr2h	equ	0xFDA
 12791                           fsr2l	equ	0xFD9
 12792                           status	equ	0xFD8

Data Sizes:
    Strings     214
    Constant    0
    Data        8
    BSS         300
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    102     158
    BANK1           256      0     251
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2729_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_15(CODE[17]), STR_13(CODE[17]), STR_11(CODE[17]), STR_9(CODE[17]), 
		 -> STR_7(CODE[17]), STR_5(CODE[17]), STR_3(CODE[17]), STR_1(CODE[17]), 
		 -> stateMachine@textCursor2(BANK0[16]), 


Critical Paths under _main in COMRAM

    _system_init->_eepromRead
    _menuControl->_stateMachine
    _stateMachine->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _lcd_init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _menuControl->_stateMachine
    _stateMachine->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   54869
                          _Lcd_Clear
                           _lcd_init
                           _mcu_init
                        _menuControl
                     _menuInitialize
                        _system_init
                       _timer_0_init
 ---------------------------------------------------------------------------------
 (1) _timer_0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          2     2      0      22
                                              1 COMRAM     2     2      0
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _menuInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menuControl                                          0     0      0   54539
                 _buttonControlFlags
                       _stateMachine
 ---------------------------------------------------------------------------------
 (2) _stateMachine                                        18    18      0   54538
                                             91 COMRAM     2     2      0
                                             86 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                             ___flge
                            ___flsub
                        _eepromWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   42834
                                             81 COMRAM    10    10      0
                                             78 BANK0      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   41409
                                             73 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           50    44      6   41025
                                             63 COMRAM    10     4      6
                                             56 BANK0     22    22      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   30053
                                             45 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4    1369
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    3801
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3022
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    5240
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8     942
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    4591
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eepromWrite                                          2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     6     4      2    1484
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       5     4      1    1596
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _buttonControlFlags                                  16    16      0       1
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 (1) _mcu_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     198
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TIMER0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _lcd_init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _mcu_init
   _menuControl
     _buttonControlFlags
     _stateMachine
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___fladd
       ___flge
         ___flmul (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
       _eepromWrite
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
   _menuInitialize
   _system_init
     _eepromRead
   _timer_0_init

 _TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      FB       6       98.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     66      9E       4       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F7       9        0.0%
DATA                 0      0     1F7      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Aug 08 15:45:23 2020

                 ___fldiv@aexp 0019                   ___fldiv@bexp 0018                   ___fldiv@sign 0011  
                           l70 49A4                             l72 49B2                             l73 49B4  
                           l76 493A                             l78 4948                             _KD 00F6  
                           l79 494C                             _KP 00FA                   ___awdiv@sign 0006  
          ___wmul@multiplicand 0003            __end_of_system_init 3AA8                            l110 4656  
                          l102 4612                            l104 4628                            l113 49D2  
                          l106 463E                            l122 447C                            l108 4654  
                          l116 4A08                            l125 4398                            l134 4416  
                          l128 491E                            l330 3390                            l331 33B2  
                          l260 49E8                            l340 34E4                            l332 33D4  
                          l333 33F6                            l325 4996                            l342 3506  
                          l334 3418                            l335 343A                            l336 345C  
                          l257 49DA                            l337 347E                            l338 34A0  
                          l362 13EA                            l266 3AA6                            l339 34C2  
                          l380 1776                            l372 15DC                            l356 1298  
                          l348 453E                            l381 1794                            l622 3982  
                          l382 180E                            l358 1344                            l367 1504  
                          l359 1388                   _startIsClick 00F3                            l609 381E  
                          l387 18B0                            l492 49FA                            l397 1BB6  
                          l726 41A8                            l495 4972                            l760 3C6A  
                          l754 4302                            l739 4258                            l765 3CB0  
                          l792 3BAC                            l769 487A                            _PR2 000FBB  
                          _abs 47CC                            _pad 4020                   ___awmod@sign 0006  
                          wreg 000FE8                   ___flmul@aexp 0012                   ___flmul@bexp 0013  
                 ___flmul@sign 000D                   ___flmul@temp 0018                   ___flmul@prod 0014  
                  _stopIsClick 00F2                   ___fltol@exp1 000A                           l1023 23D6  
                         l1040 24F0                           l1032 26A6                           l1024 23C4  
                         l1113 2AD0                           l1025 238A                           l1050 25AE  
                         ?_abs 0013                           l1116 2962                           l1221 4066  
                         l1109 276C                           l1126 2A92                           l1118 29DA  
                         l1119 29C8                           l1224 40A8                           l1232 2F0C  
                         l1049 25C0                           l1065 4786                           l1402 4802  
                         l1226 40E4                           l1234 2F14                           l1090 2D88  
                         l1082 2C8E                           l1314 0E5C                           l1091 2D76  
                         l1252 314E                           l1405 480A                           l1077 2E6A  
                         l1270 1286                           l1079 2CCA                           l1504 48E8  
                         l1088 2D10                           l4000 2678                           l1433 368E  
                         l4010 2696                           l4002 267E                           l1442 3360  
                         l1178 46F8                           l1523 459E                           l1452 48B2  
                         l1460 46A8                           l1436 3696                           l4100 38A2  
                         l4020 47AA                           l4004 2680                           l1508 3E84  
                         l1380 2130                           l1372 21E6                           l1445 32A4  
                         l4110 391A                           l4102 38AA                           l4014 4788  
                         l4022 48B4                           l4006 2686                           l1518 4596  
                         l4112 392C                           l4104 38BE                           l4016 4794  
                         l4024 48C0                           l4200 2CB6                           l4008 2694  
                         l4032 480C                           l5000 11B4                           l1288 0AC4  
                         l1481 401E                           l4050 36CE                           l4042 3698  
                         l4106 38CC                           l4114 3932                           l4018 47A6  
                         l4026 48C4                           l4210 2CF6                           l4202 2CB8  
                         l4130 2AFE                           l4122 2AD2                           l1466 4842  
                         l5010 11F0                           l5002 11C6                           l1386 44D6  
                         l1387 44DE                           l5100 4622                           l4036 494E  
                         l4060 372A                           l4052 36DC                           l4044 369C  
                         l4116 3942                           l4108 38FA                           l1492 4A12  
                         l4028 48DC                           l4220 2D32                           l4212 2D00  
                         l4204 2CC8                           l4140 2B38                           l4132 2B0E  
                         l4124 2ADE                           l4300 27A0                           l5020 1248  
                         l5012 11F6                           l5004 11D2                           l1397 3DAE  
                         l5102 462A                           l4038 496A                           l4070 3794  
                         l4062 3732                           l4054 36FC                           l4046 36AA  
                         l4118 3962                           l4230 2DA4                           l4222 2D40  
                         l4214 2D0E                           l4206 2CDA                           l4150 2B64  
                         l4142 2B3E                           l4134 2B1E                           l4126 2AEC  
                         l4310 27F0                           l4302 27AC                           l5022 1250  
                         l5006 11DA                           l5110 1BB8                           l5104 4638  
                         l5040 3540                           l5032 3508                           l4080 37DE  
                         l4072 37B4                           l4064 3746                           l4056 3700  
                         l4048 36CA                           l4400 40F8                           l4240 2E10  
                         l4232 2DB2                           l4224 2D6E                           l4208 2CF0  
                         l4216 2D20                           l4160 2B9E                           l4152 2B74  
                         l4144 2B44                           l4136 2B20                           l4128 2AEE  
                         l4320 2832                           l4312 27FC                           l4304 27B6  
                         l5024 1260                           l5016 122A                           l5008 11EA  
                         l5120 1C24                           l5112 1BDC                           l1489 47CA  
                         l5106 4640                           l5050 3596                           l5042 3576  
                         l5034 351C                           l4082 37FE                           l4074 37B6  
                         l4066 3754                           l4058 370C                           l4090 3832  
                         l4410 411E                           l4402 4100                           l4250 2E5E  
                         l4242 2E2A                           l4234 2DDC                           l4218 2D2E  
                         l4162 2BB4                           l4154 2B84                           l4146 2B52  
                         l4138 2B28                           l4330 2894                           l4322 283E  
                         l4314 2808                           l4306 27CC                           l1498 45FA  
                         l5026 1266                           l5018 123C                           l5210 218A  
                         l5130 1CA4                           l5122 1C5A                           l5114 1BEA  
                         l5108 464E                           l5300 43A6                           l5060 3610  
                         l5052 359E                           l5044 357A                           l5036 3520  
                         l4076 37C8                           l4068 3766                           l4092 3852  
                         l4420 4156                           l4412 4126                           l4404 4104  
                         l4252 2E60                           l4244 2E46                           l4228 2D98  
                         l4236 2DE0                           l4180 2C08                           l4164 2BC4  
                         l4172 2BE4                           l4156 2B86                           l4148 2B54  
                         l4500 3C2A                           l4340 292A                           l4332 28A0  
                         l4324 284E                           l4316 2816                           l4308 27D8  
                         l4260 26A8                           l5204 2144                           l5140 1D2A  
                         l5124 1C68                           l5116 1BFC                           l5220 21B0  
                         l5230 49BA                           l5302 43D6                           l5054 35A6  
                         l5038 3524                           l4078 37CE                           l4094 3856  
                         l4086 3820                           l4430 4182                           l4422 415C  
                         l4414 4138                           l4406 4112                           l4246 2E4A  
                         l4238 2DFA                           l4190 2C5A                           l4182 2C22  
                         l4174 2BF4                           l4166 2BCC                           l4158 2B8E  
                         l4510 3CAE                           l4502 3C38                           l4350 2980  
                         l4342 2948                           l4334 28BC                           l4326 2868  
                         l4318 2822                           l4270 26E4                           l4262 26B4  
                         l5222 21D4                           l5206 2168                           l5214 2196  
                         l5150 1DC4                           l5142 1D38                           l5134 1CEC  
                         l5126 1C76                           l5118 1C00                           l5310 46C2  
                         l5232 49C0                           l5240 48F8                           l5304 43DA  
                         l5064 364E                           l5056 35DA                           l5048 3580  
                         l4096 3864                           l4088 3824                           l3800 3F68  
                         l4424 4172                           l4416 4140                           l4432 4188  
                         l4408 411A                           l4440 41AA                           l4248 2E58  
                         l4192 2C6A                           l4184 2C32                           l4176 2BF4  
                         l4168 2BD0                           l4504 3C4A                           l4360 29EA  
                         l4352 2984                           l4344 2952                           l4336 28E6  
                         l4328 2878                           l4280 2716                           l4272 26F4  
                         l4264 26C2                           l4600 3D44                           l5080 3DE6  
                         l5216 21A4                           l5208 2176                           l5160 1E50  
                         l5144 1D5C                           l5128 1C96                           l5136 1CFE  
                         l5312 46CA                           l5400 1354                           l5320 499E  
                         l5234 49C2                           l5330 337C                           l5250 490C  
                         l5242 48FA                           l5066 3660                           l4098 3884  
                         l3802 3F7A                           l4434 4198                           l4426 417A  
                         l4418 4148                           l4450 41D6                           l4442 41AE  
                         l4194 2C7E                           l4186 2C42                           l4506 3C58  
                         l4370 2A4C                           l4362 29F6                           l4354 2992  
                         l4346 2960                           l4338 291C                           l4290 2756  
                         l4282 2724                           l4274 26FA                           l4266 26C4  
                         l4514 4844                           l4530 3AFC                           l4522 3AA8  
                         l4610 3DA6                           l5090 3E62                           l5082 3DF4  
                         l5074 3DB0                           l5170 1F0C                           l5162 1E82  
                         l5154 1E0C                           l5146 1D96                           l5138 1D22  
                         l5314 46E6                           l5306 46AA                           l5410 13A8  
                         l5402 1364                           l5322 49A0                           l5236 49D0  
                         l5228 49B8                           l5340 33CE                           l5332 338A  
                         l5252 4912                           l5244 4902                           l5068 3672  
                         l3804 3F84                           l4700 2FDC                           l4436 41A0  
                         l4428 417C                           l4460 420E                           l4452 41DE  
                         l4444 41BC                           l4196 2C8C                           l4188 2C52  
                         l4508 3CA8                           l4380 2AB4                           l4372 2A60  
                         l4364 2A04                           l4356 29C0                           l4348 2972  
                         l4292 275C                           l4284 2726                           l4276 270A  
                         l4268 26D4                           l4516 485A                           l3900 2398  
                         l3820 2214                           l3812 21E8                           l4532 3AFE  
                         l4524 3ABE                           l4604 3D50                           l5084 3E0C  
                         l5076 3DDA                           l5180 1FB4                           l5172 1F54  
                         l5164 1E92                           l5148 1DB6                           l5156 1E1E  
                         l5260 4486                           l5308 46BA                           l6124 1B68  
                         l5500 1592                           l5420 1400                           l5412 13B8  
                         l5404 1374                           l5324 49A2                           l5094 45FE  
                         l5350 3426                           l5342 33E2                           l5334 339E  
                         l5326 3362                           l5254 4914                           l5246 4904  
                         l5238 48EC                           l5270 492A                           l6126 35C4  
                         l3806 3FA2                           l4710 3084                           l4702 2FE2  
                         l4470 4248                           l4462 4224                           l4454 41F0  
                         l4446 41C4                           l4198 2C98                           l4382 2AB6  
                         l4374 2A7A                           l4366 2A2E                           l4294 277C  
                         l4286 2736                           l4278 2710                           l4518 486A  
                         l3910 23C2                           l3902 23A4                           l3830 224E  
                         l3822 2224                           l3814 21F4                           l4390 4742  
                         l4534 3B0E                           l4606 3D62                           l4630 3170  
                         l4614 45A0                           l4622 4576                           l5086 3E28  
                         l5190 204C                           l5182 1FC2                           l5166 1EC4  
                         l5158 1E40                           l5262 4494                           l5510 15F0  
                         l5502 159C                           l5430 1426                           l5422 1404  
                         l5414 13C8                           l5406 1384                           l5318 499A  
                         ?_pad 0011                           l5096 460C                           l5360 3478  
                         l5352 3434                           l5344 33F0                           l5336 33AC  
                         l5328 336E                           l5256 491C                           l5248 490A  
                         l5280 4938                           l5272 492C                           l3808 3FD8  
                         l4720 30EA                           l4712 309E                           l4704 2FE8  
                         l4472 4250                           l4464 422C                           l4456 41F8  
                         l4448 41C8                           l4480 4298                           l4376 2A96  
                         l4384 2ABC                           l4368 2A32                           l4296 278C  
                         l4288 2746                           l3920 2418                           l3912 23E4  
                         l3904 23A8                           l3840 227C                           l3832 2254  
                         l3824 2234                           l3816 2202                           l4392 4752  
                         l4560 3B8C                           l4544 3B38                           l4536 3B12  
                         l4528 3AD2                           l4640 3258                           l4632 31C6  
                         l4616 45B0                           l4624 4588                           l4800 090C  
                         l5088 3E3A                           l5184 1FF2                           l5176 1F8C  
                         l5168 1EE8                           l5264 44BA                           l5600 182E  
                         l5520 1616                           l5512 15F2                           l5504 15B8  
                         l5432 1430                           l5424 1412                           l5440 1450  
                         l5416 13CE                           l5408 1398                           l5098 4614  
                         l5370 34D0                           l5362 348C                           l5354 3448  
                         l5346 3404                           l5338 33C0                           l5290 444C  
                         l5282 441A                           l5274 492E                           l5266 4922  
                         l4570 4044                           l4722 30F0                           l4730 3126  
                         l4714 30B8                           l4706 304C                           l4466 4232  
                         l4458 4200                           l4482 42C6                           l4386 2AC0  
                         l4378 2AA6                           l3930 2452                           l3922 2426  
                         l3914 23F4                           l3906 23B6                           l3850 22B0  
                         l3842 227E                           l3834 2266                           l3826 2236  
                         l3818 2204                           l4562 3B9C                           l4554 3B60  
                         l4546 3B42                           l4538 3B20                           l4650 3340  
                         l4642 3294                           l4634 31DA                           l4618 4540  
                         l4810 0996                           l4802 0926                           l5194 20BA  
                         l5178 1F9E                           l5258 447E                           l5610 1880  
                         l5602 183E                           l5530 1644                           l5522 1618  
                         l5514 15F6                           l5506 15C4                           l5450 147C  
                         l5442 145E                           l5434 143A                           l5426 1422  
                         l5418 13FE                           l5372 34DE                           l5364 349A  
                         l5356 3456                           l5348 3412                           l5292 445E  
                         l5284 442A                           l5276 4930                           l5268 4926  
                         l4660 4658                           l4580 408A                           l4572 4052  
                         l4724 3102                           l4708 3066                           l4716 30C8  
                         l4396 40E6                           l4468 4238                           l4484 42D6  
                         l4476 425A                           l4492 3BAE                           l3940 24BE  
                         l3932 2454                           l3924 2434                           l3908 23B8  
                         l3860 22EC                           l3844 228E                           l3852 22B8  
                         l3836 2268                           l3828 223E                           l4556 3B6C  
                         l4548 3B4C                           l4652 3350                           l4636 31E8  
                         l4644 32C8                           l4628 3150                           l4900 0E34  
                         l4820 0A6E                           l4812 09F0                           l4740 0700  
                         l5196 20CC                           l5188 201E                           l5620 18C0  
                         l5612 1888                           l5604 1850                           l5540 1670  
                         l5532 1646                           l5516 1604                           l5524 1622  
                         l5460 14A6                           l5452 1486                           l5444 146E  
                         l5436 1442                           l5428 1424                           l5380 129E  
                         l5710 49FC                           l5374 34F2                           l5366 34AE  
                         l5358 346A                           l5294 4470                           l5286 443C  
                         l5278 4934                           l4662 465C                           l4590 47E6  
                         l4582 40B8                           l4574 405E                           l4566 4020  
                         l4726 310E                           l4718 30DA                           l4398 40EA  
                         l4486 42FA                           l4478 4288                           l4494 3BDC  
                         l3950 2516                           l3942 24C0                           l3934 245E  
                         l3926 2440                           l3918 2408                           l3870 2300  
                         l3862 22F0                           l3854 22C8                           l3846 229E  
                         l3838 226E                           l4558 3B7C                           l4646 3304  
                         l4910 0EEC                           l4902 0E48                           l4830 0AB8  
                         l4822 0A72                           l4814 0A24                           l4806 095C  
                         l4750 0750                           l4742 0708                           l4734 06D8  
                         l5198 2100                           l5630 18F0                           l5622 18C2  
                         l5614 1896                           l5606 1856                           l5550 16BC  
                         l5542 168C                           l5526 1632                           l5534 1650  
                         l5518 1614                           l5470 14F8                           l5462 14B2  
                         l5454 148E                           l5446 1470                           l5438 144A  
                         l5390 12F0                           l5382 12A8                           l5720 4342  
                         l5712 4304                           l5376 3500                           l5368 34BC  
                         l5296 4476                           l5288 4442                           l4656 487C  
                         l4664 4670                           l4584 40CC                           l4576 4072  
                         l4568 4030                           l4728 3116                           l4680 2EE4  
                         l4672 2E6C                           l4488 4300                           l4496 3BEC  
                         l3960 2544                           l3944 24D0                           l3928 2444  
                         l3936 2464                           l3880 2314                           l3872 2304  
                         l3864 22F4                           l3856 22DA                           l3848 22AE  
                         l4592 3CB2                           l4648 3318                           l4920 0F38  
                         l4912 0EFE                           l4904 0E54                           l4840 0AF4  
                         l4824 0A84                           l4832 0AD0                           l4816 0A2C  
                         l4808 0990                           l4760 0788                           l4752 075E  
                         l4744 072C                           l4736 06E2                           l5640 1948  
                         l5632 18FC                           l5624 18D2                           l5616 18A4  
                         l5608 186E                           l5560 16D8                           l5552 16C6  
                         l5544 1698                           l5536 165A                           l5528 1642  
                         l5480 153C                           l5472 1518                           l5464 14BC  
                         l5456 1496                           l5448 1472                           l5392 1304  
                         l5384 12B4                           l5730 4374                           l5722 4352  
                         l5714 431E                           l5298 439A                           l4666 469E  
                         l4578 4086                           l4690 2F3C                           l4682 2EE6  
                         l4674 2E8C                           l4498 3C1A                           l3962 2552  
                         l3954 252A                           l3970 2570                           l3938 248A  
                         l3946 24E0                           l3882 2318                           l3874 2308  
                         l3866 22F8                           l3858 22E8                           l3890 2328  
                         l4594 3CD2                           l4930 0F6C                           l4922 0F46  
                         l4914 0F10                           l4906 0E78                           l4850 0B5A  
                         l4842 0B10                           l4826 0A96                           l4818 0A5E  
                         l4770 07EE                           l4762 078C                           l4754 0770  
                         l4746 0736                           l4738 06F2                           l5650 19D0  
                         l5642 197A                           l5634 1906                           l5618 18BE  
                         l5626 18D6                           l5570 1726                           l5562 16E2  
                         l5554 16D2                           l5538 1666                           l5490 156C  
                         l5482 153E                           l5474 151A                           l5466 14D8  
                         l5458 149C                           l5394 130C                           l5386 12BE  
                         l5378 1288                           l5740 4392                           l5732 437A  
                         l5724 4358                           l5716 4324                           l4668 46A2  
                         l4588 47CC                           l4692 2F42                           l4684 2F00  
                         l4676 2EB4                           l3964 255A                           l3956 2534  
                         l3948 2506                           l3972 257E                           l3892 232C  
                         l3884 231C                           l3876 230C                           l3868 22FC  
                         l4596 3D10                           l4940 0F9E                           l4932 0F7C  
                         l4924 0F56                           l4916 0F1E                           l4908 0EDC  
                         l4860 0BA2                           l4852 0B6C                           l4844 0B46  
                         l4828 0A9E                           l4772 0800                           l4756 077C  
                         l4764 0792                           l4748 073E                           l5660 1A30  
                         l5652 19D2                           l5644 197E                           l5636 192C  
                         l5628 18E6                           l5580 177C                           l5572 1736  
                         l5564 16EA                           l5556 16D4                           l5548 16B0  
                         l5492 156E                           l5484 1542                           l5476 151E  
                         l5468 14E4                           l5396 1326                           l5388 12E4  
                         l5900 3EC0                           l5734 4380                           l5726 4368  
                         l5718 433C                           l5742 49D4                           l3798 3F56  
                         l4694 2F4A                           l4686 2F1C                           l4678 2ED4  
                         l3982 25D0                           l3990 2626                           l3974 2582  
                         l3966 255E                           l3958 2542                           l3894 2356  
                         l3886 2320                           l3878 2310                           l4598 3D38  
                         l4950 1046                           l4942 0FB0                           l4934 0F80  
                         l4926 0F5A                           l4918 0F26                           l4870 0BEA  
                         l4862 0BB0                           l4854 0B7E                           l4846 0B4E  
                         l4838 0AE2                           l4790 08D4                           l4774 081C  
                         l4766 07B8                           l4782 0866                           l4758 0784  
                         l5670 1AAE                           l5662 1A3A                           l5646 19B2  
                         l5638 1938                           l5654 1A06                           l5590 17E0  
                         l5582 179A                           l5574 1738                           l5566 16F4  
                         l5558 16D6                           l5494 1572                           l5478 152C  
                         l5486 154C                           l5398 1338                           l5750 49F6  
                         l5910 3F04                           l5902 3ED0                           l5736 4386  
                         l5728 436E                           l5744 49D8                           l4696 2F54  
                         l4688 2F2E                           l3992 2636                           l3984 25DC  
                         l3976 2590                           l3968 256E                           l3896 2372  
                         l3888 2324                           l4960 109E                           l4952 104E  
                         l4944 0FB4                           l4936 0F86                           l4928 0F60  
                         l4880 0CFE                           l4872 0BFA                           l4864 0BC8  
                         l4856 0B8C                           l4848 0B52                           l4792 08F0  
                         l4784 088C                           l4776 0834                           l5680 1B06  
                         l5672 1AB2                           l5664 1A60                           l5656 1A1A  
                         l5648 19C2                           l5592 17EC                           l5584 17A4  
                         l5576 1758                           l5568 171A                           l5488 155C  
                         l5496 157C                           l5760 3A5C                           l5752 49F8  
                         l5912 3F18                           l5904 3EE0                           l5920 3F4A  
                         l5738 438C                           l4698 2F5A                           l3994 2646  
                         l3986 25EA                           l3978 25A6                           l3898 2382  
                         l4970 10E2                           l4962 10AC                           l4938 0F8C  
                         l4946 0FBA                           l4954 1052                           l4890 0D9E  
                         l4874 0C0E                           l4882 0D04                           l4866 0BDA  
                         l4858 0B90                           l4778 083E                           l5674 1AE6  
                         l5666 1A6C                           l5658 1A24                           l5682 1B3A  
                         l5594 17FC                           l5586 17B0                           l5578 176A  
                         l5498 1586                           l5746 4974                           l5770 3A7E  
                         l5762 3A5E                           l5754 3984                           l5914 3F1C  
                         l5906 3EF0                           l3996 2666                           l3988 2624  
                         l4980 1118                           l4972 10EA                           l4964 10BC  
                         l4956 1070                           l4948 1012                           l4892 0DD0  
                         l4884 0D22                           l4876 0C72                           l4868 0BE2  
                         l4788 08C2                           l5676 1AF6                           l5668 1A7C  
                         l5596 17FE                           l5588 17BA                           l5780 44E8  
                         l5772 3A96                           l5764 3A60                           l5756 3A58  
                         l5748 49EA                           l5916 3F2C                           l5908 3EF4  
                         l3998 266A                           l4990 1174                           l4982 1120  
                         l4974 10FA                           l4966 10C0                           l4958 108C  
                         l4894 0DE0                           l4886 0D56                           l4878 0CCA  
                         l5678 1B04                           l5598 181E                           l5790 4516  
                         l5782 44F8                           l5774 3A9E                           l5766 3A6A  
                         l5758 3A5A                           l5918 3F42                           l4992 117C  
                         l4984 112C                           l4976 1102                           l4968 10D0  
                         l4896 0DF0                           l4888 0D88                           l5688 1B52  
                         l5792 4522                           l5784 44FA                           l5776 44E0  
                         l5768 3A74                           l4986 1132                           l4994 1182  
                         l4978 1110                           l4898 0E24                           l5794 4530  
                         l5786 4506                           l5778 44E4                           l5890 3E96  
                         l5882 3E86                           l4996 1194                           l4988 1158  
                         l5796 4532                           l5788 4514                           l5892 3E9A  
                         l5884 3E8A                           l4998 11AE                           l5894 3E9E  
                         l5886 3E8E                           l5896 3EAE                           l5888 3E92  
                         l5898 3EB0                           STR_1 0635                           STR_2 069A  
                         STR_3 0668                           STR_4 0601                           STR_5 0679  
                         STR_6 0601                           STR_7 0624                           STR_8 0601  
                         STR_9 0646                           u4000 248A                           u4001 2486  
                         u4010 24D0                           u4011 24CC                           u4100 25BC  
                         u4020 2506                           u4101 25B8                           u4021 2502  
                         u4110 25D0                           u4030 2516                           u4111 25CC  
                         u4031 2512                           u4200 48DC                           u4120 25EA  
                         u4040 2542                           u5000 3AF2                           u4201 48D8  
                         u4121 25E6                           u4041 253E                           u4130 2624  
                         u4050 2552                           u5010 3B20                           u4210 483C  
                         u4131 2620                           u4051 254E                           u5011 3B1C  
                         u4211 4836                           u4300 3832                           u5100 47E6  
                         u4140 2636                           u4060 256E                           u5020 3B34  
                         u4220 483E                           u4301 382E                           u5101 47E2  
                         u4141 2632                           u4061 256A                           u5021 3B30  
                         u5005 3AE8                           u4230 36AA                           u4310 3864  
                         u4150 2646                           u4070 257E                           u5030 3B5C  
                         u5110 3CF2                           u4231 36A6                           u4311 3860  
                         u4151 2642                           u4071 257A                           u5031 3B58  
                         u4240 36DC                           u4320 38A2                           u4400 2B64  
                         u4160 2666                           u4080 2590                           u5040 3B7C  
                         u5120 3D10                           u5200 4570                           u6000 11C6  
                         u4241 36D8                           u4321 389E                           u4401 2B60  
                         u4161 2662                           u4081 258C                           u5041 3B78  
                         u5121 3D0C                           u5201 456A                           u6001 11C2  
                         u4330 38CC                           u4410 2B74                           u4170 2678  
                         u4090 25A6                           u5050 3B8C                           u5130 3D38  
                         u5210 4572                           u6010 1224                           u4251 3706  
                         u4331 38C8                           u4411 2B70                           u4171 2674  
                         u4091 25A2                           u5051 3B88                           u5131 3D34  
                         u5115 3CE8                           u6011 121E                           u6100 3672  
                         u4260 372A                           u4340 38FA                           u5060 4030  
                         u4500 2D2E                           u4420 2BB4                           u4180 2694  
                         u5140 3D62                           u5300 32E8                           u5220 4588  
                         u6020 1226                           u6101 366E                           u4261 3726  
                         u4341 38F6                           u5061 402C                           u4501 2D2A  
                         u4421 2BB0                           u4181 2690                           u5141 3D5E  
                         u5221 4584                           u4270 3754                           u4350 3942  
                         u4190 47CA                           u5070 4052                           u4510 2D40  
                         u4430 2BF4                           u5310 3304                           u5230 3198  
                         u6030 123C                           u6110 3DDA                           u4271 3750  
                         u4351 393E                           u4191 47C6                           u5071 404E  
                         u4511 2D3C                           u4431 2BF0                           u5311 3300  
                         u6031 1238                           u6111 3DD6                           u6040 3540  
                         u4280 3794                           u5080 40A8                           u5400 2EE4  
                         u4520 2D6E                           u4440 2C6A                           u4360 2AEC  
                         u4600 26D4                           u3800 2202                           u5160 3D9C  
                         u5320 3340                           u5240 31C6                           u6120 3E0C  
                         u6200 1BDC                           u7000 1614                           u6041 353C  
                         u4281 3790                           u5081 40A4                           u5401 2EE0  
                         u4521 2D6A                           u4441 2C66                           u4361 2AE8  
                         u4601 26D0                           u3801 21FE                           u5161 3D96  
                         u5321 333C                           u5305 32DE                           u5241 31C2  
                         u6121 3E08                           u6201 1BD8                           u7001 1610  
                         u5330 48AC                           u6050 3576                           u4290 37DE  
                         u5090 40B8                           u5410 2F00                           u4530 2D84  
                         u4450 2C8C                           u4370 2AFE                           u4610 26E4  
                         u3810 2214                           u5170 3D9E                           u5250 31E8  
                         u6130 3E28                           u6210 1C24                           u7010 1632  
                         u5331 48A6                           u6051 3572                           u4291 37DA  
                         u5091 40B4                           u5411 2EFC                           u4531 2D80  
                         u4451 2C88                           u4371 2AFA                           u4611 26E0  
                         u3811 2210                           u5155 3D74                           u5251 31E4  
                         u5235 318E                           u6131 3E24                           u6211 1C20  
                         u7011 162E                           u5340 48AE                           u6060 3592  
                         u5500 30EA                           u5420 2F2E                           u4540 2D98  
                         u4460 2CB6                           u4380 2B0E                           u4700 2992  
                         u4620 2724                           u3900 236E                           u3820 2224  
                         u5180 45E8                           u6140 3E3A                           u6300 1E1E  
                         u6220 1C68                           u7100 1850                           u7020 1642  
                         u6061 358E                           u5501 30E6                           u5421 2F2A  
                         u4541 2D94                           u4461 2CB2                           u4381 2B0A  
                         u4701 298E                           u4621 2720                           u3901 2368  
                         u3821 2220                           u6141 3E36                           u6301 1E1A  
                         u6221 1C64                           u7101 184C                           u7021 163E  
                         u5350 4670                           u6070 3648                           u5510 3102  
                         u5430 2F3C                           u4550 2DB2                           u4470 2CDA  
                         u4390 2B52                           u4710 29C0                           u4630 2736  
                         u3910 2370                           u3830 2266                           u5270 3254  
                         u5190 45FA                           u6150 3E62                           u6310 1E50  
                         u6230 1CE4                           u7110 1880                           u7030 16AC  
                         u5351 466C                           u6071 3642                           u5511 30FE  
                         u5431 2F38                           u4551 2DAE                           u4471 2CD6  
                         u4391 2B4E                           u4711 29BC                           u4631 2732  
                         u3831 2262                           u5271 3250                           u5191 45F6  
                         u6151 3E5E                           u6311 1E4C                           u6231 1CDE  
                         u7111 187C                           u7031 16A8                           u6160 460C  
                         u5360 469E                           u6080 364A                           u3760 3F68  
                         u5440 3066                           u4800 4138                           u4560 2DFA  
                         u4480 2CF0                           u4720 29D6                           u4640 2746  
                         u3920 2398                           u3840 227C                           u5280 3278  
                         u5600 088C                           u5520 0700                           u6400 2168  
                         u6320 1E92                           u6240 1CE6                           u7200 19D0  
                         u7120 1896                           u7040 1736                           u6161 4608  
                         u5361 469A                           u3761 3F64                           u5441 3062  
                         u4801 4134                           u4561 2DF6                           u4481 2CEC  
                         u4721 29D2                           u4641 2742                           u3921 2394  
                         u3841 2278                           u5265 31FC                           u5601 0888  
                         u5521 06FC                           u6401 2164                           u6321 1E8E  
                         u7201 19CC                           u7121 1892                           u7041 1732  
                         u6170 4622                           u6090 3660                           u3770 3F7A  
                         u5450 3084                           u5370 2E9C                           u4810 4156  
                         u4570 2E2A                           u4490 2D0E                           u4730 29EA  
                         u4650 277C                           u3930 23B6                           u3850 228E  
                         u5290 3294                           u5266 3206                           u5610 08BA  
                         u5530 0750                           u6330 1EE8                           u6250 1CFE  
                         u6410 44D6                           u7210 1A1A                           u7130 18A4  
                         u7050 176A                           u6171 461E                           u6091 365C  
                         u3771 3F76                           u5451 3080                           u5371 2E96  
                         u4811 4152                           u4571 2E26                           u4491 2D0A  
                         u4731 29E6                           u4651 2778                           u3931 23B2  
                         u3851 228A                           u5291 3290                           u5267 3216  
                         u5187 45DE                           u5611 08B4                           u5531 074C  
                         u6331 1EE4                           u6251 1CFA                           u6411 44D2  
                         u7211 1A16                           u7131 18A0                           u7051 1766  
                         u6180 4638                           u6500 337C                           u6420 4948  
                         u3780 3FA2                           u5460 309E                           u5380 2E9E  
                         u4820 4172                           u4580 2E58                           u4900 4288  
                         u4740 2A04                           u4660 278C                           u3940 23D6  
                         u3860 229E                           u5700 0ADE                           u5620 08BC  
                         u5540 075E                           u6340 1F0C                           u6260 1D22  
                         u7220 1A7C                           u7140 18BE                           u7060 17FC  
                         u7300 4514                           u6181 4634                           u6501 3378  
                         u6421 4944                           u3781 3F9E                           u5461 309A  
                         u4821 416E                           u4581 2E54                           u4901 4284  
                         u4741 2A00                           u4661 2788                           u3941 23D2  
                         u3861 229A                           u5285 326E                           u5701 0ADA  
                         u5541 075A                           u6341 1F08                           u6261 1D1E  
                         u7221 1A78                           u7141 18BA                           u7061 17F8  
                         u7301 4510                           u6190 464E                           u6510 338A  
                         u6430 442A                           u3790 3FD8                           u5470 30B8  
                         u5390 2EB4                           u4830 4198                           u4910 42C6  
                         u4750 2A4C                           u4670 2906                           u4590 26C2  
                         u3950 23E4                           u3870 22DA                           u5710 0AF4  
                         u5630 08D4                           u5550 0770                           u6350 1F9E  
                         u6270 1D5C                           u7230 1AAE                           u7150 18D2  
                         u7070 181E                           u7310 4530                           u6191 464A  
                         u6511 3386                           u6431 4426                           u3791 3FD4  
                         u5471 30B4                           u5391 2EB0                           u4831 4194  
                         u4911 42C2                           u4751 2A48                           u4591 26BE  
                         u3951 23E0                           u3871 22D6                           u5711 0AF0  
                         u5631 08D0                           u5551 076C                           u6351 1F9A  
                         u6271 1D58                           u7231 1AAA                           u7151 18CE  
                         u7071 181A                           u7311 452C                           u6600 3426  
                         u6520 339E                           u6440 445E                           u5480 30C8  
                         u4840 41BC                           u4920 42FA                           u4760 2A7A  
                         u4680 2960                           u3960 23F4                           u3880 22E8  
                         u5800 0D22                           u5720 0B10                           u5640 0958  
                         u5560 07B8                           u6360 204C                           u6280 1E04  
                         u7240 1AF6                           u7160 18E6                           u7080 182E  
                         u7400 3F42                           u6601 3422                           u6521 339A  
                         u6441 445A                           u5481 30C4                           u4841 41B8  
                         u4921 42F6                           u4761 2A76                           u4681 295C  
                         u3961 23F0                           u3881 22E4                           u5801 0D1E  
                         u5721 0B0C                           u5641 0954                           u5561 07B4  
                         u6361 2048                           u6281 1DFE                           u7241 1AF2  
                         u7161 18E2                           u7081 182A                           u7401 3F3E  
                         u6610 3434                           u6530 33AC                           u6450 43D2  
                         u5490 30DA                           u4850 41D6                           u4930 3BDC  
                         u4770 2AB4                           u4690 2980                           u3970 2426  
                         u3890 2356                           u5810 0D88                           u5730 0B46  
                         u5650 09EC                           u5570 07E6                           u6370 20B2  
                         u6290 1E06                           u7250 1B04                           u7170 1948  
                         u7090 183E                           u6611 3430                           u6531 33A8  
                         u5491 30D6                           u4851 41D2                           u4931 3BD8  
                         u4771 2AB0                           u4691 297C                           u4675 28FC  
                         u3971 2422                           u3891 2352                           u5811 0D84  
                         u5731 0B42                           u5651 09E8                           u5571 07E0  
                         u6371 20AC                           u7251 1B00                           u7171 1944  
                         u7091 183A                           u6700 34D0                           u6620 3448  
                         u6540 33C0                           u6460 4406                           u4780 40F8  
                         u4860 41F0                           u4940 3C1A                           u3980 2434  
                         u5900 0F46                           u5820 0DD0                           u5740 0B6C  
                         u5660 0A5E                           u5580 07E8                           u6380 20B4  
                         u7260 1B4E                           u7180 197A                           u7340 3EAE  
                         u6701 34CC                           u6621 3444                           u6541 33BC  
                         u4781 40F4                           u4861 41EC                           u4941 3C16  
                         u3981 2430                           u5901 0F42                           u5821 0DCC  
                         u5741 0B68                           u5661 0A5A                           u7261 1B4A  
                         u7181 1976                           u7341 3EAA                           u6710 34DE  
                         u6630 3456                           u6550 33CE                           u6470 4416  
                         u4790 4112                           u4870 420E                           u4950 3C38  
                         u3990 2452                           u5910 0F9E                           u5830 0DE0  
                         u5750 0B7E                           u5670 0A84                           u5590 0800  
                         u6390 20CC                           u7190 19C2                           u7350 3EC0  
                         u6711 34DA                           u6631 3452                           u6551 33CA  
                         u6471 4412                           u4791 410E                           u4871 420A  
                         u4951 3C34                           u3991 244E                           u5911 0F9A  
                         u5831 0DDC                           u5751 0B7A                           u5671 0A80  
                         u5591 07FC                           u6391 20C8                           u7191 19BE  
                         u7351 3EBC                           u7280 49E8                           u6720 34F2  
                         u6640 346A                           u6560 33E2                           u4880 4224  
                         u4960 3C58                           u5920 1070                           u5840 0E48  
                         u5760 0B8C                           u5680 0A96                           u6800 1374  
                         u6480 49B2                           u7360 3ED0                           u7281 49E4  
                         u6721 34EE                           u6641 3466                           u6561 33DE  
                         u6457 43C8                           u4881 4220                           u4961 3C54  
                         u5921 106C                           u5841 0E44                           u5761 0B88  
                         u5681 0A92                           u6801 1370                           u6481 49AE  
                         u7361 3ECC                           u6730 3500                           u6650 3478  
                         u6570 33F0                           u4890 4248                           u4970 3CA8  
                         u5930 108C                           u5850 0EEC                           u5770 0BA2  
                         u5690 0AB8                           u6810 1384                           u7290 44F8  
                         u7370 3EE0                           u6731 34FC                           u6651 3474  
                         u6571 33EC                           u6491 3368                           u6467 43FC  
                         u4891 4244                           u4971 3CA4                           u5931 1088  
                         u5851 0EE8                           u5771 0B9E                           u5691 0AB4  
                         u6811 1380                           u7291 44F4                           u7371 3EDC  
                         u6660 348C                           u6580 3404                           u4980 485A  
                         u5940 109E                           u5860 0EFE                           u5780 0BB0  
                         u6900 146E                           u6820 1398                           u7380 3EF0  
                         u6661 3488                           u6581 3400                           u4981 4856  
                         u5941 109A                           u5861 0EFA                           u5781 0BAC  
                         u6901 146A                           u6821 1394                           u6741 128E  
                         u7381 3EEC                           u6670 349A                           u6590 3412  
                         u4990 3ABE                           u5950 10AC                           u5870 0F10  
                         u5790 0BDA                           u6910 14F8                           u6830 13A8  
                         u6750 1304                           u7390 3F18                           u6671 3496  
                         u6591 340E                           u4991 3ABA                           u5951 10A8  
                         u5871 0F0C                           u5791 0BD6                           u6911 14F4  
                         u6831 13A4                           u6751 1300                           u7391 3F14  
                         u6680 34AE                           u5960 10E2                           u5880 0F1E  
                         u6920 1518                           u6840 13B8                           u6760 1326  
                         u6681 34AA                           u5961 10DE                           u5881 0F1A  
                         u6921 1514                           u6841 13B4                           u6761 1322  
                         u6690 34BC                           u5970 1110                           u5890 0F38  
                         u6930 152C                           u6850 13C8                           u6770 1338  
                         u7707 4348                           u6691 34B8                           u5971 110C  
                         u5891 0F34                           u6931 1528                           u6851 13C4  
                         u6771 1334                           u5980 1194                           u6940 153C  
                         u6860 13FE                           u6780 1354                           u7717 435E  
                         u5981 1190                           u6941 1538                           u6861 13FA  
                         u6781 1350                           u5990 11AE                           u6950 155C  
                         u6870 1412                           u6790 1364                           u7727 49C8  
                         u5991 11AA                           u6951 1558                           u6871 140E  
                         u6791 1360                           u6960 156C                           u6880 1422  
                         u6961 1568                           u6881 141E                           u6970 15D8  
                         u6890 145E                           u6971 15D4                           u6891 145A  
                         u7667 3A88                           u6980 15F0                           u7677 4906  
                         u6981 15EC                           u6990 1604                           u7687 4916  
                         u6991 1600                           u7697 432E                           _TMR2 000FBC  
                         abs@a 0013              ?_Lcd_Write_String 0005                           _dbuf 01AB  
                         _atoi 3508                           _main 3E86                           _dtoa 2E6C  
                         _prec 00EB                           _nout 00E7                           pad@i 0018  
                         pad@p 0015                           fsr0h 000FEA                           fsr1h 000FE2  
                         indf0 000FEF                           fsr2h 000FDA                           fsr0l 000FE9  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001A  
                         fsr2l 000FD9                           btemp 005F                  ___fpclassifyf 3CB2  
                         prodh 000FF4                           prodl 000FF3                           start 0066  
           ??_Lcd_Write_String 0007                ___fldiv@new_exp 0012                __end_of_Lcd_Cmd 49D4  
                 _tolower$3031 000D                   ___param_bank 000000                          ??_abs 0015  
                        ??_pad 0017                   ?_menuControl 0001                  ___fltol@sign1 0009  
              __end_of___aodiv 3820                          ?_atoi 0008                __end_of___fladd 26A8  
                        ?_main 0001                          ?_dtoa 001C                __end_of___aomod 3984  
              __end_of___fldiv 2E6C                __end_of___awdiv 41AA                __end_of___flneg 487C  
                        _EEADR 000FA9                          STR_10 068A                          STR_11 0657  
                        STR_12 068A                          STR_21 06C8                          STR_13 0613  
                        STR_22 06D0                          STR_14 06A9                          STR_15 0613  
                        STR_16 06B7                          STR_25 06D4                          STR_17 06C4  
                        STR_18 06CC                          STR_27 06D4                __end_of___awmod 425A  
              __end_of___flmul 2AD2                __end_of___flsub 4788                __end_of___fltol 3BAE  
                        _T0CON 000FD5                ___awdiv@divisor 0003                          i2l489 0062  
              ___awdiv@counter 0005                   vfpfcnvrt@fmt 0042                          _TMR0H 000FD7  
                        _TMR0L 000FD6        __size_of_Lcd_Set_Cursor 0066                          _flags 00ED  
                        _fputc 3F56                          _fputs 4788                __end_of_isdigit 48B4  
                 _adc_raw_data 0193                          atoi@n 0015                          pad@fp 0011  
                        atoi@s 0008                          _width 00E9                          _putch 4A12  
                        dtoa@d 001E                          dtoa@i 003E                          dtoa@n 0036  
                        dtoa@p 0030                          dtoa@s 0034                          dtoa@w 0032  
              __end_of_isspace 46AA                __end_of_isupper 4844                          tablat 000FF5  
                        ttemp5 0060                          ttemp6 0063                          ttemp7 0067  
                        status 000FD8                          wtemp8 0060                __end_of_sprintf 46FA  
               ?___fpclassifyf 0001                __end_of_tolower 45A0                __end_of_strncmp 3E86  
             __end_of_Lcd_Port 4658                __initialization 46FA                    _system_init 3984  
                 __end_of_atoi 3698                   __end_of_main 3F56                   __end_of_dtoa 3150  
                       ??_atoi 000A                         ??_main 005E                         ??_dtoa 0026  
           __size_of_Lcd_Clear 000E                  __activetblptr 000002                         _ADCON0 000FC2  
                       _ADCON1 000FC1                         ?_fputc 0001                         ?_fputs 000A  
                       _ADRESH 000FC4                         _ADRESL 000FC3                         _EEDATA 000FA8  
                       _CCPR1L 000FBE                         _CCPR2L 000F67                         _EECON2 000FA7  
             ___awdiv@dividend 0001                         ?_putch 0001                         _ANSELB 000F39  
                       i2l6000 004C                         i2l6002 005C                         i2l6004 0060  
                       i2l5990 0028                         i2l5992 0030                         i2l5984 000A  
                       i2l5994 0034                         i2l5986 0018                         i2l5996 0042  
                       i2l5988 0026                         i2l5998 0048                      ??_Lcd_Cmd 0002  
                       _TIMER0 0008        __size_of_Lcd_Write_Char 0036             _timer_counter_flag 00F5  
         __size_of_eepromWrite 002E                   vfprintf@cfmt 0050               __end_of_lcd_init 439A  
                       ___flge 3BAE                         ___fleq 425A                      ??___aodiv 0011  
                    ??___fladd 0009                      ??___aomod 0011                         ___wmul 494E  
                    ??___fldiv 0009                      ??___awdiv 0005                      ??___flneg 0005  
                    ??___awmod 0005                      ??___flmul 0009                      ??___flsub 0022  
                    ??___fltol 0005                         _efgtoa 06D8                         _floorf 3150  
             __end_of_mcu_init 49EA                         clear_0 4720                         clear_1 472C  
              eepromWrite@data 0001               ___awdiv@quotient 0007                ___awmod@divisor 0003  
              ___awmod@counter 0005                         pad@buf 0013                         dtoa@fp 001C  
                       _strcpy 45A0                         _strlen 48B4                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
                    ??_isdigit 0003                ___fpclassifyf@e 0009                ___fpclassifyf@u 000B  
              ___fpclassifyf@x 0001                   __mediumconst 0000                      ??_isspace 0003  
                       tblptrh 000FF7                      ??_isupper 0003                         tblptrl 000FF6  
                       tblptru 000FF8                         putch@c 0001               __end_of_vfprintf 44E0  
                    ??_sprintf 0052                      ??_tolower 0009                      ??_strncmp 0007  
   __end_of_buttonControlFlags 3508                Lcd_Set_Cursor@a 0005                Lcd_Set_Cursor@b 0004  
              Lcd_Set_Cursor@y 0007                Lcd_Set_Cursor@z 0006                     ___flge@ff1 001A  
                   ___flge@ff2 001E                ??___fpclassifyf 0005                     ___fleq@ff1 0001  
                   ___fleq@ff2 0005                     __accesstop 0060        __end_of__initialization 4734  
                   ___flneg@f1 0001              __end_of_Lcd_Clear 4A0A                  ___rparam_used 000001  
                   ___fltol@f1 0001                 __pcstackCOMRAM 0001                   __pidataBANK0 4A0A  
                __end_of_fputc 4020                  __end_of_fputs 47CC                  __end_of_putch 4A14  
               _Lcd_Set_Cursor 4418              eepromRead@address 0001           __size_of_menuControl 0060  
                    ?_Lcd_Port 0001                        ??_fputc 0005                        ??_fputs 000E  
                      ??_putch 0001                     __pbssBANK0 00C6                     __pbssBANK1 0100  
                      ?_TIMER0 0001                        ?___flge 001A                        ?___fleq 0001  
                      ?___wmul 0001                        ?_efgtoa 002E                        _CCP1CON 000FBD  
                      _CCP2CON 000F66                        ?_floorf 001A      __size_of_Lcd_Write_String 007E  
       __end_of_Lcd_Set_Cursor 447E                        ?_strcpy 0001                        ?_strlen 0001  
                   _eepromRead 4998             __size_of_vfpfcnvrt 0630                     ??_Lcd_Port 0001  
                    ?_lcd_init 0001        __size_of_menuInitialize 0024                  _menu_selected 00F1  
               _Lcd_Write_Char 48EA                        _Lcd_Cmd 49B6                      ?_mcu_init 0001  
              __size_of_TIMER0 005E              stateMachine@F6402 0163                     _controller 0150  
                      __Hparam 0000                        __Lparam 0000                   ?_system_init 0001  
              __size_of___flge 0104                __size_of___fleq 00AA                        ___aodiv 3698  
                      ___fladd 21E8                        ___aomod 3820                        ___fldiv 2AD2  
                      ___awdiv 40E6                        ___flneg 4844                        ___awmod 41AA  
                      ___flmul 26A8                        ___flsub 4742                        ___fltol 3AA8  
              __size_of___wmul 0026                      ?_vfprintf 004A                   __psmallconst 0600  
              __size_of_efgtoa 0BB0                __size_of_floorf 0212                        __pcinit 46FA  
                      __ramtop 0600                ?_Lcd_Set_Cursor 0004                        __ptext0 3E86  
                      __ptext1 49EA                        __ptext2 3984                        __ptext3 4998  
                      __ptext4 4974                        __ptext5 44E0                        __ptext6 1288  
                      __ptext7 46AA                        __ptext8 447E                        __ptext9 1BB8  
                   _menu_flags 00F0                     _menu_value 00E4                __size_of_strcpy 005C  
              __size_of_strlen 0036                        _counter 01A7        stateMachine@textCursor2 00B6  
                    _T2CONbits 000FBA                   __size_of_abs 0040                   __size_of_pad 00C6  
                      _isdigit 487C               ___awmod@dividend 0001                        _isspace 4658  
                      _isupper 480C                        efgtoa@c 0034                        efgtoa@d 0078  
                      efgtoa@e 0090                        efgtoa@f 0030                        efgtoa@g 008C  
                      efgtoa@h 0082                        efgtoa@i 008A                        efgtoa@l 0086  
                      efgtoa@m 0074                        efgtoa@n 0092                        efgtoa@p 007C  
                      efgtoa@t 0070                        efgtoa@u 0094                        efgtoa@w 007F  
                      atoi@neg 000E                  ?_timer_0_init 0001                        _sprintf 46AA  
                      _tolower 4540                     ??_lcd_init 0004         __end_of_Lcd_Write_Char 4920  
                      _strncmp 3DB0           end_of_initialization 4734                        floorf@e 0028  
                      floorf@m 0024                        floorf@u 002A                        floorf@x 001A  
                      fputc@fp 0003                     ??_mcu_init 0001                  __Lmediumconst 0000  
                      fputs@fp 000C              __end_of_vfpfcnvrt 21E8                     efgtoa@mode 0081  
                   efgtoa@sign 007A                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                    Lcd_Port@a 0001                     ??_vfprintf 0050                        strcpy@d 0009  
                      strlen@a 0003                        strcpy@s 0007                        strlen@s 0001  
                    _PORTAbits 000F80                      _PORTBbits 000F81                      _PORTDbits 000F83  
                    _PORTEbits 000F84                    ?_eepromRead 0001                    ___fladd@grs 0010  
                    _TRISAbits 000F92                      _TRISBbits 000F93                      _TRISCbits 000F94  
                    _TRISDbits 000F95                      _TRISEbits 000F96                 ??_timer_0_init 0001  
                  ___fldiv@grs 0014                    ___fldiv@rem 000D                ?_Lcd_Write_Char 0001  
            Lcd_Write_String@a 0005              Lcd_Write_String@i 0009                    ___flmul@grs 000E  
                ??_eepromWrite 0002       _button_bounce_controller 005E                 __end_of_TIMER0 0066  
                ?_stateMachine 0001             _buttonControlFlags 3362                      _Lcd_Clear 49FC  
                 _convert_data 0100                 __end_of___flge 3CB2                 __end_of___fleq 4304  
                  vfpfcnvrt@ap 0044                    vfpfcnvrt@ct 00AA                    vfpfcnvrt@fp 0040  
                  vfpfcnvrt@ll 0098                 __end_of___wmul 4974               _Lcd_Write_String 439A  
               __end_of_efgtoa 1288            ?_buttonControlFlags 0001                 __end_of_floorf 3362  
                   floorf@F524 00DC                 __end_of_strcpy 45FC                 __end_of_strlen 48EA  
          start_initialization 46FA                    __end_of_abs 480C                    __end_of_pad 40E6  
               _menuInitialize 4974                   _driver_limit 00C6              __size_of_Lcd_Port 005C  
         ??_buttonControlFlags 0001                       ??_TIMER0 0001          __end_of___fpclassifyf 3DB0  
               ??_stateMachine 005C            __size_of_eepromRead 001E                    vfprintf@fmt 004C  
                   ?_Lcd_Clear 0001                       ??___flge 0022                       ??___fleq 0009  
          __end_of_eepromWrite 494E                       ??___wmul 0005  buttonControlFlags@textCursor2 0001  
                     ??_efgtoa 0035                    __pdataBANK0 00F6                       ??_floorf 001E  
         __size_of_system_init 0124                Lcd_Write_Char@a 0004                Lcd_Write_Char@y 0003  
                ??_menuControl 005E                       ??_strcpy 0005                       ??_strlen 0003  
                    ___fladd@a 0005                      ___fladd@b 0001                      ___fldiv@a 0005  
                    ___fldiv@b 0001                      ___flmul@a 0005                      ___flmul@b 0001  
                  __pbssCOMRAM 005E                      ___flsub@a 001E                      ___flsub@b 001A  
       __end_of_menuInitialize 4998                  __pcstackBANK0 0060               ___aodiv@dividend 0001  
                     ?_Lcd_Cmd 0001              __size_of_lcd_init 0096                      _atoi$2936 0010  
                    _atoi$2937 0014                      _atoi$2938 0012              __size_of_mcu_init 0016  
                  _efgtoa$2870 0066                    _efgtoa$2880 006E                    _efgtoa$2874 0068  
                  _efgtoa$2869 0064                    _efgtoa$2878 006A                    _efgtoa$2879 006C  
                    _dtoa$2845 002E  stateMachine@secretMenuCounter 00EF               ??_Lcd_Set_Cursor 0005  
                    __pintcode 0008           __end_of_timer_0_init 49FC                       ?___aodiv 0001  
                     ?___fladd 0001                       ?___aomod 0001                       ?___fldiv 0001  
                     ?___awdiv 0001               ___aodiv@quotient 0013                       ?___flneg 0001  
                     ?___awmod 0001                       ?___flmul 0001                       ?___flsub 001A  
                     ?___fltol 0001              __size_of_vfprintf 0062                      fabsf@F463 01A3  
                  __smallconst 0600                       ?_isdigit 0001                       ?_isspace 0001  
              ?_menuInitialize 0001                       ?_isupper 0001            __end_of_menuControl 4540  
                     ?_sprintf 00AE                       ?_tolower 0007                 __size_of_fputc 00CA  
               __size_of_fputs 0044                       ?_strncmp 0001                 __size_of_putch 0002  
           eepromWrite@address 0002                 ___wmul@product 0005                       _LATAbits 000F89  
                     _LATBbits 000F8A                       _LATEbits 000F8D                    _eepromWrite 4920  
                     Lcd_Cmd@a 0003                       _PIR2bits 000FA1                       i2u750_40 0026  
                     i2u750_41 0022                       i2u751_40 0042                       i2u751_41 003E  
                     i2u752_40 005C                       i2u752_41 0058                       i2u749_40 0018  
                     i2u749_41 0014                    ??_Lcd_Clear 0004                   _pauseIsClick 00F4  
                    _vfpfcnvrt 1BB8                     _ADCON0bits 000FC2                     _ADCON2bits 000FC0  
            ___wmul@multiplier 0001                   ??_eepromRead 0001               ??_Lcd_Write_Char 0002  
         __end_of_stateMachine 1BB8                   _isspace$2967 0007                       _Lcd_Port 45FC  
                   vfpfcnvrt@c 00AD                     vfpfcnvrt@f 00A6                      copy_data0 470E  
     __end_of_Lcd_Write_String 4418               __size_of_Lcd_Cmd 001E                     _EECON1bits 000FA6  
                     __Hrparam 0000                     vfprintf@ap 004E                       __Lrparam 0000  
                   vfprintf@fp 004A             __end_of_eepromRead 49B6        buttonControlFlags@F6398 0173  
             __size_of___aodiv 0188               __size_of___fladd 04C0               __size_of___aomod 0164  
             __size_of___fldiv 039A               __size_of___awdiv 00C4               __size_of___flneg 0038  
             __size_of___awmod 00B0               __size_of___flmul 042A               __size_of___flsub 0046  
             __size_of___fltol 0106                     ?_vfpfcnvrt 0040                    _menuControl 44E0  
              ___aodiv@divisor 0009                ___aodiv@counter 0011                     _ANSELAbits 000F38  
                   _ANSELBbits 000F39                     _ANSELCbits 000F3A                     _ANSELDbits 000F3B  
                   _ANSELEbits 000F3C             ___fpclassifyf@F463 00E0                     sprintf@fmt 00B0  
             __size_of_isdigit 0038               __size_of_isspace 0052                       __ptext10 3DB0  
                     __ptext11 06D8                       __ptext20 4844                       __ptext12 4540  
                     __ptext21 26A8                       __ptext13 480C                       __ptext30 4788  
                     __ptext22 3BAE                       __ptext14 45A0                       __ptext31 3F56  
                     __ptext23 425A                       __ptext15 3150                       __ptext40 4920  
                     __ptext32 4A12                       __ptext24 2AD2                       __ptext16 3CB2  
                     __ptext41 439A                       __ptext33 47CC                       __ptext25 41AA  
                     __ptext17 3AA8                       __ptext42 48EA                       __ptext34 3820  
                     __ptext26 40E6                       __ptext18 4742                       __ptext43 4418  
                     __ptext35 3698                       __ptext27 2E6C                       __ptext19 21E8  
                     __ptext44 3362                       __ptext36 3508                       __ptext28 4020  
                     __ptext45 49D4                       __ptext37 4658                       __ptext29 48B4  
                     __ptext46 4304                       __ptext38 487C                       __ptext47 49FC  
                     __ptext39 494E                       __ptext48 49B6                       __ptext49 45FC  
             __size_of_isupper 0038                       _lcd_init 4304               __size_of_sprintf 0050  
             __size_of_tolower 0060                     strcpy@dest 0001               __size_of_strncmp 00D6  
                     _mcu_init 49D4                  __size_of_atoi 0190                  __size_of_main 00D0  
                __size_of_dtoa 02E4          __size_of_timer_0_init 0012                       efgtoa@fp 002E  
                     efgtoa@ne 0076                       efgtoa@pp 0072                       efgtoa@ou 0060  
                     int$flags 005F                       _vfprintf 447E               ___aomod@dividend 0001  
               _vfpfcnvrt$2900 00A4                 _vfpfcnvrt$2894 00A0                 _vfpfcnvrt$2895 00A2  
                  _OSCTUNEbits 000F9B                     _INTCONbits 000FF2                       isdigit@c 0001  
                 _timer_0_init 49EA             Lcd_Write_Char@temp 0002                       intlevel2 0000  
                    sprintf@ap 0054    __size_of_buttonControlFlags 01A6                       isspace@c 0001  
                    strcpy@src 0003                       isupper@c 0001                      strncmp@_l 0001  
                    strncmp@_r 0003                     _OSCCONbits 000FD3                  ??_system_init 0002  
                  efgtoa@nmode 007E                   _procces_data 0130                ___aomod@divisor 0009  
                  ??_vfpfcnvrt 0046                ___aomod@counter 0011             Lcd_Set_Cursor@temp 0008  
             ??_menuInitialize 0001          __size_of_stateMachine 0930                       sprintf@f 0056  
                     tolower@c 0007                       sprintf@s 00AE         __size_of___fpclassifyf 00FE  
                     strncmp@l 0008                       strncmp@n 0005                       strncmp@r 000A  
                  _timer_value 00D2                  ___fladd@signs 000D                   ___aodiv@sign 0012  
                  _textCursor2 0183                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
                 ?_eepromWrite 0001                   ___aomod@sign 0012                   _stateMachine 1288  
