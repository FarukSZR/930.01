Version 4.0 HI-TECH Software Intermediate Code
"78 ./fs_menu_controller.h
[; ;./fs_menu_controller.h: 78: {
[s S854 `a 1 `a 1 `a 1 `a 1 `a 1 `a 1 ]
[n S854 . menu start stop pause decrease increase ]
"110
[; ;./fs_menu_controller.h: 110: tE_menu_selected menu_selected = {0};
[c E6344 0 1 2 3 4 5 6 7 8 .. ]
[n E6344 . MAIN_MENU DRIVER_TIME_SETTING STOP_TIME_SETTING SPEED_LIMIT_SETTING STOP_MENU START_MENU PAUSE_MENU EXIT_LINE SECRET_MENU  ]
"68
[; ;./fs_menu_controller.h: 68: {
[s S853 `a 1 `a 1 `a 1 `a 1 `a 1 `a 1 ]
[n S853 . menu_input_flag menu_start_flag menu_stop_flag menu_pause_flag menu_increase_flag menu_decrease_flag ]
"102
[; ;./fs_menu_controller.h: 102: {
[s S855 `uc 1 `uc 1 `uc 1 ]
[n S855 . driver_time stop_time speed_limit ]
"43 ./fs_timer.h
[; ;./fs_timer.h: 43: {
[s S856 :1 `uc 1 ]
[n S856 . one_second_flag ]
"48
[; ;./fs_timer.h: 48: {
[s S857 `uc 1 `uc 1 `uc 1 `c 1 `uc 1 `uc 1 `us 1 ]
[n S857 . second minute remainingSecond remainingMinute menu_login_delay adc_conversion_time second_counter ]
"58 ./fs_adc.h
[; ;./fs_adc.h: 58: {
[s S858 `us 1 `us 1 `us 1 `us 1 `us 1 `us 1 `us 1 `us 1 ]
[n S858 . channel_0 channel_1 channel_2 channel_3 channel_4 channel_5 channel_6 channel_7 ]
"70
[; ;./fs_adc.h: 70: {
[s S859 `f 1 `f 1 `f 1 `f 1 `f 1 `f 1 `f 1 `f 1 ]
[n S859 . channel_0 channel_1 channel_2 channel_3 channel_4 channel_5 channel_6 channel_7 ]
"82
[; ;./fs_adc.h: 82: {
[s S860 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `us 1 `us 1 `us 1 `us 1 `us 1 `us 1 `us 1 `us 1 ]
[n S860 . convert_channel_0 convert_channel_1 convert_channel_2 convert_channel_3 convert_channel_4 convert_channel_5 convert_channel_6 convert_channel_7 convert_channel_0_f convert_channel_1_f convert_channel_2_f convert_channel_3_f convert_channel_4_f convert_channel_5_f convert_channel_6_f convert_channel_7_f ]
"103
[; ;./fs_adc.h: 103: {
[s S861 `ul 1 `ul 1 `f 1 ]
[n S861 . pay payda ortalama ]
"57 ./fs_speed_controller.h
[; ;./fs_speed_controller.h: 57: {
[s S862 `s 1 `s 1 `us 1 `s 1 `s 1 `f 1 `f 1 `uc 1 ]
[n S862 . error lastError motorSpeed leftMotorSpeed rightMotorSpeed left right driver_safety_check ]
"43 ./fs_pwm.h
[; ;./fs_pwm.h: 43: void PWM1_setDC(int16_t dutycycle);
[v _PWM1_setDC `(v ~T0 @X0 0 ef1`s ]
"44
[; ;./fs_pwm.h: 44: void PWM2_setDC(int16_t dutycycle);
[v _PWM2_setDC `(v ~T0 @X0 0 ef1`s ]
"53 ./fs_adc.h
[; ;./fs_adc.h: 53: void scanAdcConversion(void);
[v _scanAdcConversion `(v ~T0 @X0 0 ef ]
"55
[; ;./fs_adc.h: 55: void calculatedAverageValue(void);
[v _calculatedAverageValue `(v ~T0 @X0 0 ef ]
"54 C:/Program Files (x86)/Microchip/MPLABX/v5.40/packs/Microchip/PIC18F-K_DFP/1.4.87/xc8\pic\include\proc/pic18f45k22.h
[; <" ANSELA equ 0F38h ;# ">
"99
[; <" ANSELB equ 0F39h ;# ">
"149
[; <" ANSELC equ 0F3Ah ;# ">
"200
[; <" ANSELD equ 0F3Bh ;# ">
"262
[; <" ANSELE equ 0F3Ch ;# ">
"294
[; <" PMD2 equ 0F3Dh ;# ">
"332
[; <" PMD1 equ 0F3Eh ;# ">
"397
[; <" PMD0 equ 0F3Fh ;# ">
"474
[; <" VREFCON2 equ 0F40h ;# ">
"479
[; <" DACCON1 equ 0F40h ;# ">
"576
[; <" VREFCON1 equ 0F41h ;# ">
"581
[; <" DACCON0 equ 0F41h ;# ">
"696
[; <" VREFCON0 equ 0F42h ;# ">
"701
[; <" FVRCON equ 0F42h ;# ">
"790
[; <" CTMUICON equ 0F43h ;# ">
"795
[; <" CTMUICONH equ 0F43h ;# ">
"940
[; <" CTMUCONL equ 0F44h ;# ">
"945
[; <" CTMUCON1 equ 0F44h ;# ">
"1094
[; <" CTMUCONH equ 0F45h ;# ">
"1099
[; <" CTMUCON0 equ 0F45h ;# ">
"1206
[; <" SRCON1 equ 0F46h ;# ">
"1268
[; <" SRCON0 equ 0F47h ;# ">
"1339
[; <" CCPTMRS1 equ 0F48h ;# ">
"1391
[; <" CCPTMRS0 equ 0F49h ;# ">
"1465
[; <" T6CON equ 0F4Ah ;# ">
"1536
[; <" PR6 equ 0F4Bh ;# ">
"1556
[; <" TMR6 equ 0F4Ch ;# ">
"1576
[; <" T5GCON equ 0F4Dh ;# ">
"1671
[; <" T5CON equ 0F4Eh ;# ">
"1780
[; <" TMR5 equ 0F4Fh ;# ">
"1787
[; <" TMR5L equ 0F4Fh ;# ">
"1807
[; <" TMR5H equ 0F50h ;# ">
"1827
[; <" T4CON equ 0F51h ;# ">
"1898
[; <" PR4 equ 0F52h ;# ">
"1918
[; <" TMR4 equ 0F53h ;# ">
"1938
[; <" CCP5CON equ 0F54h ;# ">
"2002
[; <" CCPR5 equ 0F55h ;# ">
"2009
[; <" CCPR5L equ 0F55h ;# ">
"2029
[; <" CCPR5H equ 0F56h ;# ">
"2049
[; <" CCP4CON equ 0F57h ;# ">
"2113
[; <" CCPR4 equ 0F58h ;# ">
"2120
[; <" CCPR4L equ 0F58h ;# ">
"2140
[; <" CCPR4H equ 0F59h ;# ">
"2160
[; <" PSTR3CON equ 0F5Ah ;# ">
"2236
[; <" ECCP3AS equ 0F5Bh ;# ">
"2241
[; <" CCP3AS equ 0F5Bh ;# ">
"2478
[; <" PWM3CON equ 0F5Ch ;# ">
"2548
[; <" CCP3CON equ 0F5Dh ;# ">
"2630
[; <" CCPR3 equ 0F5Eh ;# ">
"2637
[; <" CCPR3L equ 0F5Eh ;# ">
"2657
[; <" CCPR3H equ 0F5Fh ;# ">
"2677
[; <" SLRCON equ 0F60h ;# ">
"2721
[; <" WPUB equ 0F61h ;# ">
"2783
[; <" IOCB equ 0F62h ;# ">
"2822
[; <" PSTR2CON equ 0F63h ;# ">
"2962
[; <" ECCP2AS equ 0F64h ;# ">
"2967
[; <" CCP2AS equ 0F64h ;# ">
"3204
[; <" PWM2CON equ 0F65h ;# ">
"3274
[; <" CCP2CON equ 0F66h ;# ">
"3356
[; <" CCPR2 equ 0F67h ;# ">
"3363
[; <" CCPR2L equ 0F67h ;# ">
"3383
[; <" CCPR2H equ 0F68h ;# ">
"3403
[; <" SSP2CON3 equ 0F69h ;# ">
"3465
[; <" SSP2MSK equ 0F6Ah ;# ">
"3535
[; <" SSP2CON2 equ 0F6Bh ;# ">
"3680
[; <" SSP2CON1 equ 0F6Ch ;# ">
"3800
[; <" SSP2STAT equ 0F6Dh ;# ">
"4200
[; <" SSP2ADD equ 0F6Eh ;# ">
"4270
[; <" SSP2BUF equ 0F6Fh ;# ">
"4290
[; <" BAUDCON2 equ 0F70h ;# ">
"4295
[; <" BAUD2CON equ 0F70h ;# ">
"4552
[; <" RCSTA2 equ 0F71h ;# ">
"4557
[; <" RC2STA equ 0F71h ;# ">
"4840
[; <" TXSTA2 equ 0F72h ;# ">
"4845
[; <" TX2STA equ 0F72h ;# ">
"5092
[; <" TXREG2 equ 0F73h ;# ">
"5097
[; <" TX2REG equ 0F73h ;# ">
"5130
[; <" RCREG2 equ 0F74h ;# ">
"5135
[; <" RC2REG equ 0F74h ;# ">
"5168
[; <" SPBRG2 equ 0F75h ;# ">
"5173
[; <" SP2BRG equ 0F75h ;# ">
"5206
[; <" SPBRGH2 equ 0F76h ;# ">
"5211
[; <" SP2BRGH equ 0F76h ;# ">
"5244
[; <" CM2CON1 equ 0F77h ;# ">
"5249
[; <" CM12CON equ 0F77h ;# ">
"5366
[; <" CM2CON0 equ 0F78h ;# ">
"5371
[; <" CM2CON equ 0F78h ;# ">
"5646
[; <" CM1CON0 equ 0F79h ;# ">
"5651
[; <" CM1CON equ 0F79h ;# ">
"6068
[; <" PIE4 equ 0F7Ah ;# ">
"6100
[; <" PIR4 equ 0F7Bh ;# ">
"6132
[; <" IPR4 equ 0F7Ch ;# ">
"6172
[; <" PIE5 equ 0F7Dh ;# ">
"6204
[; <" PIR5 equ 0F7Eh ;# ">
"6236
[; <" IPR5 equ 0F7Fh ;# ">
"6282
[; <" PORTA equ 0F80h ;# ">
"6567
[; <" PORTB equ 0F81h ;# ">
"6837
[; <" PORTC equ 0F82h ;# ">
"7144
[; <" PORTD equ 0F83h ;# ">
"7387
[; <" PORTE equ 0F84h ;# ">
"7562
[; <" LATA equ 0F89h ;# ">
"7674
[; <" LATB equ 0F8Ah ;# ">
"7786
[; <" LATC equ 0F8Bh ;# ">
"7898
[; <" LATD equ 0F8Ch ;# ">
"8010
[; <" LATE equ 0F8Dh ;# ">
"8062
[; <" TRISA equ 0F92h ;# ">
"8067
[; <" DDRA equ 0F92h ;# ">
"8284
[; <" TRISB equ 0F93h ;# ">
"8289
[; <" DDRB equ 0F93h ;# ">
"8506
[; <" TRISC equ 0F94h ;# ">
"8511
[; <" DDRC equ 0F94h ;# ">
"8728
[; <" TRISD equ 0F95h ;# ">
"8733
[; <" DDRD equ 0F95h ;# ">
"8950
[; <" TRISE equ 0F96h ;# ">
"8955
[; <" DDRE equ 0F96h ;# ">
"9066
[; <" OSCTUNE equ 0F9Bh ;# ">
"9136
[; <" HLVDCON equ 0F9Ch ;# ">
"9141
[; <" LVDCON equ 0F9Ch ;# ">
"9416
[; <" PIE1 equ 0F9Dh ;# ">
"9493
[; <" PIR1 equ 0F9Eh ;# ">
"9570
[; <" IPR1 equ 0F9Fh ;# ">
"9647
[; <" PIE2 equ 0FA0h ;# ">
"9733
[; <" PIR2 equ 0FA1h ;# ">
"9819
[; <" IPR2 equ 0FA2h ;# ">
"9905
[; <" PIE3 equ 0FA3h ;# ">
"10015
[; <" PIR3 equ 0FA4h ;# ">
"10093
[; <" IPR3 equ 0FA5h ;# ">
"10171
[; <" EECON1 equ 0FA6h ;# ">
"10237
[; <" EECON2 equ 0FA7h ;# ">
"10257
[; <" EEDATA equ 0FA8h ;# ">
"10277
[; <" EEADR equ 0FA9h ;# ">
"10347
[; <" RCSTA1 equ 0FABh ;# ">
"10352
[; <" RCSTA equ 0FABh ;# ">
"10356
[; <" RC1STA equ 0FABh ;# ">
"10803
[; <" TXSTA1 equ 0FACh ;# ">
"10808
[; <" TXSTA equ 0FACh ;# ">
"10812
[; <" TX1STA equ 0FACh ;# ">
"11178
[; <" TXREG1 equ 0FADh ;# ">
"11183
[; <" TXREG equ 0FADh ;# ">
"11187
[; <" TX1REG equ 0FADh ;# ">
"11256
[; <" RCREG1 equ 0FAEh ;# ">
"11261
[; <" RCREG equ 0FAEh ;# ">
"11265
[; <" RC1REG equ 0FAEh ;# ">
"11334
[; <" SPBRG1 equ 0FAFh ;# ">
"11339
[; <" SPBRG equ 0FAFh ;# ">
"11343
[; <" SP1BRG equ 0FAFh ;# ">
"11412
[; <" SPBRGH1 equ 0FB0h ;# ">
"11417
[; <" SPBRGH equ 0FB0h ;# ">
"11421
[; <" SP1BRGH equ 0FB0h ;# ">
"11490
[; <" T3CON equ 0FB1h ;# ">
"11598
[; <" TMR3 equ 0FB2h ;# ">
"11605
[; <" TMR3L equ 0FB2h ;# ">
"11625
[; <" TMR3H equ 0FB3h ;# ">
"11645
[; <" T3GCON equ 0FB4h ;# ">
"11740
[; <" ECCP1AS equ 0FB6h ;# ">
"11745
[; <" ECCPAS equ 0FB6h ;# ">
"12122
[; <" PWM1CON equ 0FB7h ;# ">
"12127
[; <" PWMCON equ 0FB7h ;# ">
"12376
[; <" BAUDCON1 equ 0FB8h ;# ">
"12381
[; <" BAUDCON equ 0FB8h ;# ">
"12385
[; <" BAUDCTL equ 0FB8h ;# ">
"12389
[; <" BAUD1CON equ 0FB8h ;# ">
"13050
[; <" PSTR1CON equ 0FB9h ;# ">
"13055
[; <" PSTRCON equ 0FB9h ;# ">
"13200
[; <" T2CON equ 0FBAh ;# ">
"13271
[; <" PR2 equ 0FBBh ;# ">
"13291
[; <" TMR2 equ 0FBCh ;# ">
"13311
[; <" CCP1CON equ 0FBDh ;# ">
"13393
[; <" CCPR1 equ 0FBEh ;# ">
"13400
[; <" CCPR1L equ 0FBEh ;# ">
"13420
[; <" CCPR1H equ 0FBFh ;# ">
"13440
[; <" ADCON2 equ 0FC0h ;# ">
"13511
[; <" ADCON1 equ 0FC1h ;# ">
"13579
[; <" ADCON0 equ 0FC2h ;# ">
"13704
[; <" ADRES equ 0FC3h ;# ">
"13711
[; <" ADRESL equ 0FC3h ;# ">
"13731
[; <" ADRESH equ 0FC4h ;# ">
"13751
[; <" SSP1CON2 equ 0FC5h ;# ">
"13756
[; <" SSPCON2 equ 0FC5h ;# ">
"14105
[; <" SSP1CON1 equ 0FC6h ;# ">
"14110
[; <" SSPCON1 equ 0FC6h ;# ">
"14343
[; <" SSP1STAT equ 0FC7h ;# ">
"14348
[; <" SSPSTAT equ 0FC7h ;# ">
"14973
[; <" SSP1ADD equ 0FC8h ;# ">
"14978
[; <" SSPADD equ 0FC8h ;# ">
"15227
[; <" SSP1BUF equ 0FC9h ;# ">
"15232
[; <" SSPBUF equ 0FC9h ;# ">
"15281
[; <" SSP1MSK equ 0FCAh ;# ">
"15286
[; <" SSPMSK equ 0FCAh ;# ">
"15419
[; <" SSP1CON3 equ 0FCBh ;# ">
"15424
[; <" SSPCON3 equ 0FCBh ;# ">
"15541
[; <" T1GCON equ 0FCCh ;# ">
"15636
[; <" T1CON equ 0FCDh ;# ">
"15749
[; <" TMR1 equ 0FCEh ;# ">
"15756
[; <" TMR1L equ 0FCEh ;# ">
"15776
[; <" TMR1H equ 0FCFh ;# ">
"15796
[; <" RCON equ 0FD0h ;# ">
"15929
[; <" WDTCON equ 0FD1h ;# ">
"15957
[; <" OSCCON2 equ 0FD2h ;# ">
"16014
[; <" OSCCON equ 0FD3h ;# ">
"16097
[; <" T0CON equ 0FD5h ;# ">
"16167
[; <" TMR0 equ 0FD6h ;# ">
"16174
[; <" TMR0L equ 0FD6h ;# ">
"16194
[; <" TMR0H equ 0FD7h ;# ">
"16214
[; <" STATUS equ 0FD8h ;# ">
"16285
[; <" FSR2 equ 0FD9h ;# ">
"16292
[; <" FSR2L equ 0FD9h ;# ">
"16312
[; <" FSR2H equ 0FDAh ;# ">
"16319
[; <" PLUSW2 equ 0FDBh ;# ">
"16339
[; <" PREINC2 equ 0FDCh ;# ">
"16359
[; <" POSTDEC2 equ 0FDDh ;# ">
"16379
[; <" POSTINC2 equ 0FDEh ;# ">
"16399
[; <" INDF2 equ 0FDFh ;# ">
"16419
[; <" BSR equ 0FE0h ;# ">
"16426
[; <" FSR1 equ 0FE1h ;# ">
"16433
[; <" FSR1L equ 0FE1h ;# ">
"16453
[; <" FSR1H equ 0FE2h ;# ">
"16460
[; <" PLUSW1 equ 0FE3h ;# ">
"16480
[; <" PREINC1 equ 0FE4h ;# ">
"16500
[; <" POSTDEC1 equ 0FE5h ;# ">
"16520
[; <" POSTINC1 equ 0FE6h ;# ">
"16540
[; <" INDF1 equ 0FE7h ;# ">
"16560
[; <" WREG equ 0FE8h ;# ">
"16598
[; <" FSR0 equ 0FE9h ;# ">
"16605
[; <" FSR0L equ 0FE9h ;# ">
"16625
[; <" FSR0H equ 0FEAh ;# ">
"16632
[; <" PLUSW0 equ 0FEBh ;# ">
"16652
[; <" PREINC0 equ 0FECh ;# ">
"16672
[; <" POSTDEC0 equ 0FEDh ;# ">
"16692
[; <" POSTINC0 equ 0FEEh ;# ">
"16712
[; <" INDF0 equ 0FEFh ;# ">
"16732
[; <" INTCON3 equ 0FF0h ;# ">
"16824
[; <" INTCON2 equ 0FF1h ;# ">
"16894
[; <" INTCON equ 0FF2h ;# ">
"17011
[; <" PROD equ 0FF3h ;# ">
"17018
[; <" PRODL equ 0FF3h ;# ">
"17038
[; <" PRODH equ 0FF4h ;# ">
"17058
[; <" TABLAT equ 0FF5h ;# ">
"17080
[; <" TBLPTR equ 0FF6h ;# ">
"17087
[; <" TBLPTRL equ 0FF6h ;# ">
"17107
[; <" TBLPTRH equ 0FF7h ;# ">
"17127
[; <" TBLPTRU equ 0FF8h ;# ">
"17158
[; <" PCLAT equ 0FF9h ;# ">
"17165
[; <" PC equ 0FF9h ;# ">
"17172
[; <" PCL equ 0FF9h ;# ">
"17192
[; <" PCLATH equ 0FFAh ;# ">
"17212
[; <" PCLATU equ 0FFBh ;# ">
"17219
[; <" STKPTR equ 0FFCh ;# ">
"17325
[; <" TOS equ 0FFDh ;# ">
"17332
[; <" TOSL equ 0FFDh ;# ">
"17352
[; <" TOSH equ 0FFEh ;# ">
"17372
[; <" TOSU equ 0FFFh ;# ">
"33 ./fs_main.h
[p n 520 ]
"38
[p x FOSC = INTIO67 ]
"39
[p x PLLCFG = ON ]
"40
[p x PRICLKEN = ON ]
"41
[p x FCMEN = OFF ]
"42
[p x IESO = ON ]
"47
[p x PWRTEN = OFF ]
"48
[p x BOREN = SBORDIS ]
"49
[p x BORV = 190 ]
"52
[p x WDTEN = OFF ]
"53
[p x WDTPS = 32768 ]
"56
[p x CCP2MX = PORTC1 ]
"57
[p x PBADEN = OFF ]
"58
[p x CCP3MX = PORTB5 ]
"59
[p x HFOFST = ON ]
"60
[p x T3CMX = PORTC0 ]
"61
[p x P2BMX = PORTD2 ]
"62
[p x MCLRE = EXTMCLR ]
"65
[p x STVREN = OFF ]
"66
[p x LVP = ON ]
"67
[p x XINST = OFF ]
"70
[p x CP0 = OFF ]
"71
[p x CP1 = OFF ]
"72
[p x CP2 = OFF ]
"73
[p x CP3 = OFF ]
"76
[p x CPB = OFF ]
"77
[p x CPD = OFF ]
"80
[p x WRT0 = OFF ]
"81
[p x WRT1 = OFF ]
"82
[p x WRT2 = OFF ]
"83
[p x WRT3 = OFF ]
"86
[p x WRTC = OFF ]
"87
[p x WRTB = OFF ]
"88
[p x WRTD = OFF ]
"91
[p x EBTR0 = OFF ]
"92
[p x EBTR1 = OFF ]
"93
[p x EBTR2 = OFF ]
"94
[p x EBTR3 = OFF ]
"97
[p x EBTRB = OFF ]
"62 ./fs_menu_controller.h
[; ;./fs_menu_controller.h: 62: _Bool pauseIsClick = 0;
[v _pauseIsClick `a ~T0 @X0 1 e ]
[i _pauseIsClick
-> -> 0 `i `a
]
"63
[; ;./fs_menu_controller.h: 63: _Bool startIsClick = 0;
[v _startIsClick `a ~T0 @X0 1 e ]
[i _startIsClick
-> -> 0 `i `a
]
"64
[; ;./fs_menu_controller.h: 64: _Bool stopIsClick = 0;
[v _stopIsClick `a ~T0 @X0 1 e ]
[i _stopIsClick
-> -> 0 `i `a
]
"65
[; ;./fs_menu_controller.h: 65: uint8_t secretMenuCounter = 0;
[v _secretMenuCounter `uc ~T0 @X0 1 e ]
[i _secretMenuCounter
-> -> 0 `i `uc
]
"109
[; ;./fs_menu_controller.h: 109: tS_button_bounce_controller button_bounce_controller = {0};
[v _button_bounce_controller `S854 ~T0 @X0 1 e ]
[i _button_bounce_controller
:U ..
:U ..
-> -> 0 `i `a
..
..
]
"110
[; ;./fs_menu_controller.h: 110: tE_menu_selected menu_selected = {0};
[v _menu_selected `E6344 ~T0 @X0 1 e ]
[i _menu_selected
-> -> 0 `i `E6344
]
"111
[; ;./fs_menu_controller.h: 111: tS_menu_flags menu_flags = {0};
[v _menu_flags `S853 ~T0 @X0 1 e ]
[i _menu_flags
:U ..
:U ..
-> -> 0 `i `a
..
..
]
"112
[; ;./fs_menu_controller.h: 112: tS_menu_value menu_value = {0};
[v _menu_value `S855 ~T0 @X0 1 e ]
[i _menu_value
:U ..
:U ..
-> -> 0 `i `uc
..
..
]
"58 ./fs_timer.h
[; ;./fs_timer.h: 58: tS_timer_counter_flag timer_counter_flag = {0};
[v _timer_counter_flag `S856 ~T0 @X0 1 e ]
[i _timer_counter_flag
:U ..
:U ..
-> -> 0 `i `uc
..
..
]
"59
[; ;./fs_timer.h: 59: tS_timer_value timer_value = {0};
[v _timer_value `S857 ~T0 @X0 1 e ]
[i _timer_value
:U ..
:U ..
-> -> 0 `i `uc
..
..
]
"109 ./fs_adc.h
[; ;./fs_adc.h: 109: tS_adc_raw_data adc_raw_data;
[v _adc_raw_data `S858 ~T0 @X0 1 e ]
"110
[; ;./fs_adc.h: 110: tS_procces_data procces_data;
[v _procces_data `S859 ~T0 @X0 1 e ]
"111
[; ;./fs_adc.h: 111: tS_convert_data convert_data;
[v _convert_data `S860 ~T0 @X0 1 e ]
"112
[; ;./fs_adc.h: 112: tS_driver_limit driver_limit;
[v _driver_limit `S861 ~T0 @X0 1 e ]
"40 ./fs_speed_controller.h
[; ;./fs_speed_controller.h: 40: static float KP = 0.2;
[v _KP `f ~T0 @X0 1 s ]
[i _KP
-> .0.2 `f
]
"41
[; ;./fs_speed_controller.h: 41: static float KD = 1.0;
[v _KD `f ~T0 @X0 1 s ]
[i _KD
-> .1.0 `f
]
"71
[; ;./fs_speed_controller.h: 71: tS_controller controller;
[v _controller `S862 ~T0 @X0 1 e ]
"36 fs_speed_controller.c
[; ;fs_speed_controller.c: 36: void speedControl(float position)
[v _speedControl `(v ~T0 @X0 1 ef1`f ]
"37
[; ;fs_speed_controller.c: 37: {
{
[e :U _speedControl ]
"36
[; ;fs_speed_controller.c: 36: void speedControl(float position)
[v _position `f ~T0 @X0 1 r1 ]
"37
[; ;fs_speed_controller.c: 37: {
[f ]
"38
[; ;fs_speed_controller.c: 38:     float pos = 0;
[v _pos `f ~T0 @X0 1 a ]
[e = _pos -> -> 0 `i `f ]
"40
[; ;fs_speed_controller.c: 40:     pos = (float) position;
[e = _pos _position ]
"42
[; ;fs_speed_controller.c: 42:     controller.error = (int16_t)(position - 3400.0);
[e = . _controller 0 -> - -> _position `d .3400.0 `s ]
"43
[; ;fs_speed_controller.c: 43:     controller.motorSpeed = (int16_t) (KP * controller.error + KD * (controller.error - controller.lastError));
[e = . _controller 2 -> -> + * _KP -> -> . _controller 0 `i `f * _KD -> - -> . _controller 0 `i -> . _controller 1 `i `f `s `us ]
"44
[; ;fs_speed_controller.c: 44:     controller.lastError = controller.error;
[e = . _controller 1 . _controller 0 ]
"46
[; ;fs_speed_controller.c: 46:    controller.leftMotorSpeed =(int16_t) (200 + controller.motorSpeed + 70);
[e = . _controller 3 -> + + -> -> 200 `i `ui -> . _controller 2 `ui -> -> 70 `i `ui `s ]
"47
[; ;fs_speed_controller.c: 47:    controller.rightMotorSpeed =(int16_t) (200 - controller.motorSpeed);
[e = . _controller 4 -> - -> -> 200 `i `ui -> . _controller 2 `ui `s ]
"49
[; ;fs_speed_controller.c: 49:     if (controller.leftMotorSpeed < 50)
[e $ ! < -> . _controller 3 `i -> 50 `i 864  ]
"50
[; ;fs_speed_controller.c: 50:     {
{
"51
[; ;fs_speed_controller.c: 51:         controller.leftMotorSpeed = 50;
[e = . _controller 3 -> -> 50 `i `s ]
"52
[; ;fs_speed_controller.c: 52:     }
}
[e :U 864 ]
"54
[; ;fs_speed_controller.c: 54:     if (controller.rightMotorSpeed < 50)
[e $ ! < -> . _controller 4 `i -> 50 `i 865  ]
"55
[; ;fs_speed_controller.c: 55:     {
{
"56
[; ;fs_speed_controller.c: 56:       controller.rightMotorSpeed = 50;
[e = . _controller 4 -> -> 50 `i `s ]
"57
[; ;fs_speed_controller.c: 57:     }
}
[e :U 865 ]
"59
[; ;fs_speed_controller.c: 59:     if (controller.leftMotorSpeed > 350)
[e $ ! > -> . _controller 3 `i -> 350 `i 866  ]
"60
[; ;fs_speed_controller.c: 60:    {
{
"61
[; ;fs_speed_controller.c: 61:         controller.leftMotorSpeed = 350;
[e = . _controller 3 -> -> 350 `i `s ]
"62
[; ;fs_speed_controller.c: 62:     }
}
[e :U 866 ]
"64
[; ;fs_speed_controller.c: 64:     if (controller.rightMotorSpeed > 350)
[e $ ! > -> . _controller 4 `i -> 350 `i 867  ]
"65
[; ;fs_speed_controller.c: 65:     {
{
"66
[; ;fs_speed_controller.c: 66:         controller.rightMotorSpeed = 350;
[e = . _controller 4 -> -> 350 `i `s ]
"67
[; ;fs_speed_controller.c: 67:     }
}
[e :U 867 ]
"68
[; ;fs_speed_controller.c: 68: }
[e :UE 863 ]
}
"77
[; ;fs_speed_controller.c: 77: void stopMotor(void)
[v _stopMotor `(v ~T0 @X0 1 ef ]
"78
[; ;fs_speed_controller.c: 78: {
{
[e :U _stopMotor ]
[f ]
"79
[; ;fs_speed_controller.c: 79:     controller.rightMotorSpeed = 0;
[e = . _controller 4 -> -> 0 `i `s ]
"80
[; ;fs_speed_controller.c: 80:     controller.leftMotorSpeed = 0;
[e = . _controller 3 -> -> 0 `i `s ]
"81
[; ;fs_speed_controller.c: 81:     driver_limit.ortalama = 0;
[e = . _driver_limit 2 -> -> 0 `i `f ]
"82
[; ;fs_speed_controller.c: 82:     PWM1_setDC(controller.leftMotorSpeed);
[e ( _PWM1_setDC (1 . _controller 3 ]
"83
[; ;fs_speed_controller.c: 83:     PWM2_setDC(controller.rightMotorSpeed);
[e ( _PWM2_setDC (1 . _controller 4 ]
"84
[; ;fs_speed_controller.c: 84: }
[e :UE 868 ]
}
"93
[; ;fs_speed_controller.c: 93: void startMotor(void)
[v _startMotor `(v ~T0 @X0 1 ef ]
"94
[; ;fs_speed_controller.c: 94: {
{
[e :U _startMotor ]
[f ]
"95
[; ;fs_speed_controller.c: 95:         scanAdcConversion();
[e ( _scanAdcConversion ..  ]
"96
[; ;fs_speed_controller.c: 96:         calculatedAverageValue();
[e ( _calculatedAverageValue ..  ]
"97
[; ;fs_speed_controller.c: 97:         speedControl(driver_limit.ortalama);
[e ( _speedControl (1 . _driver_limit 2 ]
"98
[; ;fs_speed_controller.c: 98:         PWM1_setDC(controller.leftMotorSpeed);
[e ( _PWM1_setDC (1 . _controller 3 ]
"99
[; ;fs_speed_controller.c: 99:         PWM2_setDC(controller.rightMotorSpeed);
[e ( _PWM2_setDC (1 . _controller 4 ]
"100
[; ;fs_speed_controller.c: 100: }
[e :UE 869 ]
}
